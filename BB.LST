TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    1

       1                            .file   "bb.asm"
       3                            .width  132
       4                            .option b,d,l,t
       5                            .mnolist
       6                    
       7                    
       8                            .include        "mproc.equ"             ;Mproc equates
       9                            .include        "disp.equ"              ;Display proc equates
      10                            .include        "gsp.equ"               ;Gsp asm equates
      11                            .include        "sys.equ"
      12                            .include        "imgtbl.glo"
      13                            .include        "imgtblp.glo"
      14                            .include        "imgtbl2.glo"
      15                            .include        "imgpalp.asm"
      16                            .include        "imgpal2.asm"
      17                            .include        "game.equ"
      18                            .include        "audit.equ"
      19                            .include        "shawn.hdr"             ;Macros
      20                            .include        "court.tbl"
      21                            .include        "crowd.tbl"
      22                            .asg            0,SEQT
      23                            .include        "plyr.equ"
      24                    
      25                    
      26                    
      27                            .ref    snd_update
      28                            .ref    SOUNDSUP
      29                            .ref    QSNDRST
      30                    
      31 00000000     f9fe  tip_snd         .word   0f9feH,175,0818dH,0     ;Here's the tip
      32 00000040     f3ff  tuneq1_snd      .word   0f3ffH,08H,08002H,0     ;Quarter 1 tune
      33 00000080     f31f  eat_snd         .word   0f31fH,010H,080a7H,0    ;Suck up credit snd
      34 000000c0     f3ff  organ1_snd      .word   0f3ffH,08H,080aeH,0
      35 00000100     f3ff  organ2_snd      .word   0f3ffH,08H,080afH,0
      36                    
      37                    
      38                    
      39                            .ref    plyr_tourn
      40                            .ref    EB_H,JTO_H                      ;RA_H
      41                            .ref    original_names
      42                            .ref    fire_flags
      43                            .ref    pal_set
      44                            .ref    pal_find
      45                            .ref    RNDPER
      46                            .ref    TWOPLAYERS
      47                    
      48                            .ref    team1_control
      49                            .ref    team2_control
      50                            .ref    BTIME
      51                            .ref    plyrnumonfire
      52                            .ref    next_call                       ;# baskets before next score call
      53                            .ref    last_name_time
      54                            .ref    player_names
      55                            .ref    CYCLE_TABLE
      56                            .ref    pleasewt
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE    2

      57                            .ref    prt_credits
      58                            .ref    clock_speed
      59                            .ref    _4plyrsingame
      60                            .ref    snd_play1ovr
      61                            .ref    winningteam
      62                            .ref    winner_stays_on
      63                    
      64                            .ref    plyrbighead
      65                            .ref    idiot_bits
      66                            .ref    cntl_team,cntl_team_last,idiot_box
      67                            .ref    bracket_drw
      68                            .ref    sc_proc
      69                            .ref    ballpnumlast
      70                            .ref    ballprcv_p
      71                            .ref    inbound
      72                            .ref    ballsclastp
      73                            .ref    LED_00,LED_MAX
      74                            .ref    process_dispatch,cntrs_delay
      75                            .ref    gmqrtr,refill_turbo
      76                            .ref    plyr_lost
      77                            .ref    tm1set,tm2set
      78                    
      79                            .ref    CCOIN,RCOIN,SERVICE,SLAM_SW,XCOIN,LCOIN,DIAG
      80                    
      81                            .ref    CR_STRTP,CR_CONTP,P_START,P_CONT,GET_ADJ
      82                            .ref    dpageflip
      83                            .ref    conttimers
      84                            .ref    WIPEOUT,cr_cntrs_update
      85                            .ref    ENTERON
      86                    
      87                            .ref    LOWZ,BAKBITS
      88                            .ref    FONT7A,PALFRAM
      89                            .ref    UNIT_CLR
      90                            .ref    initials_entry
      91                            .ref    ISHSTD,INITIALS
      92                            .ref    hisclong
      93                    
      94                            .ref    gndstat,gndpos_t
      95                            .ref    STRCNRM
      96                            .ref    WDOGRAM
      97                            .ref    BAKMODS
      98                            .ref    STRLNRMO,HEXTOASC,WRLD,STRCNRMO,RD15FONT
      99                            .ref    FLASHME,RD7FONT
     100                            .ref    RNDRNG0
     101                            .ref    INIT_TAB
     102                            .ref    IRQSKYE
     103                            .ref    init_all,GET_AUD
     104                            .ref    READ_DIP
     105                            .ref    POWERTST
     106                            .ref    FRANIM,FRANIMQ
     107                            .ref    OBJOFF,OBJON,pal_getf
     108                            .ref    GETCPNT,BGND_UD1
     109                            .ref    AUD,AUD1,aud_addnumplyrs
     110                            .ref    prt_cr_timers
     111                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE    3

     112                            .ref    PSTATUS
     113                            .ref    P1DATA,P2DATA,P3DATA,P4DATA
     114                            .ref    plyrobj_t,plyrproc_t
     115                    
     116                            .ref    scores,game_time,prt_top_scores
     117                            .ref    shot_clock,clock_strt,score_add,score_showtvpanel
     118                            .ref    update_scorebrd
     119                            .ref    clear_player_stats,inc_player_stat
     120                            .ref    winner_stays_box
     121                    
     122                            .ref    plyr_start
     123                            .ref    joy_read
     124                            .ref    ball_main
     125                            .ref    gndx
     126                            .ref    team1,team2
     127                            .ref    oteam1
     128                            .ref    game_purchased
     129                            .ref    security_chk
     130                            .ref    assist_delay,assist_plyr
     131                    
     132                            .ref    CKDIAG,POWERCMOS,amode_start
     133                            .ref    dirqtimer
     134                    
     135                            .ref    system_restoregame,io_init
     136                    
     137                    
     138                    
     139                            .def    init_t1a,init_t2a,init_t3a,init_t4a
     140                            .def    timertcnt,PSTATUS2,COLRPRC
     141                            .def    OWINDOW,CWINDOW
     142                            .def    mainlp, swstacktop, swstack_p, PCMOSRET
     143                    
     144                    
     145                    
     146                            .if     DEBUG
     147                            BSSX    SLDEBUG         ,16     ;Shawn's debug
     148                            BSSX    slowmotion      ,16     ;!0=Frames of delay for slow motion
     149                            .endif
     150                    
     151 00000140                   BSSX    PCNT            ,16     ;Main loop cnt
     152                    
     153 00000140                   BSSX    swstack_p       ,32     ;*Stack position
     154 00000140                   BSSX    swstackbot      ,16*64  ;Bottom of stack
     155 00000430                   .bss    swstacktop      ,0      ;Top of stack
     156                    
     157 00000140                   BSSX    COLRTEMP        ,16*16  ;RAM COPY OF CYCLING COLORS
     158                    
     159 00000140                   BSSX    GAMSTATE        ,16     ;Game state: See game.equ
     160                    
     161 00000140                   BSSX    HALT            ,16     ;FREEZE ALL OBJECTS (NO VEL UPDATE)
     162 00000140                   BSSX    NO_START        ,16     ;FLAG 0=OKAY, 1=NOT RIGHT NOW.
     163                    
     164 00000140                   BSSX    PSTATUS2        ,16     ;Player has started game bits (0-3)
     165                                                            ;used to decide if this player must
     166                                                            ;pay 2 credits or just 1 credit to
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE    4

     167                                                            ;start!
     168                    
     169 00000140                   BSSX    WSPEED          ,16
     170 00000140                   BSSX    WFLG            ,16     ;0=NOT ON, 1=YES IT IS ON
     171 00000590                   .bss    WNDWFLG         ,16     ;0=WINDOW SHOULD CLOSE, 1=NO WINDOW
     172 00000140                   BSSX    OBJPTR          ,32     ;PNTR FOR WINDOW OBJECT
     173                    
     174                    
     175 000005c0                   .bss    PALTMP          ,13*16*2 ;ALLOCATE 2 X COLOR AREA IN RAM
     176                    
     177 00000760                   .bss    bigcrwd1_ptr,32 ;Big background crowd lft side
     178 00000780                   .bss    bigcrwd2_ptr,32 ;Big background crowd middle
     179 000007a0                   .bss    bigcrwd3_ptr,32 ;Big background crowd rgt side
     180 000007c0                   .bss    rimlf,32        ;rim/net left front img pntr for animation
     181 000007e0                   .bss    rimlb,32        ;rim/net left back
     182 00000800                   .bss    rimrf,32        ;rim/net rgt front
     183 00000820                   .bss    rimrb,32        ;rim/net rgt back
     184 00000840                   .bss    crwd1_ptr,32    ;lower left crowd ptr at top of court
     185 00000860                   .bss    crwd2_ptr,32    ;lower row rgt side
     186 00000880                   .bss    crwd3_ptr,32    ;2nd row, left side
     187 000008a0                   .bss    crwd4_ptr,32    ;2nd row, rgt side
     188 000008c0                   .bss    crwd5_ptr,32    ;3nd row, left side
     189 000008e0                   .bss    crwd6_ptr,32    ;3nd row, rgt side
     190 00000900                   .bss    sl1_ptr,32      ;side left botm
     191 00000920                   .bss    sl2_ptr,32      ;side left
     192 00000940                   .bss    sl3_ptr,32      ;side left
     193 00000960                   .bss    sl4_ptr,32      ;side left
     194 00000980                   .bss    sl5_ptr,32      ;side left
     195 000009a0                   .bss    sl6_ptr,32      ;side left
     196 000009c0                   .bss    sl7_ptr,32      ;side left
     197 000009e0                   .bss    sl8_ptr,32      ;side left top
     198                    
     199 00000a00                   .bss    sr1_ptr,32      ;side rgt botm
     200 00000a20                   .bss    sr2_ptr,32      ;side rgt
     201 00000a40                   .bss    sr3_ptr,32      ;side rgt
     202 00000a60                   .bss    sr4_ptr,32      ;side rgt
     203 00000a80                   .bss    sr5_ptr,32      ;side rgt
     204 00000aa0                   .bss    sr6_ptr,32      ;side rgt
     205 00000ac0                   .bss    sr7_ptr,32      ;side rgt
     206 00000ae0                   .bss    sr8_ptr,32      ;side rgt top
     207                    
     208                    
     209 00000b00                   .bss    ad1_ptr,32   
     210 00000b20                   .bss    ad1ref_ptr,32
     211 00000b40                   .bss    ad2_ptr,32   
     212 00000b60                   .bss    ad2ref_ptr,32
     213                    
     214 00000b80                   .bss    cheer1_ptr,32
     215 00000ba0                   .bss    cheer2_ptr,32
     216                    
     217                            
     218 00000140                   BSSX    crplate_ptr     ,32     ;credit plate ptr
     219 00000140                   BSSX    msg_ram         ,32*4   ;temp ram for flopping message/meters
     220 00000140                   BSSX    name_cnt        ,16     ;Cntr for flopping to player names
     221 00000140                   BSSX    name_flop       ,16     ;Flop name/buyin message 0 or 1
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE    5

     222 00000140                   BSSX    names           ,32*4   ;pntrs to player imgs
     223                    
     224 00000140                   BSSX    crt_colors      ,32     ;Random pal for court - NDSP1.ASM
     225 00000140                   BSSX    steals_off      ,16     ;!0=ticks until steals can happen
     226 00000140                   BSSX    pushing_delay   ,16     ;!0=keep ball if pushed
     227 00000140                   BSSX    pass_off        ,16     ;!0=Don't allow passing
     228 00000140                   BSSX    rebound_delay   ,16     ;!0=Give rebound stat
     229 00000140                   BSSX    crowd_animate   ,16     ;!0=Allow crowd animations
     230                    
     231                    
     232 00000140                   BSSX    timertcnt       ,16     ;Tick count
     233                    
     234 00000140                   BSSX    qtr_purchased   ,16*4   ;# game qtrs credit each player has
     235                    
     236 00000140                   BSSX    newptr          ,32
     237 00000140                   BSSX    newplyrs        ,32*5
     238                    
     239                    
     240                    
     241                    
     242              004c  GND_Y           .equ    116-40  ;Master in NDSP1
     243                    
     244                    
     245 00000140                   .text
     246                    
     247                    
     248                    
     249 00000140            SUBR   init_prog
     250                    
     251 00000140     0360          dint
     252 00000150     0570          setf    16,1,0                  ;Field0 = Word sign extend
     253 00000160     0740          setf    32,0,1                  ;Field1 = Long word
     254 00000170     09ef          movi    STCKST,sp               ;Top of stack
         00000180 010ffff0  
     255                    
     256                            .if     DEBUG
     257                            move    a0,@01e00000H           ;Clr FPGA rom protect
     258                            .endif
     259                    
     260                                                            ;>Manual sound board reset
     261 000001a0     09e0          movi    0fe00h,a0               ;Hit reset bit
         000001b0 0000fe00  
     262 000001d0     0580          move    a0,@SOUND
         000001e0 01d01030  
     263 00000200     09c0          movi    100,a0                  ;Wait for it to catch
         00000210     0064  
     264 00000220     0d80          dsj     a0,$
         00000230     fffe  
     265 00000240     09e0          movi    0ff00h,a0               ;Let it go
         00000250 0000ff00  
     266 00000270     0580          move    a0,@SOUND
         00000280 01d01030  
     267                    
     268 000002a0     07a0          move    @WDOGRAM,a0,L
         000002b0 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE    6

     269 000002d0     0b60          cmpi    WDOGNUM,a0
         000002e0 e5d4c3b2  
     270 00000300     cb18          jrne    initp50                 ;Powerup?
     271                    
     272                    
     273                    
     274 00000310     05a0          move    @dirqtimer,a0
         00000320 00000000! 
     275 00000340     0b40          cmpi    400,a0
         00000350     fe6f  
     276 00000360     c907          jrhs    uqallockup                      ;Main loop died?
     277                    
     278                    
     279                            .if     TUNIT
     280 00000370     05a0          move    @TALKPORT,a0            ;Check if watchdog was real
         00000380 01d00000  
     281 000003a0     1f60          btst    B_WDOG,a0               ;Bit should be low if dog fired
     282 000003b0     cb07          jrnz    uqalcont                        ;No watchdog?
     283                            .endif
     284                    
     285 000003c0     1b80          movk    AUDLOCK,a0              ;Watchdog
     286 000003d0     c002          jruc    uqalaud
     287                    
     288 000003e0           uqallockup
     289                    
     290 000003e0     09c0          movi    AUD_LOCKUP,a0           ;Main loop lockup
         000003f0     005c  
     291 00000400     0d5f  uqalaud calla   AUD1
         00000410 00000000! 
     292                    
     293 00000430           uqalcont
     294                    
     295                    
     296 00000430     1b00          movk    AUDSTAT,a0
     297 00000440     0d5f          calla   GET_AUD                 ;0=AMode, 1=Game
         00000450 00000000! 
     298 00000470     4c21          move    a1,a1
     299 00000480     ca08          jrz     WARMSET                 ;Attract mode glitch?
     300                    
     301 00000490           initp50
     302 00000490     0d5f          calla   READ_DIP                ;skip if UJ2 bit 6 set
         000004a0 00000000! 
     303 000004c0     1f20          btst    6,a0
     304 000004d0     cb03          jrnz    uqalnopt
     305 000004e0     c080          jauc    POWERTST                ;board test etc...
         000004f0 00000000! 
     306 00000510           uqalnopt
     307                    
     308                    
     309 00000510            SUBR   WARMSET
     310                    
     311 00000510     0360          dint
     312 00000520     0570          setf    16,1,0                  ;Field0 = Word sign extend
     313 00000530     0740          setf    32,0,1                  ;Field1 = Long word
     314 00000540     09ef          movi    STCKST,sp               ;Top of stack
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE    7

         00000550 010ffff0  
     315                    
     316 00000570     c080          jauc    POWERCMOS
         00000580 00000000! 
     317 000005a0           PCMOSRET
     318                    
     319 000005a0     0d5f          calla   init_all                ;Initialize hardware
         000005b0 00000000! 
     320 000005d0     0d5f          calla   INIT_TAB                ;Reset todays high score table
         000005e0 00000000! 
     321                    
     322                    
     323                            .if     DEBUG
     324                            callr   testcode
     325                            .endif
     326                    
     327                    
     328 00000600     0d5f          calla   CKDIAG
         00000610 00000000! 
     329 00000630     ca09          jrz     main_go                 ;No diag switches closed?
     330                    
     331 00000640                   CREATE  DIAG_PID,DIAG           ;Fire off the diag process
     332 000006c0     c007          jruc    mainlp
     333 000006d0           main_go
     334 000006d0                   CREATE0 amode_start             ;Fire up the attract mode
     335                    
     336                    
     337                    
     338 00000740           mainlp
     339 00000740     0d5f          calla   process_dispatch
         00000750 00000000! 
     340                    
     341 00000770     4dad          move    a13,a13
     342 00000780     ca0b          jrz     mainpok
     343                            .if     DEBUG
     344                            LOCKUP
     345                            eint
     346                            .else
     347 00000790                   CALLERR 10,0
     348                            .endif
     349 00000840           mainpok
     350                    
     351 00000840     07a1          move    @RAND,a1,L              ;>Randomize
         00000850 00000000! 
     352 00000870     6821          rl      a1,a1
     353 00000880     05ae          move    @HCOUNT,a14
         00000890 c00001c0  
     354 000008b0     69c1          rl      a14,a1
     355 000008c0     41e1          add     sp,a1
     356 000008d0     0781          move    a1,@RAND,L
         000008e0 00000000! 
     357                    
     358 00000900     0d5f          calla   cr_cntrs_update         ;And blink the top messages
         00000910 00000000! 
     359 00000930     0d3f          callr   switch_unstack
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE    8

         00000940     005a  
     360 00000950     0d5f          calla   snd_update              ;Update the sound calls
         00000960 00000000! 
     361 00000980     0d5f          calla   joy_read
         00000990 00000000! 
     362                    
     363                    
     364 000009b0     05a0          move    @steals_off,a0
         000009c0 00000d20- 
     365 000009e0     c604          jrle    uqalok
     366 000009f0     1420          subk    1,a0
     367 00000a00     0580          move    a0,@steals_off
         00000a10 00000d20- 
     368 00000a30           uqalok
     369 00000a30     05a0          move    @pushing_delay,a0
         00000a40 00000d30- 
     370 00000a60     c604          jrle    uqalok2
     371 00000a70     1420          subk    1,a0
     372 00000a80     0580          move    a0,@pushing_delay
         00000a90 00000d30- 
     373 00000ab0           uqalok2
     374 00000ab0     05a0          move    @pass_off,a0
         00000ac0 00000d40- 
     375 00000ae0     c604          jrle    uqalok3
     376 00000af0     1420          subk    1,a0
     377 00000b00     0580          move    a0,@pass_off
         00000b10 00000d40- 
     378 00000b30           uqalok3
     379                    
     380 00000b30     05a0          move    @assist_delay,a0
         00000b40 00000000! 
     381 00000b60     c609          jrle    uqalok4
     382 00000b70     1420          subk    1,a0
     383 00000b80     0580          move    a0,@assist_delay
         00000b90 00000000! 
     384 00000bb0     cb04          jrnz    uqalok4
     385 00000bc0     5621          clr     a1
     386 00000bd0     0581          move    a1,@assist_plyr
         00000be0 00000000! 
     387 00000c00           uqalok4
     388 00000c00     05a0          move    @rebound_delay,a0
         00000c10 00000d50- 
     389 00000c30     c609          jrle    uqalok5
     390 00000c40     1420          subk    1,a0
     391 00000c50     0580          move    a0,@rebound_delay
         00000c60 00000d50- 
     392 00000c80     cb04          jrnz    uqalok5
     393 00000c90     5621          clr     a1
     394 00000ca0     0581          move    a1,@rebound_delay
         00000cb0 00000d50- 
     395 00000cd0           uqalok5
     396                    
     397                    
     398                    
     399                            .if     DEBUG
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE    9

     400                            callr   cputime_calcfree
     401                            .endif
     402                    
     403 00000cd0     05a0          move    @HALT,a0
         00000ce0 00000540- 
     404 00000d00     cb07          jrnz    uqalskipit
     405 00000d10     05a0          move    @last_name_time,a0
         00000d20 00000000! 
     406 00000d40     1020          inc     a0
     407 00000d50     0580          move    a0,@last_name_time      ;# ticks since player name called
         00000d60 00000000! 
     408 00000d80           uqalskipit
     409                    
     410 00000d80     05a0          move    @PCNT,a0
         00000d90 00000000- 
     411 00000db0     1020          addk    1,a0
     412 00000dc0     0580          move    a0,@PCNT
         00000dd0 00000000- 
     413                    
     414 00000df0     07e0          movb    @DIPSWITCH-7,a0
         00000e00 01600029  
     415 00000e20     ce91          jrn     mainlp
     416                    
     417 00000e30     09ed          movi    ACTIVE,a13              ;*Proc list
         00000e40 00000000! 
     418 00000e60                   CREATE  DIAG_PID,DIAG
     419 00000ee0     c085          jruc    mainlp
     420                    
     421                    
     422                    
     423                    
     424                    
     425 00000ef0            SUBRP  switch_unstack
     426                    
     427                            .if     0                       ;DEBUG!!
     428                    
     429                            clr     a4
     430                    
     431                    kabtlp  move    @swstack_p,a3,L
     432                            cmpi    swstacktop,a3           ;Stack at start?
     433                            jreq    kabtx                   ;Empty?
     434                            move    @FREE,a0,L
     435                            jrz     kabtx                   ;No processes left?
     436                    
     437                            move    *a3+,a0                 ;Get entry
     438                            move    a3,@swstack_p,L         ;Update stack
     439                            sll     32-5,a0                 ;Max switch # 31
     440                            srl     32-5-4,a0               ;*16
     441                            move    a0,a2
     442                            add     a0,a2
     443                            add     a0,a2                   ;*3
     444                            addi    switch_t,a2
     445                            move    *a2+,a1
     446                            jrz     kabtlp                  ;No PID?
     447                            move    *a2+,a7,L               ;*Code
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   10

     448                            movi    ACTIVE,a13              ;*Proc list
     449                            calla   GETPRC
     450                            addk    1,a4
     451                            jruc    kabtlp
     452                    
     453                    kabtx
     454                            subk    1,a4
     455                            jrle    kabtxx
     456                            LOCKUP
     457                    
     458                    kabtxx  rets
     459                    
     460                            .else
     461                    
     462                    
     463 00000ef0     07a3  kabtlp  move    @swstack_p,a3,L
         00000f00 00000010- 
     464 00000f20     0b63          cmpi    swstacktop,a3           ;Stack at start?
         00000f30 fffffbcf- 
     465 00000f50     ca1a          jreq    kabtx                   ;Empty?
     466 00000f60     07a0          move    @FREE,a0,L
         00000f70 00000000! 
     467 00000f90     ca16          jrz     kabtx                   ;No processes left?
     468                    
     469 00000fa0     9460          move    *a3+,a0                 ;Get entry
     470 00000fb0     0783          move    a3,@swstack_p,L         ;Update stack
         00000fc0 00000010- 
     471 00000fe0     2760          sll     32-5,a0                 ;Max switch # 31
     472 00000ff0     2d20          srl     32-5-4,a0               ;*16
     473 00001000     4c02          move    a0,a2
     474 00001010     4002          add     a0,a2
     475 00001020     4002          add     a0,a2                   ;*3
     476 00001030     0b22          addi    switch_t,a2
         00001040 00001110' 
     477 00001060     9441          move    *a2+,a1
     478 00001070     cae7          jrz     kabtlp                  ;No PID?
     479 00001080     9647          move    *a2+,a7,L               ;*Code
     480 00001090     09ed          movi    ACTIVE,a13              ;*Proc list
         000010a0 00000000! 
     481 000010c0     0d5f          calla   GETPRC
         000010d0 00000000! 
     482 000010f0     c0df          jruc    kabtlp
     483                    
     484 00001100     0960  kabtx   rets
     485                    
     486                            .endif
     487                    
     488 00001110           switch_t        ;(Process ID or 0, *Routine)    ;Put in audit??
     489                    
     490                    
     491                            .if     TUNIT
     492 00001110                   WL      0,0                     ;S0
     493 00001140                   WL      0,0                     ;S1
     494 00001170                   WL      0,0                     ;S2
     495 000011a0                   WL      0,0                     ;S3
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   11

     496 000011d0                   WL      0,0                     ;S4
     497 00001200                   WL      0,0                     ;S5
     498 00001230                   WL      0,0                     ;S6
     499 00001260                   WL      0,0                     ;S7
     500 00001290                   WL      0,0                     ;S8
     501 000012c0                   WL      0,0                     ;S9
     502 000012f0                   WL      0,0                     ;S10
     503 00001320                   WL      0,0                     ;S11
     504 00001350                   WL      0,0                     ;S12
     505 00001380                   WL      0,0                     ;S13
     506 000013b0                   WL      0,0                     ;S14
     507 000013e0                   WL      0,0                     ;S15
     508                    
     509 00001410                   WL      LC_PID,LCOIN            ;S16 - LEFT COIN (1)
     510 00001440                   WL      RC_PID,RCOIN            ;S17 - RIGHT COIN (2)
     511 00001470                   WL      PSWPID,plyr_strtb1      ;S18 - START 1
     512 000014a0                   WL      SLAM_PID,SLAM_SW        ;S19 - SLAM TILT
     513 000014d0                   WL      DIAG_PID,DIAG           ;S20 - TEST
     514 00001500                   WL      PSWPID,plyr_strtb2      ;S21 - START 2
     515 00001530                   WL      DIAG_PID,SERVICE        ;S22 - SERVICE CREDIT
     516 00001560                   WL      CC_PID,CCOIN            ;S23 - CENTER COIN (3)
     517 00001590                   WL      CC_PID,XCOIN            ;S24 - COIN 4
     518 000015c0                   WL      PSWPID,plyr_strtb3      ;S25 - START 3
     519 000015f0                   WL      PSWPID,plyr_strtb4      ;S26 - START 4
     520 00001620                   WL      0,0                     ;S27
     521 00001650                   WL      0,0                     ;S28
     522 00001680                   WL      0,0                     ;S29
     523 000016b0                   WL      0,0                     ;S30
     524 000016e0                   WL      0,0                     ;S31
     525                    
     526                            .else
     527                    
     528                    
     529                    
     530                            WL      PSWPID,plyr_strtb4      ;S7 IO20 - START 4
     531                            WL      0,0                     ;S1
     532                            WL      0,0                     ;S2
     533                            WL      0,0                     ;S3
     534                            WL      0,0                     ;S4
     535                            WL      0,0                     ;S5
     536                            WL      0,0                     ;S6
     537                            WL      PSWPID,plyr_strtb3      ;S7 - START 3
     538                            WL      0,0                     ;S8
     539                            WL      0,0                     ;S9
     540                            WL      0,0                     ;S10
     541                            WL      0,0                     ;S11
     542                            WL      0,0                     ;S12
     543                            WL      0,0                     ;S13
     544                            WL      0,0                     ;S14
     545                            WL      CC_PID,XCOIN            ;S15 - COIN 4
     546                    
     547                            WL      LC_PID,LCOIN            ;S16 - LEFT COIN (1)
     548                            WL      RC_PID,RCOIN            ;S17 - RIGHT COIN (2)
     549                            WL      PSWPID,plyr_strtb1      ;S18 - START 1
     550                            WL      SLAM_PID,SLAM_SW        ;S19 - SLAM TILT
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   12

     551                            WL      DIAG_PID,DIAG           ;S20 - TEST
     552                            WL      PSWPID,plyr_strtb2      ;S21 - START 2
     553                            WL      DIAG_PID,SERVICE        ;S22 - SERVICE CREDIT
     554                            WL      CC_PID,CCOIN            ;S23 - CENTER COIN (3)
     555                            WL      0,0                     ;S24
     556                            WL      0,0                     ;S25
     557                            WL      0,0                     ;S26
     558                            WL      0,0                     ;S27
     559                            WL      0,0                     ;S28
     560                            WL      0,0                     ;S29
     561                            WL      0,0                     ;S30 - Snd IRQ
     562                            WL      0,0                     ;S31
     563                            .endif
     564                    
     565                    
     566                    
     567 00001710            SUBR   plyr_strtb1
     568                    
     569 00001710     05a0          move    @TWOPLAYERS,a0          ;0 = NO, 1 = YES 2 players
         00001720 00000000! 
     570 00001740     cb09          jrnz    kabtstrtb2
     571                    
     572 00001750     5708          clr     a8                      ;A8=Player #
     573 00001760     09eb          movi    P1DATA,a11              ;A11=*plyr data
         00001770 00000000! 
     574 00001790     c01c          jruc    plyr_strtbut
     575                    
     576 000017a0            SUBR   plyr_strtb2
     577                    
     578 000017a0     05a0          move    @TWOPLAYERS,a0          ;0 = NO, 1 = YES 2 players
         000017b0 00000000! 
     579 000017d0     cb0a          jrnz    kabtstrtb3
     580 000017e0           kabtstrtb2
     581 000017e0     1828          movk    1,a8
     582 000017f0     09eb          movi    P2DATA,a11
         00001800 00000000! 
     583 00001820     c013          jruc    plyr_strtbut
     584                    
     585 00001830            SUBR   plyr_strtb3
     586                    
     587 00001830     05a0          move    @TWOPLAYERS,a0          ;0 = NO, 1 = YES 2 players
         00001840 00000000! 
     588 00001860     cb00          jrnz    psbx
         00001870     01e3  
     589 00001880           kabtstrtb3
     590 00001880     1848          movk    2,a8
     591 00001890     09eb          movi    P3DATA,a11
         000018a0 00000000! 
     592 000018c0     c009          jruc    plyr_strtbut
     593                    
     594 000018d0            SUBR   plyr_strtb4
     595                    
     596 000018d0     05a0          move    @TWOPLAYERS,a0          ;0 = NO, 1 = YES 2 players
         000018e0 00000000! 
     597 00001900     cb00          jrnz    psbx
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   13

         00001910     01d9  
     598 00001920     1868          movk    3,a8
     599 00001930     09eb          movi    P4DATA,a11
         00001940 00000000! 
     600                    
     601                    
     602 00001960           plyr_strtbut
     603                    
     604 00001960     1820          movk    1,a0
     605 00001970     0580          move    a0,@BTIME
         00001980 00000000! 
     606                    
     607 000019a0     05a0          move    @GAMSTATE,a0
         000019b0 00000530- 
     608                    
     609 000019d0     0b40          cmpi    INPLYRINFO,a0
         000019e0     fffb  
     610 000019f0     ca00          jreq    psbx
         00001a00     01ca  
     611                    
     612 00001a10     05a0          move    @WFLG,a0
         00001a20 00000580- 
     613 00001a40     cb00          jrnz    psbx                    ;Window growing?
         00001a50     01c5  
     614 00001a60     05a0          move    @ENTERON,a0
         00001a70 00000000! 
     615 00001a90     cb00          jrnz    psbx                    ;Initials being entered?
         00001aa0     01c0  
     616                    
     617                    
     618 00001ab0     05a0          move    @pleasewt,a0            ;Plyr start bits 0-3
         00001ac0 00000000! 
     619 00001ae0     4b00          btst    a8,a0
     620 00001af0     cb00          jrnz    psbx
         00001b00     01ba  
     621                    
     622 00001b10     05a0          move    @PSTATUS,a0             ;Plyr start bits 0-3
         00001b20 00000000! 
     623 00001b40     4b00          btst    a8,a0
     624 00001b50     ca41          jrz     kabtstartplyr           ;Player not started?
     625                    
     626                    
     627 00001b60           kabtok
     628 00001b60     05a0          move    @game_purchased,a0
         00001b70 00000000! 
     629 00001b90     4b00          btst    a8,a0
     630 00001ba0     ca03          jrz     no_drw_max
     631                    
     632 00001bb0           kabtshowmax
     633 00001bb0           kabtdie DIE
     634                    
     635 00001be0           no_drw_max
     636                    
     637                    
     638 00001be0     05a1          move    @GAMSTATE,a1
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   14

         00001bf0 00000530- 
     639 00001c10     0b41          cmpi    INGAME,a1
         00001c20     fffc  
     640 00001c30     ca00          jrz     psbx
         00001c40     01a6  
     641                    
     642 00001c50     0d5f          calla   CR_CONTP                ;Credits to continue
         00001c60 00000000! 
     643 00001c80     c800          jrlo    conttimers_cnt          ;No?
         00001c90     0271  
     644 00001ca0     0d5f          calla   P_CONT                  ;Take credits
         00001cb0 00000000! 
     645 00001cd0                   SOUND1  eat_snd
     646                    
     647 00001d30     1a00          movk    AUD1CONT,a0             ;Continue
     648 00001d40     0d5f          calla   AUD1
         00001d50 00000000! 
     649                    
     650 00001d70     09c0          movi    100,a0                  ;units to add
         00001d80     0064  
     651 00001d90     0d3f          callr   add_plyr_time           ;add time to this players play time
         00001da0     0234  
     652                    
     653                    
     654                    
     655 00001db0     1980          movk    ADJCCONT,a0             ;credits required to start
     656 00001dc0     0d5f          calla   GET_ADJ                 ;returns 1,2
         00001dd0 00000000! 
     657                    
     658                    
     659 00001df0     0d3f          callr   paidcreds_add
         00001e00     01cd  
     660 00001e10     0d5f          calla   update_scorebrd
         00001e20 00000000! 
     661 00001e40     c000          jruc    psbx
         00001e50     0185  
     662                    
     663                    
     664 00001e60           kabtnot_pd
     665 00001e60     2488          sll     4,a8
     666 00001e70     0b28          addi    sticklst,a8
         00001e80 000038e0' 
     667 00001ea0     8500          move    *a8,a0
     668 00001eb0     0d5f          calla   KIL1C                   ;kill stick on me procs for this plyr
         00001ec0 00000000! 
     669 00001ee0     8500          move    *a8,a0
     670 00001ef0     0d5f          calla   obj_del1c
         00001f00 00000000! 
     671                    
     672                    
     673 00001f20     0d3f          callr   plyr_setmsgsingame
         00001f30     01fb  
     674 00001f40                   DIE
     675                    
     676                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   15

     677 00001f70           kabtstartplyr
     678 00001f70     05a1          move    @GAMSTATE,a1
         00001f80 00000530- 
     679 00001fa0     ce00          jrn     psbx                    ;Diagnostics?
         00001fb0     016f  
     680 00001fc0     0b41          cmpi    INGAMEOV,a1
         00001fd0     fff7  
     681 00001fe0     ca00          jreq    psbx                    ;Game over?
         00001ff0     016b  
     682                    
     683 00002000     0b41          cmpi    INAMODE,a1
         00002010     fffe  
     684 00002020     ca00          jreq    game_start              ;New start from amode?
         00002030     0241  
     685                    
     686 00002040     0b41          cmpi    INFREEPRICE,a1
         00002050     fff9  
     687 00002060     ca00          jreq    game_start2             ;New start from winners half price scr?
         00002070     0236  
     688 00002080     0b41          cmpi    ININTRO,a1
         00002090     fffd  
     689 000020a0     ca2d          jrz     kabtskiptmck
     690                    
     691 000020b0     07ae          move    @game_time,a14,L
         000020c0 00000000! 
     692 000020e0     ca29          jrz     kabtskiptmck
     693 000020f0     0b6e          cmpi    [202h,0],a14
         00002100 fdfdffff  
     694 00002120     c525          jrge    kabtskiptmck
     695                    
     696                    
     697                    
     698 00002130     1a40          MOVK    ADJFREPL,A0             ;ARE WE IN FREE PLAY?
     699 00002140     0d5f          CALLA   GET_ADJ
         00002150 00000000! 
     700 00002170     cb20          JRNZ    kabtskiptmck
     701                    
     702 00002180     05a0          move    @PSTATUS2,a0            ;Plyr already started bits 0-3
         00002190 00000560- 
     703 000021b0     4b00          btst    a8,a0
     704 000021c0     ca07          jrz     kabtpsb101                      ;Player never started?
     705                    
     706 000021d0     0d5f          calla   CR_CONTP                ;Credits to continue
         000021e0 00000000! 
     707 00002200     c880          jalo    SUCIDE                  ;No?
         00002210 00000000! 
     708 00002230     c006          jruc    kabtpsb300
     709                    
     710                    
     711 00002240     0d5f  kabtpsb101      calla   CR_STRTP                ;Credits to start
         00002250 00000000! 
     712 00002270     c880          jalo    SUCIDE                  ;No?
         00002280 00000000! 
     713                    
     714 000022a0           kabtpsb300
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   16

     715 000022a0     1820          movk    1,a0
     716 000022b0     6300          sll     a8,a0
     717                    
     718 000022c0     05a1          move    @pleasewt,a1
         000022d0 00000000! 
     719 000022f0     5401          or      a0,a1
     720 00002300     0581          move    a1,@pleasewt
         00002310 00000000! 
     721                    
     722 00002330     0d3f          callr   plyr_setmsgsingame
         00002340     01ba  
     723 00002350                   DIE
     724                    
     725                    
     726 00002380           kabtskiptmck
     727                    
     728 00002380     4d0e          move    a8,a14
     729 00002390     2fee          srl     1,a14
     730 000023a0     05a0          move    @winningteam,a0
         000023b0 00000000! 
     731 000023d0     49c0          cmp     a14,a0
     732 000023e0     ca13          jrz     kabtskp1
     733                    
     734 000023f0     05a0          move    @PSTATUS2,a0            ;Plyr already started bits 0-3
         00002400 00000560- 
     735 00002420     4b00          btst    a8,a0
     736 00002430     ca17          jrz     psb101                  ;Player never started?
     737                    
     738 00002440     0d5f          calla   CR_CONTP                ;Credits to continue
         00002450 00000000! 
     739 00002470     c800          jrlo    conttimers_cnt          ;No?
         00002480     01f2  
     740 00002490     0d5f          calla   P_CONT                  ;Take credits
         000024a0 00000000! 
     741 000024c0                   SOUND1  eat_snd
     742                    
     743 00002520           kabtskp1
     744 00002520     09c0          movi    100,a0                  ;units to add
         00002530     0064  
     745 00002540     0d3f          callr   add_plyr_time           ;add time to this players play time
         00002550     01b9  
     746                    
     747 00002560     1a00          movk    AUD1CONT,a0             ;Continue
     748 00002570     0d5f          calla   AUD1
         00002580 00000000! 
     749 000025a0     c022          jruc    psb300
     750                    
     751                    
     752 000025b0     0d5f  psb101  calla   CR_STRTP                ;Credits to start
         000025c0 00000000! 
     753 000025e0     c800          jrlo    conttimers_cnt          ;No?
         000025f0     01db  
     754 00002600     0d5f          calla   P_START                 ;Take credits
         00002610 00000000! 
     755                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   17

     756 00002630                   SOUND1  eat_snd
     757                    
     758 00002690     09c7          movi    100,a7
         000026a0     0064  
     759 000026b0     1960          movk    ADJCSTRT,a0             ;credits required to start
     760 000026c0     0d5f          calla   GET_ADJ                 ;returns 1,2
         000026d0 00000000! 
     761 000026f0     1420          subk    1,a0
     762 00002700     0300          jrz     kabtag
     763 00002710     4ce0  kabtag  move    a7,a0
     764 00002720     0d3f          callr   add_plyr_time           ;add time to this players play time
         00002730     019b  
     765                    
     766 00002740     05a0          move    @GAMSTATE,a0
         00002750 00000530- 
     767 00002770     1440          subk    ININTRO,a0              ;If in intro, the regular start up
     768 00002780     ca04          jreq    psb300
     769                    
     770 00002790     19c0          movk    AUD1STRT,a0             ;Mid game start
     771 000027a0     0d5f          calla   AUD1
         000027b0 00000000! 
     772                    
     773 000027d0           psb300
     774 000027d0     1820          movk    1,a0
     775 000027e0     6300          sll     a8,a0
     776                    
     777 000027f0                   PUSH    A0
     778 00002800     1a40          MOVK    ADJFREPL,A0             ;ARE WE IN FREE PLAY?
     779 00002810     0d5f          CALLA   GET_ADJ
         00002820 00000000! 
     780 00002840     4c0e          move    a0,a14
     781 00002850                   PULL    A0
     782 00002860     4dce          move    a14,a14
     783 00002870     cb36          JRNZ    kabtfre
     784                    
     785 00002880     05ae          move    @GAMSTATE,a14
         00002890 00000530- 
     786 000028b0     144e          subk    ININTRO,a14             ;If in intro, the regular start up
     787 000028c0     cb57          jrne    kabtnot
     788                    
     789 000028d0           kabtnot1
     790                    
     791                    
     792                    
     793 000028d0                   PUSH    a0
     794 000028e0     05a1          move    @PSTATUS2,a1
         000028f0 00000560- 
     795 00002910     4a01          btst    a0,a1
     796 00002920     ca05          jrz     kabtfrmstrt
     797                            
     798 00002930     1980          movk    ADJCCONT,a0             ;credits required to start
     799 00002940     0d5f          calla   GET_ADJ                 ;returns 1,2
         00002950 00000000! 
     800 00002970     c004          jruc    kabtfix1
     801 00002980           kabtfrmstrt
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   18

     802 00002980     1960          movk    ADJCSTRT,a0             ;credits required to start
     803 00002990     0d5f          calla   GET_ADJ                 ;returns 1,2
         000029a0 00000000! 
     804 000029c0           kabtfix1
     805                    
     806                    
     807 000029c0     0d3f          callr   paidcreds_add
         000029d0     0110  
     808                    
     809 000029e0                   PULL    a0
     810                    
     811                    
     812                    
     813                    
     814 000029f0     05a1          move    @PSTATUS,a1
         00002a00 00000000! 
     815 00002a20     5401          or      a0,a1                   ;Set bit
     816 00002a30     0581          move    a1,@PSTATUS
         00002a40 00000000! 
     817                    
     818 00002a60     05a1          move    @PSTATUS2,a1
         00002a70 00000560- 
     819 00002a90     5401          or      a0,a1                   ;Set bit saying this guy has started
     820 00002aa0     0581          move    a1,@PSTATUS2            ;and 50 cent buyin has happened!
         00002ab0 00000560- 
     821                    
     822                    
     823 00002ad0     05a0          move    @gmqrtr,a0
         00002ae0 00000000! 
     824 00002b00     ca00          jrz     kabtinintro
         00002b10     00b9  
     825                    
     826 00002b20     07a0          move    @newptr,a0,L
         00002b30 00000dc0- 
     827 00002b50     9360          move    a11,*a0+,L
     828 00002b60     9100          move    a8,*a0+
     829 00002b70     5621          clr     a1
     830 00002b80     8220          move    a1,*a0,L
     831 00002b90     0780          move    a0,@newptr,L
         00002ba0 00000dc0- 
     832                    
     833 00002bc0     c000          jruc    kabtinintro
         00002bd0     00ad  
     834                    
     835 00002be0           kabtfre
     836 00002be0     05ae          move    @GAMSTATE,a14
         00002bf0 00000530- 
     837 00002c10     144e          subk    ININTRO,a14             ;If in intro, the regular start up
     838 00002c20     caca          jrz     kabtnot1
     839                    
     840 00002c30           kabtfreeply
     841                    
     842                    
     843                    
     844 00002c30                   PUSH    a0
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   19

     845 00002c40     05a1          move    @PSTATUS2,a1
         00002c50 00000560- 
     846 00002c70     4a01          btst    a0,a1
     847 00002c80     ca05          jrz     kabtfrmstrt2
     848                            
     849 00002c90     1980          movk    ADJCCONT,a0             ;credits required to start
     850 00002ca0     0d5f          calla   GET_ADJ                 ;returns 1,2
         00002cb0 00000000! 
     851 00002cd0     c004          jruc    kabtfix12
     852 00002ce0           kabtfrmstrt2
     853 00002ce0     1960          movk    ADJCSTRT,a0             ;credits required to start
     854 00002cf0     0d5f          calla   GET_ADJ                 ;returns 1,2
         00002d00 00000000! 
     855 00002d20           kabtfix12
     856                    
     857                    
     858 00002d20     0d3f          callr   paidcreds_add
         00002d30     00da  
     859                    
     860 00002d40                   PULL    a0
     861                    
     862                    
     863                    
     864                    
     865                    
     866 00002d50     05a1          move    @PSTATUS,a1
         00002d60 00000000! 
     867 00002d80     5401          or      a0,a1                   ;Set bit
     868 00002d90     0581          move    a1,@PSTATUS
         00002da0 00000000! 
     869                    
     870 00002dc0     05a1          move    @PSTATUS2,a1
         00002dd0 00000560- 
     871 00002df0     5401          or      a0,a1                   ;Set bit saying this guy has started
     872 00002e00     0581          move    a1,@PSTATUS2            ;and 50 cent buyin has happened!
         00002e10 00000560- 
     873                    
     874                    
     875                    
     876                    
     877 00002e30     c025          jruc    kabtfrepl
     878                    
     879 00002e40           kabtnot
     880 00002e40     07ae          move    @game_time,a14,L
         00002e50 00000000! 
     881 00002e70     0b6e          cmpi    [202h,0],a14
         00002e80 fdfdffff  
     882 00002ea0     c7d8          jrgt    kabtfreeply
     883                    
     884                    
     885 00002eb0     05a1          move    @PSTATUS2,a1
         00002ec0 00000560- 
     886 00002ee0     4b01          btst    a8,a1
     887 00002ef0     ca05          jrz     kabtfrmstrt3
     888                            
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   20

     889 00002f00     1980          movk    ADJCCONT,a0             ;credits required to start
     890 00002f10     0d5f          calla   GET_ADJ                 ;returns 1,2
         00002f20 00000000! 
     891 00002f40     c004          jruc    kabtfix13
     892 00002f50           kabtfrmstrt3
     893 00002f50     1960          movk    ADJCSTRT,a0             ;credits required to start
     894 00002f60     0d5f          calla   GET_ADJ                 ;returns 1,2
         00002f70 00000000! 
     895 00002f90           kabtfix13
     896                    
     897                    
     898 00002f90     0d3f          callr   paidcreds_add
         00002fa0     00b3  
     899                    
     900                    
     901                    
     902                    
     903 00002fb0           kabtnot_inintro
     904 00002fb0     1820          movk    1,a0
     905 00002fc0     6300          sll     a8,a0
     906                    
     907 00002fd0     05a1          move    @pleasewt,a1
         00002fe0 00000000! 
     908 00003000     5401          or      a0,a1
     909 00003010     0581          move    a1,@pleasewt
         00003020 00000000! 
     910                    
     911 00003040     0d3f          callr   plyr_setmsgsingame
         00003050     00e9  
     912 00003060                   DIE
     913                    
     914 00003090           kabtfrepl
     915 00003090     1820          movk    1,a0
     916 000030a0     0580          move    a0,@name_cnt
         000030b0 00000c60- 
     917 000030d0     5600          clr     a0
     918 000030e0     0580          move    a0,@name_flop
         000030f0 00000c70- 
     919                     
     920 00003110     05ae          move    @GAMSTATE,a14
         00003120 00000530- 
     921 00003140     144e          subk    ININTRO,a14             ;If in intro, the regular start up
     922 00003150     ca08          jrz     kabtskp1a
     923                    
     924                     
     925 00003160     09c0          movi    CLSDEAD|creditid,a0
         00003170     2089  
     926 00003180     0d5f          calla   obj_del1c               ;kill credit/qrtr imgs
         00003190 00000000! 
     927 000031b0     0d5f          calla   prt_credits
         000031c0 00000000! 
     928                    
     929 000031e0           kabtskp1a
     930 000031e0     b760          move    *a11(ply_messages),a0,L
         000031f0     0000  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   21

     931 00003200     ca4a          jrz     kabtimgson
     932 00003210     0d5f          calla   DELOBJ
         00003220 00000000! 
     933 00003240     5600          clr     a0
     934 00003250     b20b          move    a0,*a11(ply_messages),L
         00003260     0000  
     935                    
     936                    
     937 00003270                   PUSH    a6,a8,a11
     938                    
     939 00003290     4d69          move    a11,a9
     940 000032a0     0b09          addi    ply_meter_imgs,a9       ;where to stuff img pntrs
         000032b0     0080  
     941                    
     942 000032c0     9720          move    *a9+,a0,L
     943 000032d0     0d5f          calla   DELOBJ
         000032e0 00000000! 
     944 00003300     9720          move    *a9+,a0,L
     945 00003310     ca03          jrz     kabtcv
     946 00003320     0d5f          calla   DELOBJ
         00003330 00000000! 
     947 00003350     8720  kabtcv  move    *a9,a0,L
     948 00003360     0d5f          calla   DELOBJ
         00003370 00000000! 
     949 00003390     0be9          subi    64,a9
         000033a0     ffbf  
     950                    
     951 000033b0     4d00          move    a8,a0
     952 000033c0     24a0          sll     5,a0
     953                            
     954 000033d0     0b20          addi    cr_box,a0
         000033e0 000036e0' 
     955                    
     956 00003400     05ae          move    @TWOPLAYERS,a14         ;0 = NO, 1 = YES 2 players
         00003410 00000000! 
     957 00003430     ca02          jrz     kabt4_plyrs
     958 00003440     0b00          addi    8*32,a0
         00003450     0100  
     959 00003460           kabt4_plyrs
     960                            
     961                    
     962                    
     963                    
     964 00003460     4c0b          move    a0,a11
     965 00003470     0b0b          addi    4*32,a11
         00003480     0080  
     966 00003490     876b          move    *a11,a11,L
     967 000034a0                   PUSHP   A11
     968                    
     969 000034b0     860b          move    *a0,a11,L
     970 000034c0     0d3f          callr   prt_status
         000034d0     1029  
     971                    
     972                    
     973 000034e0                   PULLP   A11
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   22

     974 000034f0     0d5f          calla   refill_turbo
         00003500 00000000! 
     975                    
     976 00003520                   PULL    a6,a8,a11
     977                    
     978 00003540     09e0          movi    scorep,a0
         00003550 00000000! 
     979 00003570     0d5f          calla   pal_getf
         00003580 00000000! 
     980 000035a0     4c05          move    a0,a5
     981                    
     982 000035b0     4d00          move    a8,a0
     983 000035c0     24a0          sll     5,a0
     984 000035d0     0b20          addi    names,a0
         000035e0 00000c80- 
     985 00003600     8600          move    *a0,a0,L
     986 00003610     b768          move    *a11(ply_meter_imgs),a8,L       ;change box to name
         00003620     0080  
     987 00003630     b0a8          move    a5,*a8(OPAL)
         00003640     0150  
     988 00003650     09e1          movi    MSGOCTRL,a1
         00003660 0000e002  
     989 00003680     0d5f          calla   obj_aniq_cnoff
         00003690 00000000! 
     990                    
     991                    
     992                    
     993 000036b0           kabtimgson
     994                    
     995                    
     996 000036b0           kabtinintro
     997                    
     998 000036b0           psbx    DIE
     999                    
    1000 000036e0 00013820' cr_box  .long   init_t1,init_t2,init_t3,init_t4
    1001 00003760 00000000!         .long   P1DATA,P2DATA,P3DATA,P4DATA
    1002                    
    1003 000037e0 00013820'         .long   init_t1,init_t2kit,init_t3kit,init_t4
    1004 00003860 00000000!         .long   P1DATA,P2DATA,P3DATA,P4DATA
    1005                    
    1006 000038e0           sticklst
    1007 000038e0     008d          .word   p1stickid,p2stickid,p3stickid,p4stickid
    1008                    
    1009                    
    1010 00003920            SUBR   start_msgs
    1011                    
    1012 00003920     09ea          movi    newplyrs,a10
         00003930 00000de0- 
    1013 00003950     078a          move    a10,@newptr,L
         00003960 00000dc0- 
    1014 00003980     4d42          move    a10,a2
    1015                    
    1016 00003990     18a9          movk    5,a9
    1017 000039a0           start1
    1018 000039a0     1429          dec     a9
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   23

    1019 000039b0     ca0b          jrz     kabtdone
    1020 000039c0     974b          move    *a10+,a11,L
    1021 000039d0     ca09          jrz     kabtdone
    1022 000039e0     9548          move    *a10+,a8
    1023 000039f0                   CREATE0 kabtfrepl
    1024 00003a60     c0f3          jruc    start1
    1025 00003a70           kabtdone
    1026 00003a70     5600          clr     a0
    1027 00003a80     18ae          movk    5,a14
    1028 00003a90     9202  kabtclp move    a0,*a2+,L
    1029 00003aa0     3c4e          dsj     a14,kabtclp
    1030                    
    1031 00003ab0                   DIE
    1032                    
    1033                    
    1034 00003ae0           paidcreds_add
    1035                    
    1036 00003ae0                   PUSH    a2
    1037                    
    1038 00003af0     4d01          move    a8,a1
    1039 00003b00     24a1          sll     5,a1
    1040 00003b10     0b21          addi    paid_t,a1
         00003b20 00004ef0' 
    1041 00003b40     8621          move    *a1,a1,L
    1042                    
    1043 00003b50     4d0e          move    a8,a14
    1044 00003b60     2fee          srl     1,a14
    1045 00003b70     05a2          move    @winningteam,a2
         00003b80 00000000! 
    1046 00003ba0     49c2          cmp     a14,a2
    1047 00003bb0     cb01          jrnz    kabtnothalf
    1048 00003bc0     2460          sll     3,a0                    ;Double paid credits
    1049                    
    1050 00003bd0           kabtnothalf
    1051 00003bd0     8422          move    *a1,a2
    1052 00003be0     4002          add     a0,a2
    1053 00003bf0     8041          move    a2,*a1
    1054                    
    1055 00003c00     4d01          move    a8,a1
    1056 00003c10     2481          sll     4,a1                    ;x 16 bits
    1057 00003c20     0b21          addi    qtr_purchased,a1
         00003c30 00000d80- 
    1058 00003c50     842e          move    *a1,a14
    1059 00003c60     102e          inc     a14
    1060 00003c70     81c1          move    a14,*a1
    1061                    
    1062 00003c80     05a1          move    @gmqrtr,a1
         00003c90 00000000! 
    1063 00003cb0     0b41          cmpi    3,a1
         00003cc0     fffc  
    1064 00003cd0     c512          jrge    kabtfull
    1065 00003ce0     1882          movk    4,a2
    1066 00003cf0     4422          sub     a1,a2
    1067 00003d00     484e          cmp     a2,a14
    1068 00003d10     c41b          jrlt    kabtno
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   24

    1069                    
    1070                    
    1071                    
    1072                    
    1073                    
    1074 00003d20     05a0          move    @GAMSTATE,a0
         00003d30 00000530- 
    1075 00003d50     0b40          cmpi    INAMODE,a0
         00003d60     fffe  
    1076 00003d70     ca15          jreq    kabtno
    1077 00003d80     05ae          move    @gmqrtr,a14
         00003d90 00000000! 
    1078 00003db0     cb04          jrnz    kabtfull
    1079                            .ref    inmatchup
    1080 00003dc0     05a0          move    @inmatchup,a0
         00003dd0 00000000! 
    1081 00003df0     ca0d          jrz     kabtno
    1082                    
    1083 00003e00           kabtfull
    1084 00003e00     05a0          move    @game_purchased,a0      ;set purchased bit
         00003e10 00000000! 
    1085 00003e30     4d0e          move    a8,a14
    1086 00003e40     248e          sll     4,a14
    1087 00003e50     0b2e          addi    or_t,a14
         00003e60 00004370' 
    1088 00003e80     85ce          move    *a14,a14
    1089 00003e90     55c0          or      a14,a0                  ;for player
    1090 00003ea0     0580          move    a0,@game_purchased
         00003eb0 00000000! 
    1091                    
    1092 00003ed0           kabtno
    1093 00003ed0                   PULL    a2
    1094 00003ee0     0960          rets
    1095                    
    1096                    
    1097                    
    1098              b002  LEDOCTRL        .equ    DMAWNZ|03000H   ;3 bits per pixel (In BB.asm)
    1099              e002  MSGOCTRL        .equ    DMAWNZ|06000H
    1100                    
    1101 00003ef0            SUBRP  plyr_setmsgsingame
    1102                    
    1103 00003ef0                   PUSH    a8
    1104                    
    1105 00003f00     b768          move    *a11(ply_messages),a8,L
         00003f10     0000  
    1106 00003f20     09e0          movi    please,a0
         00003f30 00000000! 
    1107 00003f50     09e1          movi    MSGOCTRL,a1
         00003f60 0000e002  
    1108 00003f80     0d5f          calla   obj_aniq_cnoff
         00003f90 00000000! 
    1109 00003fb0     0d5f          calla   update_scorebrd
         00003fc0 00000000! 
    1110                    
    1111 00003fe0     b760          move    *a11(ply_meter_imgs),a0,L
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   25

         00003ff0     0080  
    1112 00004000     0d5f          calla   OBJOFF
         00004010 00000000! 
    1113 00004030     b760          move    *a11(ply_meter_imgs+20h),a0,L
         00004040     00a0  
    1114 00004050     0d5f          calla   OBJOFF
         00004060 00000000! 
    1115 00004080     b760          move    *a11(ply_meter_imgs+40h),a0,L
         00004090     00c0  
    1116 000040a0     0d5f          calla   OBJOFF
         000040b0 00000000! 
    1117                    
    1118 000040d0                   PULL    a8
    1119 000040e0     0960          rets
    1120                    
    1121                    
    1122                    
    1123                    
    1124                    
    1125 000040f0           add_plyr_time
    1126                    
    1127                    
    1128 000040f0     4d0e          move    a8,a14
    1129 00004100     2fee          srl     1,a14
    1130 00004110     05a1          move    @winningteam,a1
         00004120 00000000! 
    1131 00004140     49c1          cmp     a14,a1
    1132 00004150     cb01          jrnz    iktqnothalf
    1133                    
    1134 00004160     2460          sll     3,a0                    ;Double credit time
    1135                    
    1136 00004170           iktqnothalf
    1137                            
    1138 00004170     09c1          movi    3500,a1
         00004180     0dac  
    1139 00004190     b02b          move    a1,*a11(ply_time)
         000041a0     0060  
    1140                    
    1141                    
    1142 000041b0     09c0          movi    110,a0                  ;Shorter time for player names message
         000041c0     006e  
    1143 000041d0     0580          move    a0,@name_cnt
         000041e0 00000c60- 
    1144                    
    1145                    
    1146 00004200     05a0          move    @GAMSTATE,a0
         00004210 00000530- 
    1147 00004230     1440          subk    ININTRO,a0
    1148 00004240     ca11          jreq    rx
    1149 00004250     b760          move    *a11(ply_meter_imgs),a0,L
         00004260     0080  
    1150 00004270     ca0b          jrz     iktqnxt
    1151                    
    1152 00004280     b760          move    *a11(ply_meter_imgs+020H),a0,L
         00004290     00a0  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   26

    1153 000042a0     b601          move    *a0(OIMG),a1,L
         000042b0     0170  
    1154 000042c0     0b61          cmpi    start,a1
         000042d0 ffffffff! 
    1155 000042f0     cb03          jrnz    iktqnxt
    1156 00004300     1921          movk    9,a1
    1157 00004310     b020          move    a1,*a0(OYPOS)
         00004320     00b0  
    1158                    
    1159 00004330     c080  iktqnxt jauc    prt_cr_timers
         00004340 00000000! 
    1160                    
    1161 00004360     0960  rx      rets
    1162                    
    1163 00004370     0001  or_t    .word   1,2,4,8
    1164                    
    1165                    
    1166                    
    1167 000043b0            SUBRP  conttimers_cnt
    1168                    
    1169 000043b0                   DIE
    1170                    
    1171                    
    1172 000043e0           game_start2
    1173 000043e0     4d0e          move    a8,a14
    1174 000043f0     2fee          srl     1,a14
    1175 00004400     05a0          move    @winningteam,a0
         00004410 00000000! 
    1176 00004430     49c0          cmp     a14,a0
    1177 00004440     ca0c          jrz     gs2
    1178                    
    1179                    
    1180 00004450            SUBRP  game_start
    1181                    
    1182 00004450     0d5f          calla   CR_STRTP
         00004460 00000000! 
    1183 00004480     c880          jalo    SUCIDE                  ;Not enough credits?
         00004490 00000000! 
    1184 000044b0     0d5f          calla   P_START                 ;Take credits
         000044c0 00000000! 
    1185                    
    1186 000044e0     0d5f          calla   QSNDRST
         000044f0 00000000! 
    1187                            
    1188                    
    1189 00004510           gs2
    1190 00004510     09c7          movi    100,a7
         00004520     0064  
    1191 00004530     1960          movk    ADJCSTRT,a0             ;credits required to start
    1192 00004540     0d5f          calla   GET_ADJ                 ;returns 1,2
         00004550 00000000! 
    1193 00004570     1420          subk    1,a0
    1194 00004580     ca02          jrz     sqixtag
    1195                    
    1196                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   27

    1197 00004590     09c7          movi    100,a7                  ;units to add ;150
         000045a0     0064  
    1198 000045b0           sqixtag
    1199                    
    1200                    
    1201 000045b0     5600          clr     a0
    1202 000045c0     09e1          movi    P1DATA,a1
         000045d0 00000000! 
    1203 000045f0     09c2          movi    PDSIZE*4/16,A2
         00004600     004c  
    1204 00004610     9001  sqixzlp move    a0,*a1+
    1205 00004620     3c42          dsj     a2,sqixzlp
    1206                    
    1207 00004630     5600          clr     a0
    1208 00004640     0580          move    a0,@gmqrtr
         00004650 00000000! 
    1209 00004670     0780          move    a0,@qtr_purchased,L     ;clr 4x16
         00004680 00000d80- 
    1210 000046a0     0780          move    a0,@qtr_purchased+20h,L
         000046b0 00000da0- 
    1211 000046d0     0580          move    a0,@plyrbighead
         000046e0 00000000! 
    1212 00004700     0580          move    a0,@inmatchup
         00004710 00000000! 
    1213                    
    1214 00004730     4ce0          move    a7,a0
    1215 00004740     0d3f          callr   add_plyr_time           ;add time to this players play time
         00004750     ff99  
    1216                    
    1217                    
    1218 00004760     09c0          movi    AUDBONE,a0              ;+1 games started from amode
         00004770     001b  
    1219 00004780     0d5f          calla   AUD1
         00004790 00000000! 
    1220                    
    1221 000047b0     09c0          movi    AUD_TOTPLYS,a0
         000047c0     0020  
    1222 000047d0     0d5f          calla   AUD1
         000047e0 00000000! 
    1223                    
    1224 00004800     1820          movk    1,a0
    1225 00004810     6300          sll     a8,a0
    1226 00004820     0580          move    a0,@PSTATUS
         00004830 00000000! 
    1227 00004850     0580          move    a0,@PSTATUS2            ;Player has started bit flags
         00004860 00000560- 
    1228                    
    1229                    
    1230 00004880     1960          movk    ADJCSTRT,a0             ;credits required to start
    1231 00004890     0d5f          calla   GET_ADJ                 ;returns 1,2
         000048a0 00000000! 
    1232                    
    1233 000048c0     0d3f          callr   paidcreds_add
         000048d0     ff20  
    1234                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   28

    1235                    
    1236 000048e0     09c0          movi    INTRO_PID,a0            ;>Intro state
         000048f0     0300  
    1237 00004900     b00d          move    a0,*a13(PROCID)
         00004910     0020  
    1238 00004920     1840          movk    ININTRO,a0
    1239 00004930     0580          move    a0,@GAMSTATE
         00004940 00000530- 
    1240                    
    1241 00004960     0d5f          calla   display_blank
         00004970 00000000! 
    1242 00004990     0d5f          calla   WIPEOUT
         000049a0 00000000! 
    1243                    
    1244                    
    1245                    
    1246 000049c0     09c0          movi    10*60,a0
         000049d0     0258  
    1247 000049e0     0580          move    a0,@cntrs_delay
         000049f0 00000000! 
    1248                    
    1249 00004a10                   SLEEPK  1
    1250                    
    1251 00004a50     5600          clr     a0
    1252 00004a60     0580          move    a0,@team1
         00004a70 00000000! 
    1253 00004a90     0580          move    a0,@team2
         00004aa0 00000000! 
    1254 00004ac0     0580          move    a0,@SOUNDSUP
         00004ad0 00000000! 
    1255 00004af0     0580          move    a0,@plyr_tourn
         00004b00 00000000! 
    1256                    
    1257                    
    1258                            .ref    special_heads
    1259                    
    1260 00004b20     09c0          movi    -1,a0
         00004b30     ffff  
    1261 00004b40     0780          move    a0,@special_heads,L
         00004b50 00000000! 
    1262 00004b70     0780          move    a0,@special_heads+20h,L
         00004b80 00000020! 
    1263                    
    1264                            .ref    dtype
    1265                    
    1266 00004ba0     5600          clr     a0
    1267 00004bb0     0580          move    a0,@dtype
         00004bc0 00000000! 
    1268                    
    1269                            .ref    monitor_fullgame
    1270 00004be0                   CREATE0 monitor_fullgame
    1271                    
    1272 00004c50     05a1          move    @winningteam,a1
         00004c60 00000000! 
    1273 00004c80     cf13          jrnn    sqixskip
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   29

    1274                    
    1275 00004c90     1820          movk    1,a0
    1276 00004ca0     0580          move    a0,@HALT
         00004cb0 00000540- 
    1277                            
    1278                    
    1279 00004cd0     5600          clr     a0
    1280 00004ce0     0580          move    a0,@HALT
         00004cf0 00000540- 
    1281 00004d10     0580          move    a0,@gmqrtr
         00004d20 00000000! 
    1282                    
    1283 00004d40     1820          movk    1,a0
    1284 00004d50     0580          move    a0,@team1
         00004d60 00000000! 
    1285 00004d80     1840          movk    2,a0
    1286 00004d90     0580          move    a0,@team2
         00004da0 00000000! 
    1287                    
    1288 00004dc0           sqixskip
    1289 00004dc0                   JSRP    initials_entry
    1290                    
    1291 00004e30     05a0          move    @team1,a0
         00004e40 00000000! 
    1292 00004e60     05a1          move    @team2,a1
         00004e70 00000000! 
    1293 00004e90     5001          and     a0,a1
    1294 00004ea0     4c21          move    a1,a1
    1295 00004eb0     cf0b          jrnn    sqixbomb_out            ;restart attract mode etc...
    1296                    
    1297 00004ec0     c080          jauc    amode_start             ;Start attract mode
         00004ed0 00000000! 
    1298                    
    1299 00004ef0 000000f0! paid_t  .long   P1DATA+crds_paid,P2DATA+crds_paid,P3DATA+crds_paid
    1300 00004f50 000000f0!         .long   P4DATA+crds_paid
    1301                    
    1302 00004f70           sqixbomb_out
    1303                    
    1304                    
    1305                    
    1306                    
    1307 00004f70     5600          clr     a0
    1308 00004f80     0580          move    a0,@cntrs_delay
         00004f90 00000000! 
    1309 00004fb0     09e0          movi    tuneq1_snd,a0
         00004fc0 00000040' 
    1310 00004fe0     0d5f          calla   snd_play1
         00004ff0 00000000! 
    1311                    
    1312 00005010                   JSRP    scrn_scaleout
    1313                    
    1314                    
    1315 00005080                   JSRP    scrn_scaleininit
    1316                    
    1317 000050f0     0d5f          calla   WIPEOUT                 ;CLEAN SYSTEM OUT
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   30

         00005100 00000000! 
    1318                    
    1319                    
    1320                    
    1321 00005120            SUBR   demogame_start                  ;Demo mode entry
    1322                    
    1323                    
    1324 00005120                   JSRP    scrn_scaleininit        ;Hide display
    1325                    
    1326 00005190     09e8          movi    security_chk-01df60H,a8
         000051a0 fffe20a0! 
    1327                    
    1328 000051c0     1820          movk    1,a0
    1329 000051d0     0580          move    a0,@dpageflip           ;ON
         000051e0 00000000! 
    1330 00005200     0580          move    a0,@dtype               ;3D
         00005210 00000000! 
    1331                    
    1332 00005230     0d5f          calla   COLRPRC                 ;Init fixed pal 0
         00005240 00013fa0' 
    1333                    
    1334                    
    1335                    
    1336 00005260     09e0          movi    [WRLDMID-200,0],a0
         00005270 1f380000  
    1337 00005290     0780          move    a0,@WORLDTLX,L
         000052a0 00000000! 
    1338 000052c0     5600          clr     a0
    1339 000052d0     0780          move    a0,@WORLDTLY,L
         000052e0 00000000! 
    1340                    
    1341 00005300                   SLEEPK  2
    1342                    
    1343                    
    1344 00005340     1820          movk    1,a0                    ;delay start of a second plyr flag
    1345 00005350     0580          move    a0,@NO_START
         00005360 00000550- 
    1346                    
    1347 00005380     09e0          movi    QRTRTIME,a0             ;3 minutes, 0 secs, 0 tenths
         00005390 03000000  
    1348 000053b0     0780          move    a0,@game_time,L
         000053c0 00000000! 
    1349 000053e0     5600          clr     a0
    1350 000053f0     0580          move    a0,@clock_speed
         00005400 00000000! 
    1351                                     
    1352                    
    1353 00005420           seccall1
    1354 00005420     4d01          move    a8,a1                   ;0CHheck security
    1355 00005430     0b21          addi    01df60H,a1
         00005440 0001df60  
    1356 00005460     0147          getpc   a7
    1357 00005470     0b07          addi    040H,a7
         00005480     0040  
    1358 00005490     a2ef          move    a7,-*sp,L
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   31

    1359 000054a0     0161          jump    a1                      ;Rets: A0=0 if OK!
    1360 000054b0           seccall1end
    1361                    
    1362                    
    1363 000054b0     0580          move    a0,@BTIME
         000054c0 00000000! 
    1364 000054e0     0580          move    a0,@idiot_bits
         000054f0 00000000! 
    1365 00005510     0580          move    a0,@HALT
         00005520 00000540- 
    1366 00005540     0580          move    a0,@_4plyrsingame
         00005550 00000000! 
    1367 00005570     09e1          movi    scores,a1
         00005580 00000000! 
    1368 000055a0     9201          move    a0,*a1+,L               ;Team 1
    1369 000055b0     9201          move    a0,*a1+,L               ;Team 2
    1370 000055c0     0580          move    a0,@timertcnt
         000055d0 00000d70- 
    1371 000055f0     0780          move    a0,@sc_proc,L
         00005600 00000000! 
    1372 00005620     0580          move    a0,@steals_off
         00005630 00000d20- 
    1373 00005650     0580          move    a0,@pass_off
         00005660 00000d40- 
    1374 00005680     0780          move    a0,@ballprcv_p,L
         00005690 00000000! 
    1375 000056b0     0580          move    a0,@crowd_animate
         000056c0 00000d60- 
    1376 000056e0     0580          move    a0,@name_flop
         000056f0 00000c70- 
    1377 00005710     0580          move    a0,@gmqrtr
         00005720 00000000! 
    1378 00005740     0580          move    a0,@fire_flags
         00005750 00000000! 
    1379                    
    1380                    
    1381 00005770     09c0          movi    1 ,a0
         00005780     0001  
    1382 00005790     0580          move    a0,@name_cnt
         000057a0 00000c60- 
    1383                    
    1384                    
    1385                    
    1386 000057c0     09c0          movi    -1,a0
         000057d0     ffff  
    1387 000057e0     0580          move    a0,@winningteam
         000057f0 00000000! 
    1388 00005810     0580          move    a0,@ballpnumlast        ;last player who had ball
         00005820 00000000! 
    1389 00005840     0580          move    a0,@inbound
         00005850 00000000! 
    1390 00005870     0580          move    a0,@cntl_team
         00005880 00000000! 
    1391 000058a0     0580          move    a0,@cntl_team_last
         000058b0 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   32

    1392 000058d0     0580          move    a0,@plyrnumonfire
         000058e0 00000000! 
    1393                    
    1394                    
    1395 00005900     1900          movk    8,a0
    1396 00005910     0580          move    a0,@ballsclastp
         00005920 00000000! 
    1397                    
    1398 00005940     18c0          movk    6,a0
    1399 00005950     0580          move    a0,@next_call
         00005960 00000000! 
    1400                    
    1401                    
    1402                    
    1403 00005980     05a0          move    @team1,a0
         00005990 00000000! 
    1404 000059b0     24a0          sll     5,a0
    1405 000059c0     0b20          addi    crt_pals,a0
         000059d0 00006a60' 
    1406 000059f0     8600  sqixnx  move    *a0,a0,L
    1407 00005a00     0780          move    a0,@crt_colors,L
         00005a10 00000d00- 
    1408                    
    1409                    
    1410                            .ref    special_heads
    1411                            .ref    our_names
    1412                    
    1413                    
    1414 00005a30     0d3f          callr   set_names
         00005a40     0f74  
    1415                    
    1416 00005a50     07a0          move    @names,a0,L
         00005a60 00000c80- 
    1417 00005a80     0780          move    a0,@original_names,L
         00005a90 00000000! 
    1418 00005ab0     07a0          move    @names+32,a0,L
         00005ac0 00000ca0- 
    1419 00005ae0     0780          move    a0,@original_names+32,L
         00005af0 00000020! 
    1420 00005b10     07a0          move    @names+64,a0,L
         00005b20 00000cc0- 
    1421 00005b40     0780          move    a0,@original_names+64,L
         00005b50 00000040! 
    1422 00005b70     07a0          move    @names+96,a0,L
         00005b80 00000ce0- 
    1423 00005ba0     0780          move    a0,@original_names+96,L
         00005bb0 00000060! 
    1424                    
    1425                    
    1426                    
    1427                            .ref    setup_speech
    1428 00005bd0     0d5f          calla   setup_speech
         00005be0 00000000! 
    1429                    
    1430 00005c00     1820          movk    1,a0
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   33

    1431 00005c10     0580          move    a0,@gndstat             ;On
         00005c20 00000000! 
    1432                    
    1433                    
    1434                    
    1435                    
    1436 00005c40     05a0          move    @GAMSTATE,a0
         00005c50 00000530- 
    1437 00005c70     1420          subk    INAMODE,a0
    1438 00005c80     ca04          jreq    sqixdemo
    1439                    
    1440 00005c90     1860          movk    INGAME,a0
    1441 00005ca0     0580          move    a0,@GAMSTATE
         00005cb0 00000530- 
    1442                    
    1443 00005cd0           sqixdemo
    1444 00005cd0     5600          clr     a0
    1445 00005ce0     0580          move    a0,@NO_START
         00005cf0 00000550- 
    1446 00005d10     0580          move    a0,@inmatchup
         00005d20 00000000! 
    1447                    
    1448                    
    1449 00005d40                   CREATE  STAT_PID,status_display
    1450                    
    1451                    
    1452                            .if     IMGVIEW
    1453                            .ref    anipts_debug
    1454                            clr     a8
    1455                            CREATE0 anipts_debug
    1456                            movk    3,a8
    1457                            CREATE0 anipts_debug
    1458                            .endif
    1459                    
    1460 00005dc0     0d3f          callr   game_initobjs
         00005dd0     02ff  
    1461                    
    1462                    
    1463 00005de0                   CREATE0 ball_main
    1464 00005e50                   CREATE  gclockid,clock_strt     ;start clock
    1465 00005ed0                   CREATE0 bracket_drw
    1466                    
    1467                    
    1468 00005f40                   CREATE0 close
    1469                    
    1470 00005fb0     0d5f          calla   clear_player_stats
         00005fc0 00000000! 
    1471                    
    1472                    
    1473                            .ref    sound_watchdog
    1474 00005fe0                   CREATE0 sound_watchdog
    1475                    
    1476                    
    1477                            .ref    name_call
    1478 00006050                   CREATE0 name_call
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   34

    1479                    
    1480 000060c0                   CREATE0 scream_snd
    1481 00006130                   CREATE0 check_idiot
    1482                    
    1483                            .ref    doflshs
    1484 000061a0                   CREATE0 doflshs
    1485                    
    1486 00006210     09e8          MOVI    [62,1],A8               ;START AT COLOR 60, CYCLE 1 COLOR
         00006220 003e0001  
    1487 00006240     09e9          MOVI    scorep,A9               ;PAL NAME
         00006250 00000000! 
    1488 00006270     09ea          MOVI    COLTAB_RNBW,A10         ;TABLE TO CYCLE WITH
         00006280 000065d0' 
    1489 000062a0     186b          MOVK    3,A11                   ;RATE OF CYCLE IN TICKS
    1490 000062b0                   CREATE  CYCPID,CYCLE_TABLE      ;START PROCESS TO DO CYCLE
    1491                    
    1492 00006330     0d3f          callr   start_arws
         00006340     00e1  
    1493                    
    1494                    
    1495                    
    1496                    
    1497 00006350     c080          jauc    plyr_start
         00006360 00000000! 
    1498                    
    1499 00006380            SUBR   join_cyc
    1500 00006380     09e8          MOVI    [29,1],A8               ;START AT COLOR 60, CYCLE 1 COLOR
         00006390 001d0001  
    1501 000063b0     09e9          MOVI    timers_b,A9             ;PAL NAME
         000063c0 00000000! 
    1502 000063e0     09ea          MOVI    COLTAB_RNBW,A10         ;TABLE TO CYCLE WITH
         000063f0 000065d0' 
    1503 00006410     186b          MOVK    3,A11                   ;RATE OF CYCLE IN TICKS
    1504 00006420                   CREATE  CYCPID,CYCLE_TABLE      ;START PROCESS TO DO CYCLE
    1505                    
    1506 000064a0     09e8          MOVI    [29,1],A8               ;START AT COLOR 60, CYCLE 1 COLOR
         000064b0 001d0001  
    1507 000064d0     09e9          MOVI    timers_r,A9             ;PAL NAME
         000064e0 00000000! 
    1508 00006500     09ea          MOVI    COLTAB_RNBW,A10         ;TABLE TO CYCLE WITH
         00006510 000065d0' 
    1509 00006530     186b          MOVK    3,A11                   ;RATE OF CYCLE IN TICKS
    1510 00006540                   CREATE  CYCPID,CYCLE_TABLE      ;START PROCESS TO DO CYCLE
    1511 000065c0     0960          rets
    1512                    
    1513                    
    1514                            .DEF    COLTAB_RNBW
    1515                    
    1516 000065d0           COLTAB_RNBW
    1517 000065d0     0380          .WORD   0380H,1380H,2380H,3380H,4380H,5380H,6380H,7380H,7300H
    1518 00006660     7280          .WORD   7280H,7200H,7180H,7080H,7008H,7008H,7010H,7010H,701CH
    1519 000066f0     701c          .WORD   701CH,601CH,501CH,409CH,309CH,209CH,219CH,029CH,039CH
    1520 00006780     139c          .WORD   139CH,239CH,339CH,539CH,739CH,7390H,7380H,6380H,4380H
    1521 00006810     0380          .WORD   0380H,1380H,2380H,3380H,4380H,5380H,6380H,7380H,7300H
    1522 000068a0     7280          .WORD   7280H,7200H,7180H,7080H,7008H,7008H,7010H,7010H,701CH
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   35

    1523 00006930     701c          .WORD   701CH,601CH,501CH,409CH,309CH,209CH,219CH,029CH,039CH
    1524 000069c0     139c          .WORD   139CH,239CH,339CH,539CH,739CH,7390H,7380H,6380H,4380H
    1525 00006a50     ffff          .word   -1
    1526                    
    1527                    
    1528 00006a60           crt_pals
    1529 00006a60 00000000!         .long   CRT_ATL_P,CRT_BOS_P,CRT_CHA_P,CRT_CHI2P
    1530 00006ae0 00000000!         .long   CRT_CLE_P,CRT_MIN_P,CRT_DEN_P,CRT_DET_P,crtblupur,CRT_HOU_P
    1531 00006ba0 00000000!         .long   CRT_IND_P,CRT_CLP_P,CRT_LAK_P,CRT_MIA_P,CRT_MIL_P,CRT_ORL2P
    1532 00006c60 00000000!         .long   CRT_NEJ_P,CRT_NEY_P,CRT_ORL_P
    1533 00006cc0 00000000!         .long   CRT_PHI_P,CRT_PHO_P,CRT_POR_P,CRT_SAC_P
    1534 00006d40 00000000!         .long   CRT_SAN_P,crtgrnyel,CRT_UTA_P
    1535 00006da0 00000000!         .long   CRT_WAS_P,crtblupur
    1536                    
    1537 00006de0           crt_pals_z
    1538 00006de0 00021bd0"         .long   CRD_ATL_P+32,CRD_BOS_P+32,CRD_CHA_P+32,CRD_CHI2P+32
    1539 00006e60 00021f40"         .long   CRD_CLE_P+32,CRD_MIN_P+32,CRD_DEN_P+32,CRD_DET_P+32,CRD_DET_P+32,CRD_HOU_P+32
    1540 00006f20 00022410"         .long   CRD_IND_P+32,CRD_CLP_P+32,CRD_LAK_P+32,CRD_MIA_P+32,CRD_MIL_P+32,CRD_ORL2P+32
    1541 00006fe0 00022780"         .long   CRD_NEJ_P+32,CRD_NEY_P+32,CRD_ORL_P+32
    1542 00007040 00022200"         .long   CRD_DET_P+32,CRD_PHO_P+32,CRD_POR_P+32,CRD_SAC_P+32
    1543 000070c0 00022c50"         .long   CRD_SAN_P+32,CRD_SEA_P+32,CRD_UTA_P+32
    1544 00007120 00022f10"         .long   CRD_WAS_P+32,CRD_DET_P+32
    1545                    
    1546                    
    1547                    
    1548 00007160            SUBR   start_arws
    1549                    
    1550                    
    1551 00007160     1868          movk    3,a8                    ;0DHo init stuff for humans
    1552 00007170           sqixpsilp
    1553 00007170     09cb          movi    PDSIZE,a11
         00007180     0130  
    1554 00007190     5f0b          mpyu    a8,a11
    1555 000071a0     0b2b          addi    P1DATA,a11
         000071b0 00000000! 
    1556 000071d0                   CREATE  ARWPID,plyr_lost                ;Pass A8 (0-3)
    1557 00007250     1428  sqixnoplyr      subk    1,a8
    1558 00007260     c5f0          jrge    sqixpsilp
    1559                    
    1560                            .ref    stick_numbers
    1561 00007270     09ea          movi    P1DATA,a10
         00007280 00000000! 
    1562 000072a0                   CREATE  ARWPID,stick_numbers
    1563 00007320     09ea          movi    P2DATA,a10
         00007330 00000000! 
    1564 00007350                   CREATE  ARWPID,stick_numbers
    1565 000073d0     09ea          movi    P3DATA,a10
         000073e0 00000000! 
    1566 00007400                   CREATE  ARWPID,stick_numbers
    1567 00007480     09ea          movi    P4DATA,a10
         00007490 00000000! 
    1568 000074b0                   CREATE  ARWPID,stick_numbers
    1569                    
    1570                            .ref    stick_cpu
    1571 00007530     576b          clr     a11
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   36

    1572 00007540     09ea          movi    P1DATA,a10
         00007550 00000000! 
    1573 00007570                   CREATE  ARWPID,stick_cpu
    1574 000075f0     182b          movk    1,a11
    1575 00007600     09ea          movi    P2DATA,a10
         00007610 00000000! 
    1576 00007630                   CREATE  ARWPID,stick_cpu
    1577 000076b0     184b          movk    2,a11
    1578 000076c0     09ea          movi    P3DATA,a10
         000076d0 00000000! 
    1579 000076f0                   CREATE  ARWPID,stick_cpu
    1580 00007770     186b          movk    3,a11
    1581 00007780     09ea          movi    P4DATA,a10
         00007790 00000000! 
    1582 000077b0                   CREATE  ARWPID,stick_cpu
    1583                    
    1584                    
    1585 00007830                   CREATE0 delay_sparks
    1586                    
    1587 000078a0     0960          rets
    1588                    
    1589                    
    1590 000078b0           delay_sparks
    1591                            .ref    stick_spark
    1592                            .ref    stick_spark2
    1593 000078b0                   SLEEPK  10
    1594 000078f0     07a0          move    @plyrproc_t,a0,L
         00007900 00000000! 
    1595 00007920     b600          move    *a0(plyr_attrib_p),a0,L
         00007930     0150  
    1596 00007940     b600          move    *a0(PAT_HEADT_p),a0,L
         00007950     0120  
    1597 00007960     0b60          cmpi    EB_H,a0
         00007970 ffffffff! 
    1598 00007990     ca04          jrz     sqixdoit1
    1599 000079a0     0b60          cmpi    JTO_H,a0
         000079b0 ffffffff! 
    1600 000079d0     cb18          jrnz    sqixck2
    1601                    
    1602                    
    1603 000079e0     576b  sqixdoit1       clr     a11
    1604 000079f0     09ea          movi    P1DATA,a10
         00007a00 00000000! 
    1605 00007a20                   CREATE  ARWPID,stick_spark
    1606 00007aa0     576b          clr     a11
    1607 00007ab0     09ea          movi    P1DATA,a10
         00007ac0 00000000! 
    1608 00007ae0                   CREATE  ARWPID,stick_spark2
    1609 00007b60           sqixck2
    1610 00007b60     07a0          move    @plyrproc_t+32,a0,L
         00007b70 00000020! 
    1611 00007b90     b600          move    *a0(plyr_attrib_p),a0,L
         00007ba0     0150  
    1612 00007bb0     b600          move    *a0(PAT_HEADT_p),a0,L
         00007bc0     0120  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   37

    1613 00007bd0     0b60          cmpi    EB_H,a0
         00007be0 ffffffff! 
    1614 00007c00     ca04          jrz     sqixdoit2
    1615 00007c10     0b60          cmpi    JTO_H,a0
         00007c20 ffffffff! 
    1616 00007c40     cb18          jrnz    sqixck3
    1617                    
    1618                    
    1619 00007c50     182b  sqixdoit2       movk    1,a11
    1620 00007c60     09ea          movi    P2DATA,a10
         00007c70 00000000! 
    1621 00007c90                   CREATE  ARWPID,stick_spark
    1622 00007d10     182b          movk    1,a11
    1623 00007d20     09ea          movi    P2DATA,a10
         00007d30 00000000! 
    1624 00007d50                   CREATE  ARWPID,stick_spark2
    1625 00007dd0           sqixck3
    1626 00007dd0     07a0          move    @plyrproc_t+64,a0,L
         00007de0 00000040! 
    1627 00007e00     b600          move    *a0(plyr_attrib_p),a0,L
         00007e10     0150  
    1628 00007e20     b600          move    *a0(PAT_HEADT_p),a0,L
         00007e30     0120  
    1629 00007e40     0b60          cmpi    EB_H,a0
         00007e50 ffffffff! 
    1630 00007e70     ca04          jrz     sqixdoit3
    1631 00007e80     0b60          cmpi    JTO_H,a0
         00007e90 ffffffff! 
    1632 00007eb0     cb18          jrnz    sqixck4
    1633                    
    1634                    
    1635 00007ec0     184b  sqixdoit3       movk    2,a11
    1636 00007ed0     09ea          movi    P3DATA,a10
         00007ee0 00000000! 
    1637 00007f00                   CREATE  ARWPID,stick_spark
    1638 00007f80     184b          movk    2,a11
    1639 00007f90     09ea          movi    P3DATA,a10
         00007fa0 00000000! 
    1640 00007fc0                   CREATE  ARWPID,stick_spark2
    1641 00008040           sqixck4
    1642 00008040     07a0          move    @plyrproc_t+96,a0,L
         00008050 00000060! 
    1643 00008070     b600          move    *a0(plyr_attrib_p),a0,L
         00008080     0150  
    1644 00008090     b600          move    *a0(PAT_HEADT_p),a0,L
         000080a0     0120  
    1645 000080b0     0b60          cmpi    EB_H,a0
         000080c0 ffffffff! 
    1646 000080e0     ca04          jrz     sqixdoit4
    1647 000080f0     0b60          cmpi    JTO_H,a0
         00008100 ffffffff! 
    1648 00008120     cb18          jrnz    sqixck5
    1649                    
    1650                    
    1651 00008130     186b  sqixdoit4       movk    3,a11
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   38

    1652 00008140     09ea          movi    P4DATA,a10
         00008150 00000000! 
    1653 00008170                   CREATE  ARWPID,stick_spark
    1654 000081f0     186b          movk    3,a11
    1655 00008200     09ea          movi    P4DATA,a10
         00008210 00000000! 
    1656 00008230                   CREATE  ARWPID,stick_spark2
    1657 000082b0           sqixck5
    1658 000082b0                   DIE
    1659                    
    1660                    
    1661 000082e0           check_idiot
    1662                    
    1663 000082e0     09ca          movi    60,a10
         000082f0     003c  
    1664                    
    1665 00008300           xgbwc1  SLEEP   TSEC
    1666 00008350     05a0          move    @HALT,a0
         00008360 00000540- 
    1667 00008380     cbf7           jrnz   xgbwc1
    1668                    
    1669 00008390     3d4a          dsj     a10,xgbwc1
    1670                    
    1671 000083a0     09c2          movi    30,a2
         000083b0     001e  
    1672                    
    1673 000083c0     05a0          move    @P1DATA+ply_idiot_use,a0
         000083d0 00000120! 
    1674 000083f0     4840          cmp     a2,a0
    1675 00008400     c703          jrgt    xgbwck2
    1676 00008410     5621          clr     a1
    1677 00008420     0d3f          callr   try_ib
         00008430     002e  
    1678 00008440           xgbwck2
    1679 00008440     05a0          move    @P2DATA+ply_idiot_use,a0
         00008450 00000120! 
    1680 00008470     4840          cmp     a2,a0
    1681 00008480     c703          jrgt    xgbwck3
    1682 00008490     1821          movk    1,a1
    1683 000084a0     0d3f          callr   try_ib
         000084b0     0026  
    1684 000084c0           xgbwck3
    1685 000084c0     05a0          move    @P3DATA+ply_idiot_use,a0
         000084d0 00000120! 
    1686 000084f0     4840          cmp     a2,a0
    1687 00008500     c703          jrgt    xgbwck4
    1688 00008510     1841          movk    2,a1
    1689 00008520     0d3f          callr   try_ib
         00008530     001e  
    1690 00008540           xgbwck4
    1691 00008540     05a0          move    @P4DATA+ply_idiot_use,a0
         00008550 00000120! 
    1692 00008570     4840          cmp     a2,a0
    1693 00008580     c703          jrgt    xgbwckx
    1694 00008590     1861          movk    3,a1
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   39

    1695 000085a0     0d3f          callr   try_ib
         000085b0     0016  
    1696                    
    1697 000085c0           xgbwckx SLEEP   6*60
    1698                    
    1699 00008610     09e0          movi    organ1_snd,a0
         00008620 000000c0' 
    1700 00008640     05a1          move    @HCOUNT,a1
         00008650 c00001c0  
    1701 00008670     1fc1          btst    1,a1
    1702 00008680     cb03          jrnz    xgbwckk
    1703 00008690     09e0          movi    organ2_snd,a0
         000086a0 00000100' 
    1704 000086c0           xgbwckk
    1705 000086c0     0d5f          calla   snd_play1ovr
         000086d0 00000000! 
    1706                    
    1707 000086f0                   DIE
    1708                            
    1709                    
    1710 00008720           try_ib
    1711 00008720     18e0          movk    7,a0                    ;Use turbo to run
    1712 00008730     c080          jauc    idiot_box
         00008740 00000000! 
    1713                    
    1714                    
    1715                    
    1716 00008760           close   
    1717 00008760                   SLEEPK  5
    1718                    
    1719                    
    1720                    
    1721 000087a0                   JSRP    scrn_scalein
    1722                    
    1723                    
    1724 00008810     5600          clr     a0
    1725 00008820     0580          move    a0,@IRQSKYE
         00008830 00000000! 
    1726                    
    1727                    
    1728 00008850     1820          movk    1,a0
    1729 00008860     0580          move    a0,@HALT
         00008870 00000540- 
    1730                    
    1731                    
    1732                            .ref    instructions
    1733 00008890                   JSRP    instructions
    1734                    
    1735 00008900     5600          clr     a0
    1736 00008910     0580          move    a0,@HALT
         00008920 00000540- 
    1737 00008940     0580          move    a0,@cntrs_delay
         00008950 00000000! 
    1738                    
    1739 00008970     09e0          movi    tip_snd,a0
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   40

         00008980 00000000' 
    1740 000089a0     0d5f          calla   snd_play1ovr
         000089b0 00000000! 
    1741                    
    1742                    
    1743                    
    1744 000089d0                   DIE
    1745                    
    1746                    
    1747 00008a00           scream_snd
    1748 00008a00     09e0          movi    scrm1_snd,a0
         00008a10 00008cd0' 
    1749 00008a30     0d5f          calla   snd_play1
         00008a40 00000000! 
    1750 00008a60                   SLEEP   85
    1751 00008ab0     09e0          movi    scrm2_snd,a0
         00008ac0 00008d10' 
    1752 00008ae0     0d5f          calla   snd_play1
         00008af0 00000000! 
    1753 00008b10                   SLEEP   85
    1754 00008b60     09e0          movi    scrm3_snd,a0
         00008b70 00008d50' 
    1755 00008b90     0d5f          calla   snd_play1
         00008ba0 00000000! 
    1756 00008bc0                   SLEEP   85
    1757 00008c10     09e0          movi    scrm4_snd,a0
         00008c20 00008d90' 
    1758 00008c40     0d5f          calla   snd_play1
         00008c50 00000000! 
    1759 00008c70                   SLEEP   85
    1760 00008cc0     c0d3          jruc    scream_snd
    1761                    
    1762                            .def    scrm1_snd,scrm2_snd,scrm3_snd,scrm4_snd
    1763                    
    1764 00008cd0     f540  scrm1_snd       .word   0f540H,10,0813dH,0
    1765 00008d10     f040  scrm2_snd       .word   0f040H,10,0814bH,0
    1766 00008d50     f440  scrm3_snd       .word   0f440H,10,0815eH,0
    1767 00008d90     f540  scrm4_snd       .word   0f540H,10,0815fH,0      ;<--- check channel on this
    1768                    
    1769                    
    1770 00008dd0            SUBRP  game_initobjs
    1771                    
    1772                    
    1773 00008dd0     09eb          movi    ipxhinit_t,a11          ;>Setup crowd, hoops, side crowd
         00008de0 000094d0' 
    1774 00008e00     c05f          jruc    ipxhnext
    1775 00008e10           ipxhlp
    1776 00008e10     0b40          cmpi    4001,a0                 ;>Start process
         00008e20     f05e  
    1777 00008e30     cb06          jrne    ipxhsvptr
    1778 00008e40     5621          clr     a1
    1779 00008e50     9767          move    *a11+,a7,L              ;*Code
    1780 00008e60     0d5f          calla   GETPRC                  ;Pass last obj in A8
         00008e70 00000000! 
    1781 00008e90     c056          jruc    ipxhnext
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   41

    1782                    
    1783 00008ea0     0b40  ipxhsvptr       cmpi    4002,a0                 ;>Save variable
         00008eb0     f05d  
    1784 00008ec0     cb03          jrne    ipxhobj
    1785 00008ed0     9761          move    *a11+,a1,L              ;*Var
    1786 00008ee0     8301          move    a8,*a1,L
    1787 00008ef0     c050          jruc    ipxhnext
    1788                    
    1789 00008f00     9561  ipxhobj move    *a11+,a1                ;Y
    1790 00008f10     2600          sll     16,a0
    1791 00008f20     2601          sll     16,a1
    1792 00008f30     9563          move    *a11+,a3                ;Z
    1793 00008f40     9569          move    *a11+,a9                ;Z offset
    1794 00008f50     9564          move    *a11+,a4
    1795 00008f60     0ba4          ori     DMAWNZ|M_NOCOLL,a4
         00008f70 00008802  
    1796 00008f90     9762          move    *a11+,a2,L
    1797 00008fa0     09c5          movi    CLSDEAD,a5
         00008fb0     2000  
    1798 00008fc0     56c6          clr     a6
    1799 00008fd0     56e7          clr     a7
    1800 00008fe0     0d5f          calla   BEGINOBJ
         00008ff0 00000000! 
    1801                    
    1802 00009010     b128          move    a9,*a8(OMISC)
         00009020     0210  
    1803 00009030     8440          move    *a2,a0                  ;Width
    1804 00009040     25e0          sll     15,a0
    1805 00009050     b208          move    a0,*a8(OXANI),L         ;Save anipt
         00009060     01e0  
    1806                    
    1807                    
    1808 00009070     1f24          btst    B_3DQ,a4
    1809 00009080     ca37          jrz     ipxhnext
    1810                                                            ;0CHonvert 3D to 3DQ
    1811 00009090     4123          add     a9,a3
    1812 000090a0     0be3          subi    GZBASE,a3
         000090b0     fc81  
    1813 000090c0     4c66          move    a3,a6
    1814 000090d0     2503          sll     8,a3                    ;*256
    1815 000090e0     09c1          movi    725,a1
         000090f0     02d5  
    1816 00009100     5a23          divu    a1,a3
    1817 00009110     2483          sll     4,a3                    ;*16
    1818 00009120     0b23          addi    gndpos_t,a3
         00009130 00000000! 
    1819 00009150     b268          move    a3,*a8(ODATA_p),L
         00009160     01c0  
    1820                    
    1821 00009170     4cc3          move    a6,a3
    1822 00009180     2be6          sra     1,a6                    ;Z/2
    1823 00009190     2ba3          sra     3,a3                    ;Z/8
    1824 000091a0     4466          sub     a3,a6                   ;=Z/2.667
    1825                    
    1826 000091b0     0b06          addi    GND_Y,a6
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   42

         000091c0     004c  
    1827 000091d0     b500          move    *a8(OYPOS),a0
         000091e0     00b0  
    1828 000091f0     40c0          add     a6,a0
    1829 00009200     b008          move    a0,*a8(OYPOS)
         00009210     00b0  
    1830                    
    1831                    
    1832 00009220     b707          move    *a8(OXVAL),a7,L         ;X
         00009230     0080  
    1833 00009240     0d07          subi    [02000H,0],a7
         00009250 dfffffff  
    1834 00009270     b705          move    *a8(OXANI),a5,L
         00009280     01e0  
    1835 00009290     40a7          add     a5,a7
    1836 000092a0     2aa7          sra     16-5,a7                 ;/2048 (leave 5 bits frac)
    1837                    
    1838 000092b0     b502          move    *a8(OZPOS),a2           ;894 to 1379 (Z range 486)
         000092c0     00d0  
    1839 000092d0     b503          move    *a8(OMISC),a3           ;Z offset
         000092e0     0210  
    1840 000092f0     4062          add     a3,a2
    1841 00009300     4c46          move    a2,a6
    1842                    
    1843 00009310     0b02          addi    (819-GZBASE),a2         ;768 to ?
         00009320     ffb5  
    1844 00009330     5c47          mpys    a2,a7
    1845 00009340     4ce3          move    a7,a3
    1846 00009350     2bc3          sra     2,a3                    ;/4
    1847 00009360     4467          sub     a3,a7
    1848 00009370     2be3          sra     1,a3                    ;/2
    1849 00009380     4467          sub     a3,a7
    1850 00009390     2a47          sra     14,a7                   ;/16k
    1851 000093a0     0b07          addi    200,a7
         000093b0     00c8  
    1852 000093c0     2a05          sra     16,a5
    1853 000093d0     44a7          sub     a5,a7                   ;-X anipt
    1854                    
    1855 000093e0     b0e8          move    a7,*a8(OXPOS)
         000093f0     0090  
    1856                    
    1857                    
    1858 00009400     9560  ipxhnext        move    *a11+,a0                ;X
    1859 00009410     0b40          cmpi    4000,a0
         00009420     f05f  
    1860 00009430     cb9d          jrne    ipxhlp                  ;!End?
    1861                    
    1862 00009440     05a0          move    @team1,a0
         00009450 00000000! 
    1863 00009470     0580          move    a0,@oteam1
         00009480 00000000! 
    1864 000094a0     0d3f          callr   random_ads
         000094b0     0663  
    1865 000094c0     0960          rets
    1866                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   43

    1867                    
    1868                    
    1869                            .asg    M_3DQ|M_NOSCALE,F
    1870                            .asg    M_3DQ|M_NOSCALE|M_FLIPH,FF
    1871                    
    1872                            .asg    8,Y
    1873                            .asg    CZMID,Z
    1874                    
    1875 000094d0           ipxhinit_t
    1876 000094d0     ff4d          .word   0ff4aH+3,0ff49H+Y-5,Z-18,18,F
    1877 00009520 00000000!         .long   hooptop
    1878 00009540     ff5b          .word   0ff58H+3,0ff46H-7+Y,Z+1,0,F
    1879 00009590 00000000!         .long   hoopbot
    1880 000095b0     ff2a          .word   0ff27H+3,0ff4bH+2+Y,Z-17,17,F
    1881 00009600 00000000!         .long   back2
    1882 00009620                   WL      4001,backboard_ani
    1883 00009650     ff78          .word   0ff75H+3,0ff7aH+2+Y-1,Z,0,F
    1884 000096a0 00000000!         .long   rimbase
    1885 000096c0     ff7b          .word   0ff78H+3,0ff7dH+2+Y,Z-10,0,F
    1886 00009710 00000000!         .long   rim1b
    1887 00009730                   WL      4002,rimlb
    1888 00009760     ff7d          .word   0ff7aH+3,0ff7aH+2+Y,Z+10,0,F
    1889 000097b0 00000000!         .long   rim1f
    1890 000097d0                   WL      4002,rimlf
    1891                    
    1892                            .asg    2,X
    1893                    
    1894 00009800     0243          .word   X+0241H,0ff49H+Y-5,Z-18,18,FF
    1895 00009850 00000000!         .long   hooptop
    1896 00009870     0236          .word   X+0234H,0ff46H-7+Y,Z,0,FF
    1897 000098c0 00000000!         .long   hoopbot
    1898 000098e0     0269          .word   X+0267H,0ff4bH+2+Y,Z-17,17,FF
    1899 00009930 00000000!         .long   back2
    1900 00009950                   WL      4001,backboard_svrptr
    1901 00009980     0219          .word   X+0215H+2,0ff7aH+2+Y-1,Z,0,FF
    1902 000099d0 00000000!         .long   rimbase
    1903 000099f0     0214          .word   X+0212H,0ff7dH+2+Y,Z-10,0,FF
    1904 00009a40 00000000!         .long   rim1b
    1905 00009a60                   WL      4002,rimrb
    1906 00009a90     0212          .word   X+0210H,0ff7aH+2+Y,Z+10,0,FF
    1907 00009ae0 00000000!         .long   rim1f
    1908 00009b00                   WL      4002,rimrf
    1909                    
    1910 00009b30     ff92          .word   200-310,1,599,500,F
    1911 00009b80 00027fa0"         .long   reflc2
    1912 00009ba0                   WL      4001,get_proper_pal
    1913 00009bd0     ff9a          .word   200-302,3,720,500,F
    1914 00009c20 00027f10"         .long   reflc1
    1915 00009c40                   WL      4001,get_proper_pal
    1916 00009c70     002c          .word   200-156,0,590,500,F
    1917 00009cc0 00028030"         .long   reflc3
    1918 00009ce0                   WL      4001,get_proper_pal
    1919 00009d10     0036          .word   200-146,0,718,500,F
    1920 00009d60 000280c0"         .long   reflc4
    1921                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   44

    1922                    
    1923 00009d80                   WL      4001,get_proper_pal
    1924 00009db0     0154          .word   200+140,0,590,500,F
    1925 00009e00 00028030"         .long   reflc3
    1926 00009e20                   WL      4001,get_proper_pal
    1927 00009e50     014c          .word   200+132,0,718,500,F
    1928 00009ea0 000280c0"         .long   reflc4
    1929 00009ec0                   WL      4001,get_proper_pal
    1930 00009ef0     0200          .word   200+312,1,599,500,FF
    1931 00009f40 00027fa0"         .long   reflc2
    1932 00009f60                   WL      4001,get_proper_pal
    1933 00009f90     01f6          .word   200+302,3,720,500,FF
    1934 00009fe0 00027f10"         .long   reflc1
    1935 0000a000                   WL      4001,get_proper_pal
    1936                    
    1937                            .asg    100,X
    1938                            .asg    -12,Y
    1939                    
    1940 0000a030     fec8          .word   0fec8H,Y-95,200,0,0
    1941 0000a080 00028150"         .long   topcrwd
    1942 0000a0a0     fec8          .word   0fec8H,Y,200,0,0
    1943 0000a0f0 00029740"         .long   crowd40
    1944 0000a110                   WL      4002,bigcrwd1_ptr
    1945 0000a140     0054          .word   054H,Y-95,200,0,0
    1946 0000a190 00028150"         .long   topcrwd
    1947 0000a1b0     0054          .word   054H,Y,200,0,0
    1948 0000a200 00029740"         .long   crowd40
    1949 0000a220                   WL      4002,bigcrwd2_ptr
    1950 0000a250     036a          .word   036aH,Y-95,200,0,M_FLIPH
    1951 0000a2a0 00028150"         .long   topcrwd
    1952 0000a2c0     036a          .word   036aH,Y,200,0,M_FLIPH
    1953 0000a310 00029740"         .long   crowd40
    1954 0000a330                   WL      4002,bigcrwd3_ptr
    1955                    
    1956                    
    1957                            .asg    200-56,X
    1958                            .asg    -43,Y
    1959                            .asg    919,Z
    1960 0000a360     ff9b          .word   X-245,Y,Z,0,F
    1961 0000a3b0 00028c90"         .long   crowd3
    1962 0000a3d0                   WL      4002,crwd5_ptr
    1963 0000a400     002a          .word   02aH,Y,Z,0,F
    1964 0000a450 000288a0"         .long   newtbl3
    1965 0000a470     01ef          .word   01efH,Y,Z,0,FF
    1966 0000a4c0 00028c90"         .long   crowd3
    1967 0000a4e0                   WL      4002,crwd6_ptr
    1968                    
    1969                            .asg    200-63,X
    1970                            .asg    -48,Y
    1971                            .asg    947,Z
    1972 0000a510     fed9          .word   0fed9H,0ffccH,Z+8,0,F
    1973 0000a560 00028660"         .long   usher
    1974 0000a580     ff9c          .word   0ffa4H+12-20,0ffc0H,Z,0,F
    1975 0000a5d0 00028660"         .long   usher
    1976 0000a5f0     0035          .word   035H,0ffc6H,Z,0,FF
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   45

    1977 0000a640 00028660"         .long   usher
    1978 0000a660     016a          .word   016aH,0ffd6H-12,Z,0,FF
    1979 0000a6b0 00028660"         .long   usher
    1980 0000a6d0     01ef          .word   01efH,0ffc0H-0,Z,0,FF
    1981 0000a720 00028660"         .long   usher
    1982 0000a740     02b4          .word   02b4H,0ffcfH,Z+5,0,FF
    1983 0000a790 00028660"         .long   usher
    1984 0000a7b0     fed9          .word   X-256-177+1,Y+2,Z,0,F
    1985 0000a800 00028c00"         .long   crowd2b
    1986                    
    1987 0000a820     ff85          .word   0ff85H,0ffd0H,Z,0,F
    1988 0000a870 00028b70"         .long   crowd2a
    1989 0000a890                   WL      4002,crwd3_ptr
    1990                    
    1991 0000a8c0     ff83          .word   0ff83H,0ffcfH,Z,0,F
    1992 0000a910 00028390"         .long   newtbl2
    1993                    
    1994 0000a930     007f          .word   07fH,0ffcfH,Z,0,F
    1995 0000a980 000281e0"         .long   table2
    1996 0000a9a0     0203          .word   0203H,0ffd0H,Z,0,FF
    1997 0000a9f0 00028b70"         .long   crowd2a
    1998 0000aa10                   WL      4002,crwd4_ptr
    1999                    
    2000 0000aa40     02b3          .word   X+87+257+216-6,Y+2,Z,0,FF
    2001 0000aa90 00028c00"         .long   crowd2b
    2002                    
    2003                            .asg    200-53,X
    2004                            .asg    -40,Y
    2005                            .asg    985,Z
    2006 0000aab0     fedd          .word   X-438,Y-3,Z,0,F
    2007 0000ab00 00028ae0"         .long   crowd1b
    2008 0000ab20     ffb0          .word   0ffb0H,0ffd9H,Z,0,F
    2009 0000ab70 00028a50"         .long   crowd1a
    2010 0000ab90                   WL      4002,crwd1_ptr
    2011 0000abc0     ff98          .word   0ff98H,0ffd9H,Z,0,F
    2012 0000ac10 00028300"         .long   newtbl1
    2013                    
    2014                    
    2015                    
    2016                    
    2017 0000ac30     ffa5          .word   0ffa5H,0ffd9H,Z,0,F
    2018 0000ac80 000274f0"         .long   ad1                             ;ad at left
    2019 0000aca0                   WL      4002,ad1_ptr
    2020                    
    2021 0000acd0     00dd          .word   0ddH,0ffd3H,Z,0,F
    2022 0000ad20 00027610"         .long   ad2                             ;ad at left
    2023 0000ad40                   WL      4002,ad2_ptr
    2024                    
    2025 0000ad70     0039          .word   200-144+2-1,6,Z-50,50,F
    2026 0000adc0 00027580"         .long   ad1ref                          ;left reflection
    2027 0000ade0                   WL      4002,ad1ref_ptr
    2028 0000ae10     00f1          .word   200+41+0,6,Z-50,50,F
    2029 0000ae60 000276a0"         .long   ad2ref                          ;rgt reflection
    2030 0000ae80                   WL      4002,ad2ref_ptr
    2031                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   46

    2032                    
    2033                    
    2034                    
    2035 0000aeb0     01db          .word   01dbH,0ffd9H,Z,0,FF             ;for animating top crowd
    2036 0000af00 00028a50"         .long   crowd1a
    2037 0000af20                   WL      4002,crwd2_ptr
    2038                    
    2039 0000af50     02ae          .word   X+68+241+230,Y-3,Z,0,FF
    2040 0000afa0 00028ae0"         .long   crowd1b
    2041                    
    2042 0000afc0     0000          .word   200-200,7,Z-50,50,F
    2043 0000b010 00028270"         .long   cdre0
    2044                    
    2045                    
    2046 0000b030     018b          .word   018bH,7,Z-50,50,FF      ;flipped camera guy reflections
    2047 0000b080 00028270"         .long   cdre0
    2048                    
    2049                    
    2050                            .asg    200-450,X
    2051                            .asg    985,Z
    2052                    
    2053                    
    2054                    
    2055 0000b0a0     ff00          .word   0Ff00H,0FFDEH,Z,0,F
    2056 0000b0f0 000291a0"         .long   sdcrwd8
    2057 0000b110                   WL      4002,sl8_ptr
    2058 0000b140     fefa          .word   0FEFaH,0FFDBH,Z+28,0,F
    2059 0000b190 00029110"         .long   sdcrwd7
    2060 0000b1b0                   WL      4002,sl7_ptr
    2061 0000b1e0     fef8          .word   0FEF8H,0FFD4H,Z+70,0,F
    2062 0000b230 00029080"         .long   sdcrwd6
    2063 0000b250                   WL      4002,sl6_ptr
    2064 0000b280     feed          .word   0FEEDH,0FFCEH,Z+98,0,F
    2065 0000b2d0 00028ff0"         .long   sdcrwd5
    2066 0000b2f0                   WL      4002,sl5_ptr
    2067                    
    2068                    
    2069                    
    2070                    
    2071                    
    2072 0000b320     ff54          .word   0Ff54H,0FFe9H,03efH,42h,F
    2073 0000b370 0002a9d0"         .long   cheer1
    2074 0000b390                   WL      4002,cheer1_ptr
    2075 0000b3c0     ff5b          .word   0Ff5bH,0FFe7H,03e0H,39h,F
    2076 0000b410 0002ae50"         .long   cary1
    2077 0000b430                   WL      4002,cheer2_ptr
    2078                    
    2079                    
    2080                    
    2081                    
    2082                    
    2083 0000b460     feeb          .word   0FEECH-1,0FFB0H,Z+152,0,F
    2084 0000b4b0 00028f60"         .long   sdcrwd4
    2085 0000b4d0                   WL      4002,sl4_ptr
    2086 0000b500     ff00          .word   0FF00H,0FFB7H,Z+240,0,F
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   47

    2087 0000b550 00028ed0"         .long   sdcrwd3
    2088 0000b570                   WL      4002,sl3_ptr
    2089 0000b5a0     ff06          .word   0FF06H,0FFC3H,Z+284,0,F
    2090 0000b5f0 00028e40"         .long   sdcrwd2
    2091 0000b610                   WL      4002,sl2_ptr
    2092 0000b640     fef8          .word   0FF00H-8,0FFB0H,Z+379,0,F
    2093 0000b690 00028db0"         .long   sdcrwd1
    2094 0000b6b0                   WL      4002,sl1_ptr
    2095                    
    2096                            .asg    200+450,X
    2097                    
    2098 0000b6e0     0292          .word   0292H,0ffdbH,Z,0,FF
    2099 0000b730 000291a0"         .long   sdcrwd8
    2100 0000b750                   WL      4002,sr8_ptr
    2101 0000b780     029d          .word   0297H+6,0ffd8H,Z+28,0,FF
    2102 0000b7d0 00029110"         .long   sdcrwd7
    2103 0000b7f0                   WL      4002,sr7_ptr
    2104 0000b820     0299          .word   0299H,0ffd1H,Z+70,0,FF
    2105 0000b870 00029080"         .long   sdcrwd6
    2106 0000b890                   WL      4002,sr6_ptr
    2107 0000b8c0     02a6          .word   02a6H,0ffccH,Z+98,0,FF
    2108 0000b910 00028ff0"         .long   sdcrwd5
    2109 0000b930                   WL      4002,sr5_ptr
    2110 0000b960     0244          .word   0244H,0ffaaH,Z+152,0,F
    2111 0000b9b0 00029350"         .long   nsdcrwd4a
    2112 0000b9d0                   WL      4002,sr4_ptr
    2113 0000ba00     0240          .word   0240H,0ffb3H,Z+240,0,F
    2114 0000ba50 000296b0"         .long   nsdcrwd3a
    2115 0000ba70                   WL      4002,sr3_ptr
    2116 0000baa0     0242          .word   0242H,0ffb2H,Z+284,0,F
    2117 0000baf0 000292c0"         .long   nsdcrwd2a
    2118 0000bb10                   WL      4002,sr2_ptr
    2119 0000bb40     0242          .word   023dH+5,0ffa7H+2,Z+379,0,F
    2120 0000bb90 00029230"         .long   nsdcrwd1a
    2121 0000bbb0                   WL      4002,sr1_ptr
    2122                    
    2123 0000bbe0     0fa0          .word   4000            ;End
    2124                    
    2125                    
    2126                    
    2127 0000bbf0            SUBRP  get_proper_pal
    2128                    
    2129 0000bbf0                   SLEEPK  3
    2130 0000bc30     07a0          move    @crt_colors,a0,L
         0000bc40 00000d00- 
    2131 0000bc60     0d5f          calla   pal_getf
         0000bc70 00000000! 
    2132 0000bc90     b008          move    a0,*a8(OPAL)
         0000bca0     0150  
    2133 0000bcb0                   DIE
    2134                    
    2135                    
    2136                    
    2137                            .ref    bbshatter
    2138                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   48

    2139 00000e80                   .bss    bbrgt_p ,32     ;*Rgt bboard
    2140                    
    2141 0000bce0            SUBRP  backboard_ani
    2142                    
    2143 0000bce0                   SLEEPK  30
    2144                    
    2145 0000bd20     07a9          move    @bbrgt_p,a9,L
         0000bd30 00000e80- 
    2146 0000bd50     09ea          movi    bbshatter,a10
         0000bd60 00000000! 
    2147 0000bd80     09eb          movi    gndx+16,a11
         0000bd90 00000010! 
    2148 0000bdb0           eskalp
    2149 0000bdb0     4d06          move    a8,a6
    2150 0000bdc0     8560          move    *a11,a0
    2151 0000bdd0     ce01          jrn     eskalft
    2152 0000bde0     4d26          move    a9,a6
    2153 0000bdf0           eskalft
    2154 0000bdf0     0380          abs     a0
    2155 0000be00     0be0          subi    190,a0
         0000be10     ff41  
    2156 0000be20     ce17          jrn     eskafixbb
    2157                    
    2158 0000be30     2f80          srl     4,a0                    ;/16
    2159 0000be40     24a0          sll     5,a0                    ;*32
    2160 0000be50     0b20          addi    eskaani_t,a0
         0000be60 0000bfd0' 
    2161 0000be80     854e          move    *a10,a14
    2162 0000be90     ca02          jrz     eskabok
    2163 0000bea0     0b00          addi    eskasani_t-eskaani_t,a0,W
         0000beb0     0120  
    2164 0000bec0           eskabok
    2165 0000bec0     8601          move    *a0,a1,L
    2166 0000bed0     b226          move    a1,*a6(OIMG),L
         0000bee0     0170  
    2167 0000bef0     8622          move    *a1,a2,L
    2168 0000bf00     b246          move    a2,*a6(OSIZE),L
         0000bf10     0130  
    2169 0000bf20     ba26          move    *a1(ISAG),*a6(OSAG),L
         0000bf30     0040  
         0000bf40     0110  
    2170                    
    2171 0000bf50           eskaslp SLEEPK  1
    2172 0000bf90     c0e1          jruc    eskalp
    2173                    
    2174 0000bfa0     5600  eskafixbb       clr     a0
    2175 0000bfb0     800a          move    a0,*a10                 ;Fix board
    2176 0000bfc0     c0f8          jruc    eskaslp
    2177                    
    2178                    
    2179 0000bfd0 00000000! eskaani_t       .long   back2,back3,back4,back5,back6,back6,back6,back6,back6
    2180 0000c0f0 00000000! eskasani_t      .long   bturn_5,bturn_4,bturn_3,bturn_2,bturn_1,bbord_10
    2181 0000c1b0 00000000!         .long   bbord_10,bbord_10,bbord_10,bbord_10
    2182                    
    2183                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   49

    2184                    
    2185 0000c230            SUBRP  backboard_svrptr
    2186                    
    2187 0000c230     0788          move    a8,@bbrgt_p,L
         0000c240 00000e80- 
    2188 0000c260                   DIE
    2189                    
    2190                    
    2191                    
    2192                    
    2193 0000c290            SUBRP  lftcrowd_ani
    2194                    
    2195                    
    2196 0000c290     07a8          move    @bigcrwd1_ptr,a8,L
         0000c2a0 00000760- 
    2197 0000c2c0     09ea          movi    bigcrwd_lst,a10
         0000c2d0 0000e480' 
    2198 0000c2f0                   CREATE0 crwd_ani
    2199 0000c360     b300          move    a8,*a0(PDATA),L
         0000c370     0100  
    2200 0000c380     b340          move    a10,*a0(PDATA+32),L
         0000c390     0120  
    2201                    
    2202 0000c3a0     07a8          move    @bigcrwd2_ptr,a8,L
         0000c3b0 00000780- 
    2203 0000c3d0     09ea          movi    bigcrwd_lst,a10
         0000c3e0 0000e480' 
    2204 0000c400                   CREATE0 crwd_ani
    2205 0000c470     b300          move    a8,*a0(PDATA),L
         0000c480     0100  
    2206 0000c490     b340          move    a10,*a0(PDATA+32),L
         0000c4a0     0120  
    2207                    
    2208 0000c4b0     07a8          move    @crwd1_ptr,a8,L
         0000c4c0 00000840- 
    2209 0000c4e0     09ea          movi    crwd1_lst,a10
         0000c4f0 0000e560' 
    2210 0000c510                   CREATE0 crwd_ani
    2211 0000c580     b300          move    a8,*a0(PDATA),L
         0000c590     0100  
    2212 0000c5a0     b340          move    a10,*a0(PDATA+32),L
         0000c5b0     0120  
    2213                    
    2214 0000c5c0     07a8          move    @crwd3_ptr,a8,L
         0000c5d0 00000880- 
    2215 0000c5f0     09ea          movi    crwd3_lst,a10
         0000c600 0000e700' 
    2216 0000c620                   CREATE0 crwd_ani
    2217 0000c690     b300          move    a8,*a0(PDATA),L
         0000c6a0     0100  
    2218 0000c6b0     b340          move    a10,*a0(PDATA+32),L
         0000c6c0     0120  
    2219                    
    2220 0000c6d0     07a8          move    @crwd5_ptr,a8,L
         0000c6e0 000008c0- 
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   50

    2221 0000c700     09ea          movi    crwd5_lst,a10
         0000c710 0000e870' 
    2222 0000c730                   CREATE0 crwd_ani
    2223 0000c7a0     b300          move    a8,*a0(PDATA),L
         0000c7b0     0100  
    2224 0000c7c0     b340          move    a10,*a0(PDATA+32),L
         0000c7d0     0120  
    2225                    
    2226                    
    2227 0000c7e0     07a8          move    @sl1_ptr,a8,L
         0000c7f0 00000900- 
    2228 0000c810     09ea          movi    s1_lst,a10
         0000c820 0000e9b0' 
    2229 0000c840                   CREATE0 crwd_ani
    2230 0000c8b0     b300          move    a8,*a0(PDATA),L
         0000c8c0     0100  
    2231 0000c8d0     b340          move    a10,*a0(PDATA+32),L
         0000c8e0     0120  
    2232                    
    2233 0000c8f0     07a8          move    @sl2_ptr,a8,L
         0000c900 00000920- 
    2234 0000c920     09ea          movi    s2_lst,a10
         0000c930 0000ea90' 
    2235 0000c950                   CREATE0 crwd_ani
    2236 0000c9c0     b300          move    a8,*a0(PDATA),L
         0000c9d0     0100  
    2237 0000c9e0     b340          move    a10,*a0(PDATA+32),L
         0000c9f0     0120  
    2238                    
    2239 0000ca00     07a8          move    @sl3_ptr,a8,L
         0000ca10 00000940- 
    2240 0000ca30     09ea          movi    s3_lst,a10
         0000ca40 0000eb70' 
    2241 0000ca60                   CREATE0 crwd_ani
    2242 0000cad0     b300          move    a8,*a0(PDATA),L
         0000cae0     0100  
    2243 0000caf0     b340          move    a10,*a0(PDATA+32),L
         0000cb00     0120  
    2244                    
    2245 0000cb10     07a8          move    @sl4_ptr,a8,L
         0000cb20 00000960- 
    2246 0000cb40     09ea          movi    s4_lst,a10
         0000cb50 0000ec50' 
    2247 0000cb70                   CREATE0 crwd_ani
    2248 0000cbe0     b300          move    a8,*a0(PDATA),L
         0000cbf0     0100  
    2249 0000cc00     b340          move    a10,*a0(PDATA+32),L
         0000cc10     0120  
    2250                    
    2251 0000cc20     07a8          move    @sl5_ptr,a8,L
         0000cc30 00000980- 
    2252 0000cc50     09ea          movi    s5_lst,a10
         0000cc60 0000ed30' 
    2253 0000cc80                   CREATE0 crwd_ani
    2254 0000ccf0     b300          move    a8,*a0(PDATA),L
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   51

         0000cd00     0100  
    2255 0000cd10     b340          move    a10,*a0(PDATA+32),L
         0000cd20     0120  
    2256                    
    2257 0000cd30     07a8          move    @sl6_ptr,a8,L
         0000cd40 000009a0- 
    2258 0000cd60     09ea          movi    s6_lst,a10
         0000cd70 0000ee10' 
    2259 0000cd90                   CREATE0 crwd_ani
    2260 0000ce00     b300          move    a8,*a0(PDATA),L
         0000ce10     0100  
    2261 0000ce20     b340          move    a10,*a0(PDATA+32),L
         0000ce30     0120  
    2262                    
    2263 0000ce40     07a8          move    @sl7_ptr,a8,L
         0000ce50 000009c0- 
    2264 0000ce70     09ea          movi    s7_lst,a10
         0000ce80 0000eef0' 
    2265 0000cea0                   CREATE0 crwd_ani
    2266 0000cf10     b300          move    a8,*a0(PDATA),L
         0000cf20     0100  
    2267 0000cf30     b340          move    a10,*a0(PDATA+32),L
         0000cf40     0120  
    2268                    
    2269 0000cf50     07a8          move    @sl8_ptr,a8,L
         0000cf60 000009e0- 
    2270 0000cf80     09ea          movi    s8_lst,a10
         0000cf90 0000f080' 
    2271 0000cfb0                   CREATE0 crwd_ani
    2272 0000d020     b300          move    a8,*a0(PDATA),L
         0000d030     0100  
    2273 0000d040     b340          move    a10,*a0(PDATA+32),L
         0000d050     0120  
    2274                    
    2275                    
    2276                    
    2277                    
    2278                    
    2279                    
    2280 0000d060     07a8          move    @cheer1_ptr,a8,L
         0000d070 00000b80- 
    2281 0000d090     09ea          movi    cheer1_lst,a10
         0000d0a0 0000f4e0' 
    2282 0000d0c0                   CREATE0 crwd_ani
    2283 0000d130     b300          move    a8,*a0(PDATA),L
         0000d140     0100  
    2284 0000d150     b340          move    a10,*a0(PDATA+32),L
         0000d160     0120  
    2285                    
    2286 0000d170     07a8          move    @cheer2_ptr,a8,L
         0000d180 00000ba0- 
    2287 0000d1a0     09ea          movi    cheer2_lst,a10
         0000d1b0 0000f860' 
    2288 0000d1d0                   CREATE0 crwd_ani
    2289 0000d240     b300          move    a8,*a0(PDATA),L
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   52

         0000d250     0100  
    2290 0000d260     b340          move    a10,*a0(PDATA+32),L
         0000d270     0120  
    2291                    
    2292                    
    2293                    
    2294                    
    2295 0000d280     07a8          move    @bigcrwd3_ptr,a8,L
         0000d290 000007a0- 
    2296 0000d2b0     09ea          movi    bigcrwd_lst,a10
         0000d2c0 0000e480' 
    2297 0000d2e0                   CREATE0 crwd_ani
    2298 0000d350     b300          move    a8,*a0(PDATA),L
         0000d360     0100  
    2299 0000d370     b340          move    a10,*a0(PDATA+32),L
         0000d380     0120  
    2300                    
    2301 0000d390     07a8          move    @bigcrwd2_ptr,a8,L
         0000d3a0 00000780- 
    2302 0000d3c0     09ea          movi    bigcrwd_lst,a10
         0000d3d0 0000e480' 
    2303 0000d3f0                   CREATE0 crwd_ani
    2304 0000d460     b300          move    a8,*a0(PDATA),L
         0000d470     0100  
    2305 0000d480     b340          move    a10,*a0(PDATA+32),L
         0000d490     0120  
    2306                    
    2307 0000d4a0     07a8          move    @crwd2_ptr,a8,L
         0000d4b0 00000860- 
    2308 0000d4d0     09ea          movi    crwd1_lst,a10
         0000d4e0 0000e560' 
    2309 0000d500                   CREATE0 crwd_ani
    2310 0000d570     b300          move    a8,*a0(PDATA),L
         0000d580     0100  
    2311 0000d590     b340          move    a10,*a0(PDATA+32),L
         0000d5a0     0120  
    2312                    
    2313 0000d5b0     07a8          move    @crwd4_ptr,a8,L
         0000d5c0 000008a0- 
    2314 0000d5e0     09ea          movi    crwd3_lst,a10
         0000d5f0 0000e700' 
    2315 0000d610                   CREATE0 crwd_ani
    2316 0000d680     b300          move    a8,*a0(PDATA),L
         0000d690     0100  
    2317 0000d6a0     b340          move    a10,*a0(PDATA+32),L
         0000d6b0     0120  
    2318                    
    2319 0000d6c0     07a8          move    @crwd6_ptr,a8,L
         0000d6d0 000008e0- 
    2320 0000d6f0     09ea          movi    crwd5_lst,a10
         0000d700 0000e870' 
    2321 0000d720                   CREATE0 crwd_ani
    2322 0000d790     b300          move    a8,*a0(PDATA),L
         0000d7a0     0100  
    2323 0000d7b0     b340          move    a10,*a0(PDATA+32),L
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   53

         0000d7c0     0120  
    2324                    
    2325                    
    2326 0000d7d0     07a8          move    @sr1_ptr,a8,L
         0000d7e0 00000a00- 
    2327 0000d800     09ea          movi    sr1_lst,a10
         0000d810 0000f160' 
    2328 0000d830                   CREATE0 crwd_ani
    2329 0000d8a0     b300          move    a8,*a0(PDATA),L
         0000d8b0     0100  
    2330 0000d8c0     b340          move    a10,*a0(PDATA+32),L
         0000d8d0     0120  
    2331                    
    2332 0000d8e0     07a8          move    @sr2_ptr,a8,L
         0000d8f0 00000a20- 
    2333 0000d910     09ea          movi    sr2_lst,a10
         0000d920 0000f240' 
    2334 0000d940                   CREATE0 crwd_ani
    2335 0000d9b0     b300          move    a8,*a0(PDATA),L
         0000d9c0     0100  
    2336 0000d9d0     b340          move    a10,*a0(PDATA+32),L
         0000d9e0     0120  
    2337                    
    2338 0000d9f0     07a8          move    @sr3_ptr,a8,L
         0000da00 00000a40- 
    2339 0000da20     09ea          movi    sr3_lst,a10
         0000da30 0000f320' 
    2340 0000da50                   CREATE0 crwd_ani
    2341 0000dac0     b300          move    a8,*a0(PDATA),L
         0000dad0     0100  
    2342 0000dae0     b340          move    a10,*a0(PDATA+32),L
         0000daf0     0120  
    2343                    
    2344 0000db00     07a8          move    @sr4_ptr,a8,L
         0000db10 00000a60- 
    2345 0000db30     09ea          movi    sr4_lst,a10
         0000db40 0000f400' 
    2346 0000db60                   CREATE0 crwd_ani
    2347 0000dbd0     b300          move    a8,*a0(PDATA),L
         0000dbe0     0100  
    2348 0000dbf0     b340          move    a10,*a0(PDATA+32),L
         0000dc00     0120  
    2349                    
    2350 0000dc10     07a8          move    @sr5_ptr,a8,L
         0000dc20 00000a80- 
    2351 0000dc40     09ea          movi    s5_lst,a10
         0000dc50 0000ed30' 
    2352 0000dc70                   CREATE0 crwd_ani
    2353 0000dce0     b300          move    a8,*a0(PDATA),L
         0000dcf0     0100  
    2354 0000dd00     b340          move    a10,*a0(PDATA+32),L
         0000dd10     0120  
    2355                    
    2356 0000dd20     07a8          move    @sr6_ptr,a8,L
         0000dd30 00000aa0- 
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   54

    2357 0000dd50     09ea          movi    s6_lst,a10
         0000dd60 0000ee10' 
    2358 0000dd80                   CREATE0 crwd_ani
    2359 0000ddf0     b300          move    a8,*a0(PDATA),L
         0000de00     0100  
    2360 0000de10     b340          move    a10,*a0(PDATA+32),L
         0000de20     0120  
    2361                    
    2362 0000de30     07a8          move    @sr7_ptr,a8,L
         0000de40 00000ac0- 
    2363 0000de60     09ea          movi    s72_lst,a10
         0000de70 0000efd0' 
    2364 0000de90                   CREATE0 crwd_ani
    2365 0000df00     b300          move    a8,*a0(PDATA),L
         0000df10     0100  
    2366 0000df20     b340          move    a10,*a0(PDATA+32),L
         0000df30     0120  
    2367                    
    2368 0000df40     07a8          move    @sr8_ptr,a8,L
         0000df50 00000ae0- 
    2369 0000df70     09ea          movi    s8_lst,a10
         0000df80 0000f080' 
    2370 0000dfa0                   CREATE0 crwd_ani
    2371 0000e010     b300          move    a8,*a0(PDATA),L
         0000e020     0100  
    2372 0000e030     b340          move    a10,*a0(PDATA+32),L
         0000e040     0120  
    2373                    
    2374                    
    2375 0000e050     0960          rets
    2376                    
    2377                    
    2378                    
    2379 0000e060            SUBR   start_animate
    2380                    
    2381 0000e060     1820          movk    1,a0
    2382 0000e070     0580          move    a0,@crowd_animate
         0000e080 00000d60- 
    2383 0000e0a0                   SLEEP   4*60
    2384 0000e0f0     5600          clr     a0
    2385 0000e100     0580          move    a0,@crowd_animate
         0000e110 00000d60- 
    2386 0000e130                   DIE
    2387                    
    2388 0000e160           crwd_ani
    2389 0000e160                   SLEEPK  10
    2390 0000e1a0     05a0          move    @crowd_animate,a0
         0000e1b0 00000d60- 
    2391 0000e1d0     caf8          jrz     crwd_ani
    2392                    
    2393                    
    2394 0000e1e0     b7a8          move    *a13(PDATA),a8,L
         0000e1f0     0100  
    2395 0000e200     b7aa          move    *a13(PDATA+32),a10,L
         0000e210     0120  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   55

    2396 0000e220           gqyclp
    2397 0000e220     9741          move    *a10+,a1,L
    2398 0000e230     cb01          jrnz    gqyccrwd
    2399 0000e240     caf1          jrz     crwd_ani
    2400                    
    2401                    
    2402 0000e250           gqyccrwd
    2403 0000e250     b703          move    *a8(OIMG),a3,L          ;>Set new img
         0000e260     0170  
    2404                    
    2405 0000e270     b228          move    a1,*a8(OIMG),L
         0000e280     0170  
    2406 0000e290     8622          move    *a1,a2,L
    2407 0000e2a0     b248          move    a2,*a8(OSIZE),L
         0000e2b0     0130  
    2408 0000e2c0     ba28          move    *a1(ISAG),*a8(OSAG),L
         0000e2d0     0040  
         0000e2e0     0110  
    2409                    
    2410 0000e2f0     b46e          move    *a3(IANIOFFY),a14
         0000e300     0030  
    2411 0000e310     b420          move    *a1(IANIOFFY),a0
         0000e320     0030  
    2412 0000e330     45c0          sub     a14,a0                  ;Newaniy-Oldaniy
    2413 0000e340     b50e          move    *a8(OYPOS),a14
         0000e350     00b0  
    2414 0000e360     440e          sub     a0,a14
    2415 0000e370     b1c8          move    a14,*a8(OYPOS)
         0000e380     00b0  
    2416                    
    2417 0000e390     b46e          move    *a3(IANIOFFX),a14
         0000e3a0     0020  
    2418 0000e3b0     b420          move    *a1(IANIOFFX),a0
         0000e3c0     0020  
    2419 0000e3d0     45c0          sub     a14,a0                  ;Newanix-Oldanix
    2420 0000e3e0     b50e          move    *a8(OXPOS),a14
         0000e3f0     0090  
    2421 0000e400     440e          sub     a0,a14
    2422 0000e410     b1c8          move    a14,*a8(OXPOS)
         0000e420     0090  
    2423                    
    2424 0000e430     9540          move    *a10+,a0
    2425 0000e440     0d5f          calla   PRCSLP
         0000e450 00000000! 
    2426 0000e470     c0da          jruc    gqyclp
    2427                    
    2428                    
    2429 0000e480           bigcrwd_lst
    2430 0000e480                   LW      crowd401,5
    2431 0000e4b0                   LW      crowd402,30
    2432 0000e4e0                   LW      crowd401,5
    2433 0000e510                   LWL0    crowd40,40
    2434                    
    2435 0000e560           crwd1_lst
    2436 0000e560                   LW      crowd1a2,4
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   56

    2437 0000e590                   LW      crowd1a3,4
    2438 0000e5c0                   LW      crowd1a4,4
    2439 0000e5f0                   LW      crowd1a5,55
    2440 0000e620                   LW      crowd1a4,4
    2441 0000e650                   LW      crowd1a3,4
    2442 0000e680                   LW      crowd1a2,4
    2443 0000e6b0                   LWL0    crowd1a,60
    2444                    
    2445 0000e700           crwd3_lst
    2446 0000e700                   LW      crowd2a,10
    2447 0000e730                   LW      crowd2a2,5
    2448 0000e760                   LW      crowd2a3,5
    2449 0000e790                   LW      crowd2a4,55
    2450 0000e7c0                   LW      crowd2a3,5
    2451 0000e7f0                   LW      crowd2a2,5
    2452 0000e820                   LWL0    crowd2a,60
    2453                    
    2454 0000e870           crwd5_lst
    2455 0000e870                   LW      crowd3a2,6
    2456 0000e8a0                   LW      crowd3a3,6
    2457 0000e8d0                   LW      crowd3a4,16
    2458 0000e900                   LW      crowd3a3,8
    2459 0000e930                   LW      crowd3a2,8
    2460 0000e960                   LWL0    crowd3,18
    2461                    
    2462 0000e9b0           s1_lst
    2463 0000e9b0                   LW      sdcrwd1b,6
    2464 0000e9e0                   LW      sdcrwd1c,6
    2465 0000ea10                   LW      sdcrwd1b,6
    2466 0000ea40                   LWL0    sdcrwd1,6
    2467                    
    2468 0000ea90           s2_lst
    2469 0000ea90                   LW      sdcrwd2b,6
    2470 0000eac0                   LW      sdcrwd2c,6
    2471 0000eaf0                   LW      sdcrwd2b,6
    2472 0000eb20                   LWL0    sdcrwd2,6
    2473                    
    2474 0000eb70           s3_lst
    2475 0000eb70                   LW      sdcrwd3b,6
    2476 0000eba0                   LW      sdcrwd3c,6
    2477 0000ebd0                   LW      sdcrwd3b,6
    2478 0000ec00                   LWL0    sdcrwd3,6
    2479                    
    2480 0000ec50           s4_lst
    2481 0000ec50                   LW      sdcrwd4b,6
    2482 0000ec80                   LW      sdcrwd4c,6
    2483 0000ecb0                   LW      sdcrwd4b,6
    2484 0000ece0                   LWL0    sdcrwd4,6
    2485                    
    2486 0000ed30           s5_lst
    2487 0000ed30                   LW      sdcrwd5b,6
    2488 0000ed60                   LW      sdcrwd5c,6
    2489 0000ed90                   LW      sdcrwd5b,6
    2490 0000edc0                   LWL0    sdcrwd5,6
    2491                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   57

    2492 0000ee10           s6_lst
    2493 0000ee10                   LW      sdcrwd6b,6
    2494 0000ee40                   LW      sdcrwd6c,6
    2495 0000ee70                   LW      sdcrwd6b,6
    2496 0000eea0                   LWL0    sdcrwd6,6
    2497                    
    2498 0000eef0           s7_lst
    2499 0000eef0                   LW      sdcrwd7b,6
    2500 0000ef20                   LW      sdcrwd7c,6
    2501 0000ef50                   LW      sdcrwd7b,6
    2502 0000ef80                   LWL0    sdcrwd7,60
    2503                    
    2504 0000efd0           s72_lst
    2505 0000efd0                   LW      sdcrwd7b,6
    2506 0000f000                   LW      sdcrwd7c,6
    2507 0000f030                   LWL0    sdcrwd7b,60
    2508                    
    2509 0000f080           s8_lst
    2510 0000f080                   LW      sdcrwd8b,6
    2511 0000f0b0                   LW      sdcrwd8c,6
    2512 0000f0e0                   LW      sdcrwd8b,6
    2513 0000f110                   LWL0    sdcrwd8,6
    2514                    
    2515 0000f160           sr1_lst
    2516 0000f160                   LW      nsdcrwd1b,6
    2517 0000f190                   LW      nsdcrwd1c,50
    2518 0000f1c0                   LW      nsdcrwd1b,6
    2519 0000f1f0                   LWL0    nsdcrwd1a,6
    2520                    
    2521 0000f240           sr2_lst
    2522 0000f240                   LW      nsdcrwd2b,40
    2523 0000f270                   LW      nsdcrwd2c,80
    2524 0000f2a0                   LW      nsdcrwd2b,10
    2525 0000f2d0                   LWL0    nsdcrwd2a,30
    2526                    
    2527 0000f320           sr3_lst
    2528 0000f320                   LW      nsdcrwd3b,5
    2529 0000f350                   LW      nsdcrwd3c,5
    2530 0000f380                   LW      nsdcrwd3b,5
    2531 0000f3b0                   LWL0    nsdcrwd3a,5
    2532                    
    2533 0000f400           sr4_lst
    2534 0000f400                   LW      nsdcrwd4b,6
    2535 0000f430                   LW      nsdcrwd4c,6
    2536 0000f460                   LW      nsdcrwd4b,6
    2537 0000f490                   LWL0    nsdcrwd4a,6
    2538                    
    2539 0000f4e0           cheer1_lst
    2540 0000f4e0                   LW      cheer1,6
    2541 0000f510                   LW      cheer2,6
    2542 0000f540                   LW      cheer3,6
    2543 0000f570                   LW      cheer4,6
    2544 0000f5a0                   LW      cheer5,6
    2545 0000f5d0                   LW      cheer6,6
    2546 0000f600                   LW      cheer7,6
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   58

    2547 0000f630                   LW      cheer6,6
    2548 0000f660                   LW      cheer5,6
    2549 0000f690                   LW      cheer6,6
    2550 0000f6c0                   LW      cheer7,6
    2551 0000f6f0                   LW      cheer6,6
    2552 0000f720                   LW      cheer5,6
    2553 0000f750                   LW      cheer6,6
    2554 0000f780                   LW      cheer7,6
    2555 0000f7b0                   LW      cheer3,6
    2556 0000f7e0                   LW      cheer2a,6
    2557 0000f810                   LWL0    cheer2,4*60
    2558                    
    2559 0000f860           cheer2_lst
    2560 0000f860                   LW      cary1,20
    2561 0000f890                   LW      cary2,6
    2562 0000f8c0                   LW      cary3,6
    2563 0000f8f0                   LW      cary4,6
    2564 0000f920                   LW      cary5,6
    2565 0000f950                   LW      cary6,6
    2566 0000f980                   LW      cary5,6
    2567 0000f9b0                   LW      cary6,30
    2568 0000f9e0                   LW      cary5,6
    2569 0000fa10                   LW      cary4,6
    2570 0000fa40                   LW      cary3,6
    2571 0000fa70                   LW      cary2,6
    2572 0000faa0                   LWL0    cary1,4*60
    2573                    
    2574                    
    2575                            .def    random_ads
    2576                    
    2577 0000faf0           random_ads
    2578 0000faf0     09c0          movi    adpid,a0
         0000fb00     0093  
    2579 0000fb10     0d5f          calla   KIL1C
         0000fb20 00000000! 
    2580                    
    2581                    
    2582 0000fb40     1820          movk    01,a0                   ;10
    2583 0000fb50     0d5f          calla   RNDRNG0
         0000fb60 00000000! 
    2584 0000fb80     24a0          sll     5,a0
    2585                    
    2586 0000fb90     09e1          movi    ad1_t,a1
         0000fba0 00010320' 
    2587 0000fbc0     4001          add     a0,a1
    2588 0000fbd0     8621          move    *a1,a1,L
    2589                    
    2590 0000fbe0     0b20          addi    ad1ref_t,a0
         0000fbf0 00010360' 
    2591 0000fc10     8603          move    *a0,a3,L
    2592                    
    2593 0000fc20     07a8          move    @ad1_ptr,a8,L
         0000fc30 00000b00- 
    2594 0000fc50     b228          move    a1,*a8(OIMG),L
         0000fc60     0170  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   59

    2595 0000fc70     8622          move    *a1,a2,L
    2596 0000fc80     b248          move    a2,*a8(OSIZE),L
         0000fc90     0130  
    2597 0000fca0     ba28          move    *a1(ISAG),*a8(OSAG),L
         0000fcb0     0040  
         0000fcc0     0110  
    2598                    
    2599                    
    2600 0000fcd0     07a8          move    @ad1ref_ptr,a8,L
         0000fce0 00000b20- 
    2601 0000fd00     b268          move    a3,*a8(OIMG),L
         0000fd10     0170  
    2602 0000fd20     8662          move    *a3,a2,L
    2603 0000fd30     b248          move    a2,*a8(OSIZE),L
         0000fd40     0130  
    2604 0000fd50     ba68          move    *a3(ISAG),*a8(OSAG),L
         0000fd60     0040  
         0000fd70     0110  
    2605                    
    2606 0000fd80     b700          move    *a8(OIMG),a0,L
         0000fd90     0170  
    2607 0000fda0     0b60          cmpi    RF_KOM1_L,a0
         0000fdb0 fffd90af" 
    2608 0000fdd0     cb09          jrnz    oajmnoani0
    2609 0000fde0                   CREATE  adpid,MK3_ad
    2610 0000fe60     c00c          jruc    oajmnoani
    2611 0000fe70           oajmnoani0
    2612 0000fe70     0b60          cmpi    RF_CHAL_L,a0
         0000fe80 fffd940f" 
    2613 0000fea0     cb08          jrnz    oajmnoani
    2614 0000feb0                   CREATE  adpid,wwf_ad
    2615 0000ff30           oajmnoani
    2616                    
    2617 0000ff30     1860          movk    3,a0
    2618 0000ff40     0d5f          calla   RNDRNG0
         0000ff50 00000000! 
    2619 0000ff70     24a0          sll     5,a0
    2620                    
    2621 0000ff80     09e1          movi    ad2_t,a1
         0000ff90 000103a0' 
    2622 0000ffb0     4001          add     a0,a1
    2623 0000ffc0     8621          move    *a1,a1,L
    2624                    
    2625 0000ffd0     0b20          addi    ad2ref_t,a0
         0000ffe0 00010420' 
    2626 00010000     8603          move    *a0,a3,L
    2627                    
    2628 00010010     07a8          move    @ad2_ptr,a8,L
         00010020 00000b40- 
    2629 00010040     b228          move    a1,*a8(OIMG),L
         00010050     0170  
    2630 00010060     8622          move    *a1,a2,L
    2631 00010070     b248          move    a2,*a8(OSIZE),L
         00010080     0130  
    2632 00010090     ba28          move    *a1(ISAG),*a8(OSAG),L
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   60

         000100a0     0040  
         000100b0     0110  
    2633                    
    2634                    
    2635 000100c0     07a8          move    @ad2ref_ptr,a8,L
         000100d0 00000b60- 
    2636 000100f0     b268          move    a3,*a8(OIMG),L
         00010100     0170  
    2637 00010110     8662          move    *a3,a2,L
    2638 00010120     b248          move    a2,*a8(OSIZE),L
         00010130     0130  
    2639 00010140     ba68          move    *a3(ISAG),*a8(OSAG),L
         00010150     0040  
         00010160     0110  
    2640                    
    2641                    
    2642                    
    2643 00010170            SUBR   fix_floorclr
    2644                    
    2645 00010170     05a2          move    @oteam1,a2
         00010180 00000000! 
    2646                    
    2647                    
    2648 000101a0     24a2          sll     5,a2
    2649 000101b0     0b22          addi    crt_pals_z,a2
         000101c0 00006de0' 
    2650 000101e0     864b  oajmnx  move    *a2,a11,L
    2651                    
    2652 000101f0     09e0          movi    CROWD_p,a0
         00010200 00000000! 
    2653 00010220     0d5f          calla   pal_find                ;Put in PDATA??!!!!
         00010230 00000000! 
    2654                    
    2655 00010250     0b80          andi    0ff00h,a0
         00010260 ffff00ff  
    2656                    
    2657 00010280     4c01          move    a0,a1                   ;dest pal
    2658 00010290     0ba1          ori     236,a1
         000102a0 000000ec  
    2659 000102c0     4d60          move    a11,a0
    2660                    
    2661 000102d0     1922          movk    9,a2                    ;9 colors
    2662 000102e0     0d5f          calla   pal_set
         000102f0 00000000! 
    2663 00010310     0960          rets
    2664                    
    2665                    
    2666 00010320 00027a90" ad1_t   .long   adjet
    2667 00010340 00027100"         .long   adhot
    2668 00010360           ad1ref_t
    2669 00010360 00027c40"         .long   jetref
    2670 00010380 00027340"         .long   hotref
    2671                    
    2672 000103a0 00027cd0" ad2_t   .long   adnba2,adjam2
    2673 000103e0 00027190"         .long   admid2,adblue2
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   61

    2674 00010420           ad2ref_t
    2675 00010420 00027b20"         .long   nbaref,jamref
    2676 00010460 000273d0"         .long   midref,blueref
    2677                    
    2678                    
    2679                    
    2680                    
    2681                    
    2682                    
    2683 000104a0 00026b60" wwf_t   .long   AD_CHAL_L,RF_CHAL_L
    2684 000104e0 00026c80"         .long   AD_WWF_L,RF_WWF_L
    2685 00010520 00000000          .long   0
    2686                    
    2687 00010540 00026ec0" MK3_t   .long   AD_KOM1_L,5*60
    2688 00010580 00026fe0"         .long   AD_KOM2_L,4
    2689 000105c0 00026ec0"         .long   AD_KOM1_L,4
    2690 00010600 00026fe0"         .long   AD_KOM2_L,4
    2691 00010640 00026ec0"         .long   AD_KOM1_L,30
    2692 00010680 00026fe0"         .long   AD_KOM2_L,5
    2693 000106c0 00026ec0"         .long   AD_KOM1_L,5
    2694 00010700 00026fe0"         .long   AD_KOM2_L,5
    2695 00010740 00026ec0"         .long   AD_KOM1_L,5
    2696 00010780 00026fe0"         .long   AD_KOM2_L,5
    2697 000107c0 00000000          .long   0
    2698                    
    2699 000107e0     09e9  wwf_ad  movi    wwf_t,a9
         000107f0 000104a0' 
    2700 00010810           wwf_lp
    2701 00010810     9720          move    *a9+,a0,L
    2702 00010820     cafb          jrz     wwf_ad
    2703 00010830     9721          move    *a9+,a1,L
    2704                    
    2705 00010840     07a8          move    @ad1_ptr,a8,L
         00010850 00000b00- 
    2706 00010870     b208          move    a0,*a8(OIMG),L
         00010880     0170  
    2707 00010890     8602          move    *a0,a2,L
    2708 000108a0     b248          move    a2,*a8(OSIZE),L
         000108b0     0130  
    2709 000108c0     ba08          move    *a0(ISAG),*a8(OSAG),L
         000108d0     0040  
         000108e0     0110  
    2710                    
    2711 000108f0     07a8          move    @ad1ref_ptr,a8,L
         00010900 00000b20- 
    2712 00010920     b228          move    a1,*a8(OIMG),L
         00010930     0170  
    2713 00010940     8622          move    *a1,a2,L
    2714 00010950     b248          move    a2,*a8(OSIZE),L
         00010960     0130  
    2715 00010970     ba28          move    *a1(ISAG),*a8(OSAG),L
         00010980     0040  
         00010990     0110  
    2716                    
    2717 000109a0                   SLEEP   120
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   62

    2718 000109f0     c0e1          jruc    wwf_lp
    2719                    
    2720 00010a00     09e9  MK3_ad  movi    MK3_t,a9
         00010a10 00010540' 
    2721 00010a30           mk3_lp
    2722 00010a30     9720          move    *a9+,a0,L
    2723 00010a40     cafb          jrz     MK3_ad
    2724                    
    2725 00010a50     07a8          move    @ad1_ptr,a8,L
         00010a60 00000b00- 
    2726 00010a80     b208          move    a0,*a8(OIMG),L
         00010a90     0170  
    2727 00010aa0     8602          move    *a0,a2,L
    2728 00010ab0     b248          move    a2,*a8(OSIZE),L
         00010ac0     0130  
    2729 00010ad0     ba08          move    *a0(ISAG),*a8(OSAG),L
         00010ae0     0040  
         00010af0     0110  
    2730                    
    2731                    
    2732                    
    2733 00010b00     9720          move    *a9+,a0,L
    2734 00010b10     0d5f          calla   PRCSLP
         00010b20 00000000! 
    2735 00010b40     c0ee          jruc    mk3_lp
    2736                    
    2737                    
    2738 00010b50            SUBR   net_ani
    2739                    
    2740 00010b50                   PUSH    a7,a8,a9,a10
    2741                    
    2742 00010b70     4c00          move    a0,a0
    2743 00010b80     ca07          jrz     fsixlft
    2744 00010b90     07a8          move    @rimrf,a8,L             ;*Right hoop objs
         00010ba0 00000800- 
    2745 00010bc0     07a9          move    @rimrb,a9,L
         00010bd0 00000820- 
    2746 00010bf0     c006          jruc    fsixtag
    2747                    
    2748 00010c00           fsixlft
    2749 00010c00     07a8          move    @rimlf,a8,L             ;Left ^
         00010c10 000007c0- 
    2750 00010c30     07a9          move    @rimlb,a9,L
         00010c40 000007e0- 
    2751 00010c60           fsixtag
    2752 00010c60     24a1          sll     5,a1                    ;*32
    2753 00010c70     0b21          addi    fsixnet_t,a1
         00010c80 00010d60' 
    2754 00010ca0     862a          move    *a1,a10,L
    2755 00010cb0                   CREATE  HOOP_PID,do_net_ani
    2756 00010d30                   PULL    a7,a8,a9,a10
    2757 00010d50     0960          rets
    2758                    
    2759                    
    2760 00010d60 00010fb0' fsixnet_t       .long   net0_l  ;Shot swish/bank in
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   63

    2761 00010d80 00011210'         .long   net1_l  ;Dunk/bend rim
    2762 00010da0 00011470'         .long   net2_l  ;Soft ball roll in
    2763 00010dc0 00011590'         .long   net3_l  ;Long shot swish
    2764 00010de0 000117b0'         .long   net4_l  ;Missed shot bend rim
    2765 00010e00 00011850'         .long   net5_l  ;Shatter backboard
    2766 00010e20 00011cf0'         .long   net6_l  ;Burn net
    2767                    
    2768                    
    2769                    
    2770 00010e40           do_net_ani
    2771                    
    2772 00010e40     9740  fsixlp  move    *a10+,a0,L
    2773 00010e50     ca80          jaz     SUCIDE
         00010e60 00000000! 
    2774                    
    2775                    
    2776 00010e80     b501          move    *a8(OFLAGS),a1
         00010e90     00e0  
    2777 00010ea0     0d5f          calla   obj_aniq
         00010eb0 00000000! 
    2778                    
    2779 00010ed0     9740          move    *a10+,a0,L
    2780 00010ee0     4d02          move    a8,a2
    2781 00010ef0     4d28          move    a9,a8
    2782 00010f00     b501          move    *a8(OFLAGS),a1
         00010f10     00e0  
    2783 00010f20     0d5f          calla   obj_aniq
         00010f30 00000000! 
    2784 00010f50     4c48          move    a2,a8
    2785                    
    2786 00010f60                   SLEEPK  4
    2787 00010fa0     c0e9          jruc    fsixlp
    2788                    
    2789                    
    2790 00010fb0           net0_l
    2791 00010fb0 00000000!         .long   swish1f,swish1b
    2792 00010ff0 00000000!         .long   swish2f,swish2b
    2793 00011030 00000000!         .long   swish3f,swish3b
    2794 00011070 00000000!         .long   swish4f,swish4b
    2795 000110b0 00000000!         .long   swish5f,swish5b
    2796 000110f0 00000000!         .long   swish3f,swish3b
    2797 00011130 00000000!         .long   swish2f,swish2b
    2798 00011170 00000000!         .long   swish1f,swish1b
    2799 000111b0 00000000!         .long   rim1f,rim1b,0
    2800 00011210           net1_l
    2801 00011210 00000000!         .long   rim2f,rim2b
    2802 00011250 00000000!         .long   rim3f,rim3b
    2803 00011290 00000000!         .long   rim4f,rim4b
    2804 000112d0 00000000!         .long   swish4f,swish4b
    2805 00011310 00000000!         .long   swish5f,swish5b
    2806 00011350 00000000!         .long   swish3f,swish3b
    2807 00011390 00000000!         .long   swish2f,swish2b
    2808 000113d0 00000000!         .long   swish1f,swish1b
    2809 00011410 00000000!         .long   rim1f,rim1b,0
    2810 00011470           net2_l
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   64

    2811 00011470 00000000!         .long   swish1f,swish1b
    2812 000114b0 00000000!         .long   swish2f,swish2b
    2813 000114f0 00000000!         .long   swish1f,swish1b
    2814 00011530 00000000!         .long   rim1f,rim1b,0
    2815 00011590           net3_l
    2816 00011590 00000000!         .long   farshot1f,farshot1b
    2817 000115d0 00000000!         .long   farshot2f,farshot2b
    2818 00011610 00000000!         .long   farshot3f,farshot3b
    2819 00011650 00000000!         .long   farshot4f,farshot4b
    2820 00011690 00000000!         .long   farshot3f,farshot3b
    2821 000116d0 00000000!         .long   farshot2f,farshot2b
    2822 00011710 00000000!         .long   farshot1f,farshot1b
    2823 00011750 00000000!         .long   rim1f,rim1b,0
    2824 000117b0           net4_l
    2825 000117b0 00000000!         .long   rim3f,rim3b
    2826 000117f0 00000000!         .long   rim1f,rim1b,0
    2827 00011850           net5_l
    2828 00011850 00000000!         .long   rimbndF_1,rimbndB_1
    2829 00011890 00000000!         .long   rimbndF_2,rimbndB_2
    2830 000118d0 00000000!         .long   rimbndF_3,rimbndB_3
    2831 00011910 00000000!         .long   rimbndF_4,rimbndB_4
    2832 00011950 00000000!         .long   rimbndF_5,rimbndB_5
    2833 00011990 00000000!         .long   rimbndF_6,rimbndB_6
    2834 000119d0 00000000!         .long   rimbndF_7,rimbndB_7
    2835 00011a10 00000000!         .long   rimbndF_8,rimbndB_8
    2836 00011a50 00000000!         .long   rimbndF_9,rimbndB_9
    2837 00011a90 00000000!         .long   rimbndF_10,rimbndB_10
    2838 00011ad0 00000000!         .long   rimbndF_11,rimbndB_11
    2839 00011b10 00000000!         .long   rimbndF_12,rimbndB_12
    2840 00011b50 00000000!         .long   rimbndF_13,rimbndB_13
    2841 00011b90 00000000!         .long   rimbndF_14,rimbndB_14
    2842 00011bd0 00000000!         .long   rimbndF_15,rimbndB_15
    2843 00011c10 00000000!         .long   rimbndF_16,rimbndB_16
    2844 00011c50 00000000!         .long   rimbndF_17,rimbndB_17
    2845 00011c90 00000000!         .long   rim1f,rim1b,0
    2846 00011cf0           net6_l
    2847 00011cf0 00000000!         .long   firimF_1,firimB_1
    2848 00011d30 00000000!         .long   firimF_2,firimB_2
    2849 00011d70 00000000!         .long   firimF_3,firimB_3
    2850 00011db0 00000000!         .long   firimF_4,firimB_4
    2851 00011df0 00000000!         .long   firimF_5,firimB_5
    2852 00011e30 00000000!         .long   firimF_6,firimB_6
    2853 00011e70 00000000!         .long   firimF_7,firimB_7
    2854 00011eb0 00000000!         .long   firimF_8,firimB_8
    2855 00011ef0 00000000!         .long   firimF_9,firimB_9
    2856 00011f30 00000000!         .long   firimF_10,firimB_10
    2857 00011f70 00000000!         .long   firimF_12,firimB_11
    2858 00011fb0 00000000!         .long   firimF_13,firimB_11
    2859 00011ff0 00000000!         .long   firimF_14,firimB_11
    2860 00012030 00000000!         .long   firimF_15,firimB_11
    2861 00012070 00000000!         .long   firimF_16,firimB_11
    2862 000120b0 00000000!         .long   firimF_17,firimB_11
    2863 000120f0 00000000!         .long   firimF_11,firimB_11,0
    2864                    
    2865                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   65

    2866                    
    2867                    
    2868 00012150            SUBRP  status_display
    2869                    
    2870 00012150     5600          clr     a0
    2871 00012160     0780          move    a0,@P1DATA+ply_messages,L       ;zero player message img pntr
         00012170 00000000! 
    2872 00012190     0780          move    a0,@P2DATA+ply_messages,L
         000121a0 00000000! 
    2873 000121c0     0780          move    a0,@P3DATA+ply_messages,L
         000121d0 00000000! 
    2874 000121f0     0780          move    a0,@P4DATA+ply_messages,L
         00012200 00000000! 
    2875                    
    2876 00012220     0580          move    a0,@P1DATA+ply_idiot_use
         00012230 00000120! 
    2877 00012250     0580          move    a0,@P2DATA+ply_idiot_use
         00012260 00000120! 
    2878 00012280     0580          move    a0,@P3DATA+ply_idiot_use
         00012290 00000120! 
    2879 000122b0     0580          move    a0,@P4DATA+ply_idiot_use
         000122c0 00000120! 
    2880                    
    2881 000122e0     09eb          movi    xraxinit_t,a11          ;>Setup status images
         000122f0 000137c0' 
    2882 00012310     09e9          movi    msg_ram,a9              ;keep crplate pntr for % printout
         00012320 00000be0- 
    2883 00012340     0d3f          callr   prt_status
         00012350     0141  
    2884                    
    2885 00012360     07a0          move    @msg_ram,a0,L
         00012370 00000be0- 
    2886 00012390     0780          move    a0,@crplate_ptr,L
         000123a0 00000bc0- 
    2887                    
    2888 000123c0     05a0          move    @PSTATUS,a0
         000123d0 00000000! 
    2889 000123f0     1fe0          btst    0,a0
    2890 00012400     ca09          jrz     xraxtag
    2891                    
    2892 00012410     09eb          movi    init_t1,a11
         00012420 00013820' 
    2893 00012440     09e9          movi    P1DATA+ply_meter_imgs,a9
         00012450 00000080! 
    2894 00012470     0d3f          callr   prt_status
         00012480     012e  
    2895                    
    2896                    
    2897 00012490     c022          jruc    xraxtag1
    2898                    
    2899 000124a0           xraxtag
    2900 000124a0     09eb          movi    init_t1a,a11
         000124b0 00013920' 
    2901 000124d0     09e9          movi    P1DATA+ply_messages,a9
         000124e0 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   66

    2902 00012500     0d3f          callr   prt_status
         00012510     0125  
    2903 00012520     09eb          movi    init_t1,a11
         00012530 00013820' 
    2904 00012550     09e9          movi    P1DATA+ply_meter_imgs,a9
         00012560 00000080! 
    2905                    
    2906 00012580     0d3f          callr   prt_status
         00012590     011d  
    2907                    
    2908 000125a0     07a0          move    @P1DATA+ply_meter_imgs,a0,L
         000125b0 00000080! 
    2909 000125d0     0d5f          calla   OBJOFF
         000125e0 00000000! 
    2910                    
    2911 00012600     07a0          move    @P1DATA+ply_meter_imgs+20h,a0,L
         00012610 000000a0! 
    2912 00012630     0d5f          calla   OBJOFF
         00012640 00000000! 
    2913 00012660     07a0          move    @P1DATA+ply_meter_imgs+40h,a0,L
         00012670 000000c0! 
    2914 00012690     0d5f          calla   OBJOFF
         000126a0 00000000! 
    2915                    
    2916 000126c0           xraxtag1
    2917 000126c0     09eb          movi    P1DATA,a11              ;A11=*plyr data
         000126d0 00000000! 
    2918 000126f0     0d5f          calla   refill_turbo
         00012700 00000000! 
    2919                    
    2920 00012720     05a0          move    @PSTATUS,a0
         00012730 00000000! 
    2921 00012750     1fc0          btst    1,a0
    2922 00012760     ca10          jrz     xraxtag2
    2923                    
    2924 00012770     09eb          movi    init_t2kit,a11
         00012780 00013a80' 
    2925                    
    2926 000127a0     05ae          move    @TWOPLAYERS,a14         ;0 = NO, 1 = YES 2 players
         000127b0 00000000! 
    2927 000127d0     cb03          jrnz    xrax2_plyrs
    2928                    
    2929 000127e0     09eb          movi    init_t2,a11
         000127f0 00013980' 
    2930 00012810           xrax2_plyrs
    2931                    
    2932                    
    2933 00012810     09e9          movi    P2DATA+ply_meter_imgs,a9
         00012820 00000080! 
    2934 00012840     0d3f          callr   prt_status
         00012850     00f1  
    2935                    
    2936                    
    2937 00012860     c029          jruc    xraxtag3
    2938 00012870           xraxtag2
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   67

    2939 00012870     09eb          movi    init_t2a,a11
         00012880 00013b80' 
    2940 000128a0     09e9          movi    P2DATA+ply_messages,a9
         000128b0 00000000! 
    2941 000128d0     0d3f          callr   prt_status
         000128e0     00e8  
    2942                    
    2943                    
    2944 000128f0     09eb          movi    init_t2kit,a11
         00012900 00013a80' 
    2945                    
    2946 00012920     05ae          move    @TWOPLAYERS,a14         ;0 = NO, 1 = YES 2 players
         00012930 00000000! 
    2947 00012950     cb03          jrnz    xrax2_plyrsa
    2948                    
    2949 00012960     09eb          movi    init_t2,a11
         00012970 00013980' 
    2950 00012990           xrax2_plyrsa
    2951                    
    2952 00012990     09e9          movi    P2DATA+ply_meter_imgs,a9
         000129a0 00000080! 
    2953                    
    2954 000129c0     0d3f          callr   prt_status
         000129d0     00d9  
    2955                    
    2956                    
    2957                    
    2958 000129e0     07a0          move    @P2DATA+ply_meter_imgs,a0,L
         000129f0 00000080! 
    2959 00012a10     0d5f          calla   OBJOFF
         00012a20 00000000! 
    2960                    
    2961 00012a40     07a0          move    @P2DATA+ply_meter_imgs+20h,a0,L
         00012a50 000000a0! 
    2962 00012a70     0d5f          calla   OBJOFF
         00012a80 00000000! 
    2963 00012aa0     07a0          move    @P2DATA+ply_meter_imgs+40h,a0,L
         00012ab0 000000c0! 
    2964 00012ad0     0d5f          calla   OBJOFF
         00012ae0 00000000! 
    2965                    
    2966 00012b00           xraxtag3
    2967 00012b00     09eb          movi    P2DATA,a11              ;A11=*plyr data
         00012b10 00000000! 
    2968 00012b30     0d5f          calla   refill_turbo
         00012b40 00000000! 
    2969                    
    2970 00012b60     05a0          move    @PSTATUS,a0
         00012b70 00000000! 
    2971 00012b90     1fa0          btst    2,a0
    2972 00012ba0     ca10          jrz     xraxtag4
    2973                    
    2974 00012bb0     09eb          movi    init_t3kit,a11
         00012bc0 00013ce0' 
    2975                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   68

    2976 00012be0     05ae          move    @TWOPLAYERS,a14         ;0 = NO, 1 = YES 2 players
         00012bf0 00000000! 
    2977 00012c10     cb03          jrnz    xrax2_plyrsb
    2978                    
    2979 00012c20     09eb          movi    init_t3,a11
         00012c30 00013be0' 
    2980 00012c50           xrax2_plyrsb
    2981                    
    2982                    
    2983 00012c50     09e9          movi    P3DATA+ply_meter_imgs,a9
         00012c60 00000080! 
    2984 00012c80     0d3f          callr   prt_status
         00012c90     00ad  
    2985                    
    2986                    
    2987 00012ca0     c029          jruc    xraxtag5
    2988 00012cb0           xraxtag4
    2989 00012cb0     09eb          movi    init_t3a,a11
         00012cc0 00013de0' 
    2990 00012ce0     09e9          movi    P3DATA+ply_messages,a9
         00012cf0 00000000! 
    2991 00012d10     0d3f          callr   prt_status
         00012d20     00a4  
    2992                    
    2993                    
    2994                    
    2995 00012d30     09eb          movi    init_t3kit,a11
         00012d40 00013ce0' 
    2996                    
    2997 00012d60     05ae          move    @TWOPLAYERS,a14         ;0 = NO, 1 = YES 2 players
         00012d70 00000000! 
    2998 00012d90     cb03          jrnz    xrax2_plyrsc
    2999                    
    3000 00012da0     09eb          movi    init_t3,a11
         00012db0 00013be0' 
    3001 00012dd0           xrax2_plyrsc
    3002                    
    3003                    
    3004                    
    3005                    
    3006                    
    3007 00012dd0     09e9          movi    P3DATA+ply_meter_imgs,a9
         00012de0 00000080! 
    3008 00012e00     0d3f          callr   prt_status
         00012e10     0095  
    3009 00012e20     07a0          move    @P3DATA+ply_meter_imgs,a0,L
         00012e30 00000080! 
    3010 00012e50     0d5f          calla   OBJOFF
         00012e60 00000000! 
    3011 00012e80     07a0          move    @P3DATA+ply_meter_imgs+20h,a0,L
         00012e90 000000a0! 
    3012 00012eb0     0d5f          calla   OBJOFF
         00012ec0 00000000! 
    3013 00012ee0     07a0          move    @P3DATA+ply_meter_imgs+40h,a0,L
         00012ef0 000000c0! 
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   69

    3014 00012f10     0d5f          calla   OBJOFF
         00012f20 00000000! 
    3015                    
    3016 00012f40           xraxtag5
    3017 00012f40     09eb          movi    P3DATA,a11              ;A11=*plyr data
         00012f50 00000000! 
    3018 00012f70     0d5f          calla   refill_turbo
         00012f80 00000000! 
    3019                    
    3020 00012fa0     05a0          move    @PSTATUS,a0
         00012fb0 00000000! 
    3021 00012fd0     1f80          btst    3,a0
    3022 00012fe0     ca09          jrz     xraxtag6
    3023                    
    3024 00012ff0     09eb          movi    init_t4,a11
         00013000 00013e40' 
    3025 00013020     09e9          movi    P4DATA+ply_meter_imgs,a9
         00013030 00000080! 
    3026 00013050     0d3f          callr   prt_status
         00013060     0070  
    3027                    
    3028                    
    3029 00013070     c022          jruc    xraxtag7
    3030 00013080           xraxtag6
    3031 00013080     09eb          movi    init_t4a,a11
         00013090 00013f40' 
    3032 000130b0     09e9          movi    P4DATA+ply_messages,a9
         000130c0 00000000! 
    3033 000130e0     0d3f          callr   prt_status
         000130f0     0067  
    3034 00013100     09eb          movi    init_t4,a11
         00013110 00013e40' 
    3035 00013130     09e9          movi    P4DATA+ply_meter_imgs,a9
         00013140 00000080! 
    3036 00013160     0d3f          callr   prt_status
         00013170     005f  
    3037 00013180     07a0          move    @P4DATA+ply_meter_imgs,a0,L
         00013190 00000080! 
    3038 000131b0     0d5f          calla   OBJOFF
         000131c0 00000000! 
    3039 000131e0     07a0          move    @P4DATA+ply_meter_imgs+20h,a0,L
         000131f0 000000a0! 
    3040 00013210     0d5f          calla   OBJOFF
         00013220 00000000! 
    3041 00013240     07a0          move    @P4DATA+ply_meter_imgs+40h,a0,L
         00013250 000000c0! 
    3042 00013270     0d5f          calla   OBJOFF
         00013280 00000000! 
    3043 000132a0           xraxtag7
    3044 000132a0     09eb          movi    P4DATA,a11              ;A11=*plyr data
         000132b0 00000000! 
    3045 000132d0     0d5f          calla   refill_turbo
         000132e0 00000000! 
    3046                    
    3047 00013300     0d5f          calla   prt_top_scores          ;Update scores at scrn top
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   70

         00013310 00000000! 
    3048 00013330     0d5f          calla   prt_cr_timers
         00013340 00000000! 
    3049                    
    3050                    
    3051                    
    3052 00013360     09e0          movi    seccall1+03df2H,a0      ;0CHhksum security call code
         00013370 00009212' 
    3053 00013390     1930          movk    (seccall1end-seccall1)/16,b0
    3054 000133a0     09e8          movi    -0259e0dH-2,a8          ;1st value
         000133b0 ffda61f1  
    3055 000133d0     b401  xraxcsumlp      move    *a0(-03df2H),a1
         000133e0     c20e  
    3056 000133f0     4028          add     a1,a8
    3057 00013400     1200          addk    16,a0
    3058 00013410     3cb0          dsj     b0,xraxcsumlp
    3059                                                            ;0CHhksum security_chk code
    3060 00013420     09e0          movi    security_chk+04bbbH,a0
         00013430 00004bbb! 
    3061 00013450     09d0          movi    68+128*2,b0             ;xraxWords
         00013460     0144  
    3062 00013470     b401  xraxcsmlp       move    *a0(-04bbbH),a1
         00013480     b445  
    3063 00013490     4028          add     a1,a8
    3064 000134a0     1200          addk    16,a0
    3065 000134b0     3cb0          dsj     b0,xraxcsmlp
    3066                    
    3067                    
    3068                    
    3069 000134c0                   SLEEPK  5
    3070 00013500     0d5f          calla   update_scorebrd
         00013510 00000000! 
    3071                    
    3072 00013530     5600          clr     a0
    3073 00013540     1881          movk    4,a1
    3074 00013550     0d3f          callr   net_ani                 ;Ani both nets to fix alignment
         00013560     fd5e  
    3075 00013570     1820          movk    1,a0
    3076 00013580     1881          movk    4,a1
    3077 00013590     0d3f          callr   net_ani
         000135a0     fd5a  
    3078                    
    3079 000135b0                   CREATE0 security_trashstuff     ;Pass A8
    3080                    
    3081 00013620     0d3f          callr   lftcrowd_ani
         00013630     f8c5  
    3082 00013640                   DIE
    3083                    
    3084 00013670           xraxlp
    3085 00013670     9561          move    *a11+,a1                ;Y
    3086 00013680     2600          sll     16,a0
    3087 00013690     2601          sll     16,a1
    3088 000136a0     9563          move    *a11+,a3                ;Z
    3089 000136b0     09e4          movi    DMAWNZ|M_NOCOLL|M_SCRNREL,a4
         000136c0 0000a802  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   71

    3090 000136e0     9762          move    *a11+,a2,L
    3091 000136f0     09c5          movi    CLSDEAD,a5
         00013700     2000  
    3092 00013710     56c6          clr     a6
    3093 00013720     56e7          clr     a7
    3094 00013730     0d5f          calla   BEGINOBJ2
         00013740 00000000! 
    3095 00013760     9309          move    a8,*a9+,L               ;keep led img pntr
    3096                    
    3097 00013770            SUBR   prt_status
    3098                    
    3099 00013770     9560          move    *a11+,a0                ;X
    3100 00013780     0b40          cmpi    4000,a0
         00013790     f05f  
    3101 000137a0     cbec          jrne    xraxlp                  ;!End?
    3102 000137b0     0960          rets
    3103                    
    3104              0013  xraxx   .equ    15+4
    3105              00f6  xraxx2  .equ    236+10
    3106              0002  xraxy   .equ    2
    3107              012c  xraxz   .equ    300
    3108                    
    3109 000137c0           xraxinit_t
    3110 000137c0     00af          .word   0afH,xraxy-2,948
    3111 000137f0 00000000!         .long   crplate                 ;top credit plate
    3112                    
    3113 00013810     0fa0          .word   4000
    3114                    
    3115 00013820           init_t1
    3116 00013820     002e          .word   xraxx+27,xraxy-2+8,xraxz
    3117 00013850 00000000!         .long   LED_00                  ;timebox
    3118 00013870           init_t1b
    3119 00013870     002f          .word   xraxx+28,xraxy-2+12,xraxz
    3120 000138a0 00000000!         .long   METERb
    3121 000138c0     0011          .word   xraxx-2,xraxy-2,xraxz+1
    3122 000138f0 00000000!         .long   LITUPb
    3123                    
    3124 00013910     0fa0          .word   4000
    3125                    
    3126 00013920           init_t1a                                ;not in game, insert coin
    3127 00013920     0031          .word   xraxx+30,xraxy-2+8,xraxz
    3128 00013950 00000000!         .long   insert
    3129                    
    3130 00013970     0fa0          .word   4000
    3131                    
    3132 00013980           init_t2
    3133 00013980     007e          .word   xraxx+90-10+27,xraxy-2+8,xraxz
    3134 000139b0 00000000!         .long   LED_00                  ;timebox
    3135 000139d0           init_t2b
    3136 000139d0     007f          .word   xraxx+90-10+28,xraxy-2+12,xraxz
    3137 00013a00 00000000!         .long   METERg
    3138 00013a20     0061          .word   xraxx+90-10-2,xraxy-2,xraxz+1
    3139 00013a50 00000000!         .long   LITUPg
    3140                    
    3141 00013a70     0fa0          .word   4000
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   72

    3142 00013a80           init_t2kit
    3143 00013a80     007e          .word   xraxx+90-10+27,xraxy-2+8,xraxz
    3144 00013ab0 00000000!         .long   LED_00                  ;timebox
    3145 00013ad0           init_t2bkit
    3146 00013ad0     007f          .word   xraxx+90-10+28,xraxy-2+12,xraxz
    3147 00013b00 00000000!         .long   METERb
    3148 00013b20     0061          .word   xraxx+90-10-2,xraxy-2,xraxz+1
    3149 00013b50 00000000!         .long   LITUPb
    3150                    
    3151 00013b70     0fa0          .word   4000
    3152                    
    3153 00013b80           init_t2a                                ;not in game, insert coin
    3154 00013b80     0081          .word   xraxx+90-10+30,xraxy-2+8,xraxz
    3155 00013bb0 00000000!         .long   insert
    3156                    
    3157 00013bd0     0fa0          .word   4000
    3158                    
    3159 00013be0           init_t3
    3160 00013be0     0111          .word   xraxx2+27,xraxy-2+8,xraxz
    3161 00013c10 00000000!         .long   LED_00                  ;timebox
    3162 00013c30           init_t3b
    3163 00013c30     0112          .word   xraxx2+28,xraxy-2+12,xraxz
    3164 00013c60 00000000!         .long   METERy
    3165 00013c80     00f4          .word   xraxx2-2,xraxy-2,xraxz+1
    3166 00013cb0 00000000!         .long   LITUPy
    3167                    
    3168 00013cd0     0fa0          .word   4000
    3169 00013ce0           init_t3kit
    3170 00013ce0     0111          .word   xraxx2+27,xraxy-2+8,xraxz
    3171 00013d10 00000000!         .long   LED_00                  ;timebox
    3172 00013d30           init_t3bkit
    3173 00013d30     0112          .word   xraxx2+28,xraxy-2+12,xraxz
    3174 00013d60 00000000!         .long   METERr
    3175 00013d80     00f4          .word   xraxx2-2,xraxy-2,xraxz+1
    3176 00013db0 00000000!         .long   LITUPr
    3177                    
    3178 00013dd0     0fa0          .word   4000
    3179                    
    3180 00013de0           init_t3a                                ;not in game, insert coin
    3181 00013de0     0114          .word   xraxx2+30,xraxy-2+8,xraxz
    3182 00013e10 00000000!         .long   insert
    3183                    
    3184 00013e30     0fa0          .word   4000
    3185                    
    3186 00013e40           init_t4
    3187 00013e40     015e          .word   xraxx2+87-10+27,xraxy-2+8,xraxz
    3188 00013e70 00000000!         .long   LED_00                  ;timebox
    3189 00013e90           init_t4b
    3190 00013e90     015f          .word   xraxx2+87-10+28,xraxy-2+12,xraxz
    3191 00013ec0 00000000!         .long   METERr
    3192 00013ee0     0141          .word   xraxx2+87-10-2,xraxy-2,xraxz+1
    3193 00013f10 00000000!         .long   LITUPr
    3194                    
    3195 00013f30     0fa0          .word   4000
    3196                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   73

    3197 00013f40           init_t4a                                ;not in game, insert coin
    3198 00013f40     0161          .word   xraxx2+87-10+30,xraxy-2+8,xraxz
    3199 00013f70 00000000!         .long   insert
    3200                    
    3201 00013f90     0fa0          .word   4000
    3202                    
    3203                    
    3204                    
    3205 00013fa0           COLRPRC
    3206 00013fa0     09c0          movi    COLRPID,a0
         00013fb0     0078  
    3207 00013fc0     0d5f          calla   KIL1C           ;KILL ALL COLOR UPDATE PROCESSES
         00013fd0 00000000! 
    3208 00013ff0     5600          clr     a0
    3209 00014000     0780          move    a0,@PALFRAM,L
         00014010 00000000! 
    3210 00014030     09e0          movi    scorep,a0       ;Score area palette
         00014040 00000000! 
    3211 00014060     c080          jauc    pal_getf
         00014070 00000000! 
    3212                    
    3213                    
    3214                    
    3215                    
    3216                    
    3217 00014090            SUBRP  security_trashstuff
    3218                    
    3219 00014090     1048          addk    2,a8
    3220 000140a0     ca11          jrz     utzcx           ;OK?
    3221 000140b0     09c0          movi    TSEC*60*5+1,a0
         000140c0     3e1d  
    3222 000140d0     0d5f          calla   RNDRNG0
         000140e0 00000000! 
    3223 00014100     0b00          addi    TSEC*60*4-3,a0
         00014110     31ad  
    3224 00014120     0d5f          calla   PRCSLP          ;Sleep 5-9 minutes
         00014130 00000000! 
    3225 00014150     09e1          movi    OFREE,a1
         00014160 00000000! 
    3226 00014180     1942          movk    10,a2
    3227 00014190     8621  utzclp  move    *a1,a1,L
    3228 000141a0     3c42          dsj     a2,utzclp
    3229 000141b0     8201          move    a0,*a1,L        ;Trash 10th free objs *next (-1)
    3230                    
    3231 000141c0           utzcx   DIE
    3232                    
    3233                    
    3234                    
    3235                    
    3236                    
    3237                    
    3238                    
    3239                    
    3240                    
    3241                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   74

    3242                    
    3243 000141f0            SUBR   WNDWON
    3244                    
    3245 000141f0                   PUSHP   a8
    3246 00014200     1828          movk    1,a8
    3247 00014210     0588          MOVE    A8,@WFLG
         00014220 00000580- 
    3248 00014240     09e8          MOVI    [254,400],A8
         00014250 00fe0190  
    3249 00014270     09ea          MOVI    SCRNMID,A10
         00014280 008000c8  
    3250 000142a0                   JSRP    OWINDOW
    3251 00014310     0788          MOVE    A8,@OBJPTR,L
         00014320 000005a0- 
    3252 00014340                   PULLP   a8
    3253 00014350                   RETP
    3254                    
    3255                    
    3256 00014380            SUBR   WNDWOFF
    3257                    
    3258 00014380                   PUSHP   a8
    3259 00014390     07a8          MOVE    @OBJPTR,A8,L
         000143a0 000005a0- 
    3260 000143c0                   JSRP    CWINDOW
    3261 00014430     5600          CLR     A0
    3262 00014440     0580          MOVE    A0,@WFLG
         00014450 00000580- 
    3263 00014470                   PULLP   a8
    3264 00014480                   RETP
    3265                    
    3266                    
    3267                    
    3268                    
    3269 000144b0           OWINDOW
    3270 000144b0     4d0b          move    a8,a11
    3271                    
    3272 000144c0     4d40          move    a10,a0
    3273 000144d0     2600          sll     16,a0
    3274 000144e0     5621          clr     a1
    3275 000144f0     ef41          movy    a10,a1
    3276 00014500     09e2          movi    FONT7A,a2
         00014510 00000000! 
    3277 00014530     09c3          movi    20001,a3                ;Z
         00014540     4e21  
    3278 00014550     09e4          movi    DMACAL,a4
         00014560 0000800c  
    3279 00014580     09c5          movi    CLSNEUT|TYPTEXT|SUBWNDW,a5
         00014590     0705  
    3280 000145a0     56c6          clr     a6
    3281 000145b0     56e7          clr     a7
    3282 000145c0     0d5f          calla   BEGINOBJ
         000145d0 00000000! 
    3283                    
    3284 000145f0     b50a          move    *a8(OXPOS),a10
         00014600     0090  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   75

    3285 00014610     b700          move    *a8(OYVAL),a0,L
         00014620     00a0  
    3286 00014630     ee0a          movy    a0,a10                  ;Get new world coords
    3287 00014640     4d40          move    a10,a0
    3288                    
    3289 00014650     2feb          srl     1,a11                   ;XY/2
    3290 00014660     0b8b          andi    07fff7fffH,a11
         00014670 80008000  
    3291                    
    3292 00014690     e36a          subxy   a11,a10
    3293 000146a0     e00b          addxy   a0,a11
    3294                    
    3295 000146b0     05a0          move    @WSPEED,a0              ;Window speed
         000146c0 00000570- 
    3296 000146e0                   JSRP    OBJEXP32
    3297                    
    3298 00014750     09c0          movi    OWSPD,a0
         00014760     0012  
    3299 00014770     0580          move    a0,@WSPEED
         00014780 00000570- 
    3300                    
    3301 000147a0                   RETP
    3302                    
    3303                    
    3304                    
    3305 000147d0           CWINDOW
    3306 000147d0     b50a          MOVE    *A8(OXPOS),A10
         000147e0     0090  
    3307 000147f0     b70b          MOVE    *A8(OYVAL),A11,L
         00014800     00a0  
    3308 00014810     ef6a          MOVY    A11,A10
    3309 00014820     b70b          MOVE    *A8(OSIZE),A11,L
         00014830     0130  
    3310 00014840     ef61          MOVY    A11,A1
    3311 00014850     2de1          SRL     17,A1
    3312 00014860     2601          SLL     16,A1
    3313 00014870     260b          SLL     16,A11
    3314 00014880     2deb          SRL     17,A11
    3315 00014890     ee2b          MOVY    A1,A11
    3316 000148a0     e16a          ADDXY   A11,A10
    3317 000148b0     4d4b          MOVE    A10,A11                 ;CALCULATED CENTER OF OBJECT
    3318 000148c0     09c0          MOVI    CWSPD,A0                        ;WINDOW SPEED
         000148d0     0028  
    3319 000148e0                   JSRP    OBJEXP32
    3320 00014950     0d5f          CALLA   DELOBJA8
         00014960 00000000! 
    3321 00014980                   RETP
    3322                    
    3323 000149b0           DELWNDW
    3324 000149b0     07a0          MOVE    @OBJPTR,A0,L
         000149c0 000005a0- 
    3325 000149e0     4c08          MOVE    A0,A8
    3326 000149f0     c080          jauc    DELOBJ
         00014a00 00000000! 
    3327                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   76

    3328                    
    3329                    
    3330 00014a20           OBJEXP32
    3331 00014a20     2700          sll     32-8,a0                 ;0-255
    3332 00014a30     2d00          srl     32-8,a0
    3333 00014a40     0ba0          ori     1,a0
         00014a50 00000001  
    3334                    
    3335 00014a70     b501          MOVE    *A8(OXPOS),A1
         00014a80     0090  
    3336 00014a90     b70e          MOVE    *A8(OYVAL),A14,L
         00014aa0     00a0  
    3337 00014ab0     ec2e          MOVX    A1,A14                  ;A14 = OBJECT UL
    3338                    
    3339 00014ac0     2601          SLL     16,A1
    3340 00014ad0     5642          CLR     A2
    3341 00014ae0     efc2          MOVY    A14,A2
    3342 00014af0     e34e          SUBXY   A10,A14
    3343 00014b00     edc5          MOVX    A14,A5
    3344 00014b10     2605          SLL     16,A5
    3345 00014b20     5805          DIVS    A0,A5
    3346 00014b30     03a5          NEG     A5
    3347 00014b40     4ca6          MOVE    A5,A6
    3348 00014b50     56a5          CLR     A5
    3349 00014b60     efc5          MOVY    A14,A5
    3350 00014b70     5805          DIVS    A0,A5
    3351 00014b80     03a5          NEG     A5
    3352 00014b90     4ca7          MOVE    A5,A7
    3353                    
    3354 00014ba0     b503          MOVE    *A8(OXPOS),A3
         00014bb0     0090  
    3355 00014bc0     b70e          MOVE    *A8(OYVAL),A14,L
         00014bd0     00a0  
    3356 00014be0     ec6e          MOVX    A3,A14
    3357 00014bf0     b703          MOVE    *A8(OSIZE),A3,L
         00014c00     0130  
    3358 00014c10     e06e          ADDXY   A3,A14                  ;A14 = OBJECT LR
    3359                    
    3360 00014c20                   PUSH    A8
    3361 00014c30     edc3          MOVX    A14,A3
    3362 00014c40     2603          SLL     16,A3
    3363 00014c50     5684          CLR     A4
    3364 00014c60     efc4          MOVY    A14,A4
    3365 00014c70     e36e          SUBXY   A11,A14
    3366 00014c80     edc5          MOVX    A14,A5
    3367 00014c90     2605          SLL     16,A5
    3368 00014ca0     5805          DIVS    A0,A5
    3369 00014cb0     03a5          NEG     A5
    3370 00014cc0     4ca8          MOVE    A5,A8
    3371 00014cd0     56a5          CLR     A5
    3372 00014ce0     efc5          MOVY    A14,A5
    3373 00014cf0     5805          DIVS    A0,A5
    3374 00014d00     03a5          NEG     A5
    3375 00014d10     4ca9          MOVE    A5,A9
    3376 00014d20     4c05          MOVE    A0,A5
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   77

    3377 00014d30                   PULL    A14
    3378 00014d40           OBJTIMLP
    3379 00014d40     40c1          ADD     A6,A1                   ;ADD THE TLX INCREMENT
    3380 00014d50     40e2          ADD     A7,A2                   ;ADD THE TLY INCREMENT
    3381 00014d60     4103          ADD     A8,A3                   ;ADD THE LRX INCREMENT
    3382 00014d70     4124          ADD     A9,A4                   ;ADD THE LRY INCREMENT
    3383 00014d80     098c          MMTM    A12,A1,A2,A3,A4,A5,A6,A7,A14
         00014d90     7f02  
    3384 00014da0     b22e          MOVE    A1,*A14(OXVAL),L
         00014db0     0080  
    3385 00014dc0     b24e          MOVE    A2,*A14(OYVAL),L
         00014dd0     00a0  
    3386 00014de0     4423          SUB     A1,A3
    3387 00014df0     4444          SUB     A2,A4                   ;GET A SIZE FOR THE WINDOW
    3388 00014e00     2e03          SRL     16,A3
    3389 00014e10     ee83          MOVY    A4,A3
    3390 00014e20     0d3f          callr   fixa3xy
         00014e30     001b  
    3391 00014e40     b26e          MOVE    A3,*A14(OSIZE),L
         00014e50     0130  
    3392 00014e60                   SLEEPK  1
    3393 00014ea0     09ac          MMFM    A12,A1,A2,A3,A4,A5,A6,A7,A14
         00014eb0     40fe  
    3394 00014ec0     3f25          DSJS    A5,OBJTIMLP
    3395                    
    3396 00014ed0     b14e          MOVE    A10,*A14(OXPOS)
         00014ee0     0090  
    3397 00014ef0     ef41          MOVY    A10,A1
    3398 00014f00     2e01          SRL     16,A1
    3399 00014f10     b02e          MOVE    A1,*A14(OYPOS)
         00014f20     00b0  
    3400 00014f30     4d69          MOVE    A11,A9
    3401 00014f40     e34b          SUBXY   A10,A11
    3402 00014f50     4d63          MOVE    A11,A3
    3403 00014f60     0d3f          callr   fixa3xy
         00014f70     0007  
    3404 00014f80     b26e          MOVE    A3,*A14(OSIZE),L        ;MATCH WHAT THE CALLER WANTED
         00014f90     0130  
    3405 00014fa0     4d2b          MOVE    A9,A11                  ;PRESERVE FOR YUKS
    3406 00014fb0     4dc8          MOVE    A14,A8
    3407 00014fc0                   RETP
    3408                    
    3409                    
    3410                    
    3411 00014ff0           fixa3xy
    3412 00014ff0     4c63          move    a3,a3
    3413 00015000     c703          jrgt    utzcyok
    3414 00015010     1820          movk    1,a0
    3415 00015020     2600          sll     16,a0
    3416 00015030     ee03          movy    a0,a3
    3417 00015040           utzcyok
    3418 00015040     ec60          movx    a3,a0
    3419 00015050     0500          sext    a0
    3420 00015060     c702          jrgt    utzcxok
    3421 00015070     1820          movk    1,a0
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   78

    3422 00015080     ec03          movx    a0,a3
    3423 00015090           utzcxok
    3424 00015090     0960          rets
    3425                    
    3426                    
    3427                    
    3428 000150a0            SUBRP  rnd
    3429                    
    3430 000150a0     07a1          move    @RAND,a1,L
         000150b0 00000000! 
    3431 000150d0     6821          rl      a1,a1
    3432 000150e0     05ae          move    @HCOUNT,a14
         000150f0 c00001c0  
    3433 00015110     69c1          rl      a14,a1
    3434 00015120     41e1          add     sp,a1
    3435 00015130     0781          move    a1,@RAND,L
         00015140 00000000! 
    3436                    
    3437 00015160     5020          and     a1,a0
    3438 00015170     0960          rets
    3439                    
    3440                    
    3441                    
    3442                    
    3443                            .if     DEBUG
    3444                    
    3445                            .ref    dirqtimer
    3446                    
    3447                            BSSX    CPUAVG          ,16
    3448                            BSSX    CPULEFT         ,16
    3449                    
    3450                    
    3451                     SUBRP  cputime_calcfree
    3452                    
    3453                            move    @dirqtimer,a0
    3454                            subk    1,a0
    3455                            jrle    nobog
    3456                            clr     a0
    3457                            jruc    gottime
    3458                    nobog
    3459                            move    @vcount,a0
    3460                            subi    EOSINT,a0
    3461                            jrnn    skinccnt
    3462                            addi    256,a0
    3463                    skinccnt
    3464                            sll     2,a0
    3465                            neg     a0
    3466                            addi    1024,a0
    3467                    gottime
    3468                            move    a0,@CPULEFT
    3469                    
    3470                            srl     4,a0
    3471                            move    @CPUAVG,a1
    3472                            move    a1,a2
    3473                            srl     4,a2                    ;/16
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   79

    3474                            sub     a2,a1
    3475                            add     a0,a1
    3476                            move    a1,@CPUAVG
    3477                    
    3478                            rets
    3479                    
    3480                    
    3481                            .endif
    3482                    
    3483                    
    3484                    
    3485 00015180            SUBRP  testcode
    3486                    
    3487                    
    3488                    
    3489                    
    3490                            NOTINUSE
    3491                    
    3492                            dint
    3493                    
    3494                            clr     a0
    3495                            move    a0,@DMACTRL
    3496                            move    a0,@DMACTRL
    3497                    
    3498                            clr     a1                      ;0CHlr screen mem
    3499                            movi    0200000H/32,b0
    3500                    wpuxclrscr      move    a0,*a1+,L
    3501                            dsj     b0,wpuxclrscr
    3502                    
    3503                            clr     a0
    3504                            move    a0,@DMATEST
    3505                    
    3506                            movi    0,a0
    3507                            move    a0,@DMAOFFST
    3508                    
    3509                            movk    010H,a1
    3510                            move    a1,@DMACONF
    3511                            movi    [350+56,50+56],a1       ;L/R
    3512                            move    a1,@DMAWINDOW,L
    3513                    
    3514                            movi    030H,a1
    3515                            move    a1,@DMACONF             ;Top/Bottom
    3516                            movi    [200,50],a1
    3517                            move    a1,@DMAWINDOW,L
    3518                    
    3519                    
    3520                            movi    [0100H,0100H],a3                ;Y:X scale
    3521                            clr     a4
    3522                            movi    [100,100+56],a8         ;Y:X
    3523                            movi    [100,200],a7            ;V:H size
    3524                            movi    02000000H,a10           ;SAG
    3525                            movi    0900c0000H,a11          ;CTRL:OFSET
    3526                    
    3527                            movi    20000,b2
    3528                    wpuxlp  rl      16,a4
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   80

    3529                    
    3530                            movi    DMAREGS,a14
    3531                    
    3532                    wpuxdwt move    @DMACTRL,a0
    3533                            jrn     wpuxdwt
    3534                    
    3535                            mmtm    a14,a3,a4,a7,a8,a10,a11
    3536                    
    3537                            rl      16,a4
    3538                    
    3539                    wpuxxok addk    1,a4                    ;Color+1
    3540                            andi    0ffH,a4
    3541                            move    a4,a0
    3542                            sll     8,a0
    3543                            or      a0,a4
    3544                    
    3545                            dsj     b2,wpuxlp
    3546                    
    3547                            eint
    3548                    
    3549                            .endif
    3550                    
    3551                    
    3552                    
    3553                    
    3554                    
    3555                    
    3556                            NOTINUSE
    3557                    
    3558                            dint
    3559                    
    3560                            clr     a0
    3561                            move    a0,@DMACTRL
    3562                            move    a0,@DMACTRL
    3563                    
    3564                            clr     a1                      ;0CHlr screen mem
    3565                            movi    0200000H/32,b0
    3566                    albqclrscr      move    a0,*a1+,L
    3567                            dsj     b0,albqclrscr
    3568                    
    3569                            clr     a0
    3570                            move    a0,@DMATEST
    3571                    
    3572                            movi    0,a0
    3573                            move    a0,@DMAOFFST
    3574                    
    3575                            movk    010H,a1
    3576                            move    a1,@DMACONF
    3577                            movi    [350,50],a1             ;L/R
    3578                            movi    [399,0],a1              ;L/R
    3579                            move    a1,@DMAWINDOW,L
    3580                    
    3581                            movi    030H,a1
    3582                            move    a1,@DMACONF             ;Top/Bottom
    3583                            movi    [200,50],a1
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   81

    3584                            movi    [253,0],a1
    3585                            move    a1,@DMAWINDOW,L
    3586                    
    3587                    
    3588                            movi    [0100H,0100H],a3                ;Y:X scale
    3589                            clr     a4
    3590                            clr     a8                      ;Y:X
    3591                            movi    010001H,a7              ;V:H size
    3592                            movi    02000000H,a10           ;SAG
    3593                            movi    0900c0000H,a11          ;CTRL:OFSET
    3594                    
    3595                    albqlp  rl      16,a4
    3596                    
    3597                            movi    DMAREGS,a14
    3598                    
    3599                    albqdwt move    @DMACTRL,a0
    3600                            jrn     albqdwt
    3601                    
    3602                            mmtm    a14,a3,a4,a7,a8,a10,a11
    3603                    
    3604                            rl      16,a4
    3605                    
    3606                            addk    1,a8
    3607                            btst    9,a8
    3608                            jrz     albqxok
    3609                            addi    010000H,a8              ;+1 Y
    3610                            btst    8+16,a8
    3611                            jrz     albqyok
    3612                            addk    4,a4
    3613                    albqyok andi    0ff01ffH,a8
    3614                    
    3615                    albqxok addk    1,a4
    3616                            andi    0ffH,a4
    3617                            move    a4,a0
    3618                            sll     8,a0
    3619                            or      a0,a4
    3620                    
    3621                            addk    1,a10                   ;SAG+1
    3622                    
    3623                            jruc    albqlp
    3624                    
    3625                            eint
    3626                    
    3627                            .endif
    3628                    
    3629                    
    3630                    
    3631                    
    3632                            NOTINUSE
    3633                    
    3634                            dint
    3635                            movi    02cH,a0                 ;Enable cache
    3636                            movi    0802cH,a0               ;Disable cache
    3637                            move    a0,@CONTROL
    3638                            movi    0f010H,a0
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   82

    3639                            move    a0,@DPYCTL
    3640                            move    @HSTCTLH,a0
    3641                            andi    0bfffH,a0
    3642                            move    a0,@HSTCTLH
    3643                    
    3644                    
    3645                            movi    CPULEFT,a1
    3646                    
    3647                    
    3648                    
    3649                    kdeanxt
    3650                            movi    VCOUNT,a7
    3651                            clr     a6
    3652                            movi    SCRATCH,a2
    3653                    
    3654                    kdealp  move    *a7,a0
    3655                            jrnz    kdealp
    3656                    kdealp2 move    *a7,a0
    3657                            jrz     kdealp2
    3658                    
    3659                    kdealp3
    3660                            movi    SCRATCH+01000H,a0
    3661                            movi    SCRATCH+01000H,a1
    3662                            mmfm    a0,a1,a2,a3,a4,a5,a14
    3663                            mmtm    a0,a1,a2,a3,a4,a5,a14
    3664                    
    3665                            addk    1,a6                    ;1,4
    3666                            move    *a7,a0                  ;3,6
    3667                            jrnz    kdealp3                 ;2,5
    3668                    
    3669                            movi    16*50000000/8/62,a1
    3670                            divu    a6,a1
    3671                            addk    18,a1                   ;+Fudge
    3672                            subi    15*16,a1                ;-Overhead cycles
    3673                            move    a1,a0                   ;Round off
    3674                            addk    8,a0
    3675                            srl     4,a0
    3676                    
    3677                            trap    29
    3678                            jruc    kdeanxt
    3679                    
    3680                    
    3681                            movi    COLRAM,a8
    3682                    kdealp5 move    *a7,a0
    3683                    kdealp6 move    *a7,a1
    3684                            cmp     a1,a0
    3685                            jreq    kdealp6
    3686                    
    3687                            movi    90,a2
    3688                            movk    5,a0
    3689                    kdealp8 move    a0,*a8          ;1+(1),5
    3690                            addk    2,a0            ;1,4
    3691                            dsj     a2,kdealp8              ;2,5
    3692                            jruc    kdealp5
    3693                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   83

    3694                            eint
    3695                    
    3696                            .endif
    3697                    
    3698                    
    3699 00015180     0960          rets
    3700                    
    3701 00015190            SUBR   set_names
    3702                    
    3703 00015190     09ea          movi    player_names,a10
         000151a0 00000000! 
    3704 000151c0     05a2          move    @team1,a2
         000151d0 00000000! 
    3705                    
    3706                    
    3707                    
    3708 000151f0     0b42  kdealp  cmpi    0,a2
         00015200     ffff  
    3709 00015210     ca04          jrz     kdeaout
    3710 00015220     0b0a          addi    20*64,a10
         00015230     0500  
    3711 00015240     1422          dec     a2
    3712 00015250     c0f9          jruc    kdealp  
    3713 00015260           kdeaout
    3714 00015260     05a0          move    @team1,a0
         00015270 00000000! 
    3715 00015290     2480          sll     4,a0
    3716 000152a0     0b20          addi    tm1set,a0
         000152b0 00000000! 
    3717 000152d0     840e          move    *a0,a14
    3718 000152e0     24ce          sll     6,a14
    3719 000152f0     41ca          add     a14,a10
    3720                    
    3721 00015300     8741          move    *a10,a1,L               ;image addr
    3722 00015310     b742          move    *a10(20h),a2,L          ;image addr
         00015320     0020  
    3723                    
    3724                    
    3725                    
    3726 00015330     05ae          move    @special_heads,a14
         00015340 00000000! 
    3727 00015360     ce05          jrn     kdeanot_spec1
    3728 00015370     24ae          sll     5,a14                           ;x 32 bits
    3729 00015380     0b2e          addi    our_names,a14
         00015390 00000000! 
    3730 000153b0     87c1          move    *a14,a1,L
    3731 000153c0           kdeanot_spec1
    3732 000153c0     0781          move    a1,@names,L
         000153d0 00000c80- 
    3733                    
    3734                    
    3735 000153f0     05ae          move    @special_heads+10h,a14
         00015400 00000010! 
    3736 00015420     ce05          jrn     kdeanot_spec2
    3737 00015430     24ae          sll     5,a14                           ;x 32 bits
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   84

    3738 00015440     0b2e          addi    our_names,a14
         00015450 00000000! 
    3739 00015470     87c2          move    *a14,a2,L
    3740 00015480           kdeanot_spec2
    3741 00015480     0782          move    a2,@names+32,L
         00015490 00000ca0- 
    3742                    
    3743                    
    3744 000154b0     09ea          movi    player_names,a10
         000154c0 00000000! 
    3745 000154e0     05a2          move    @team2,a2
         000154f0 00000000! 
    3746 00015510     0b42  kdealp2 cmpi    0,a2
         00015520     ffff  
    3747 00015530     ca04          jrz     kdeaout2
    3748 00015540     0b0a          addi    20*64,a10
         00015550     0500  
    3749 00015560     1422          dec     a2
    3750 00015570     c0f9          jruc    kdealp2
    3751 00015580           kdeaout2
    3752 00015580     05a0          move    @team2,a0
         00015590 00000000! 
    3753 000155b0     2480          sll     4,a0
    3754 000155c0     0b20          addi    tm2set,a0
         000155d0 00000000! 
    3755 000155f0     840e          move    *a0,a14
    3756 00015600     24ce          sll     6,a14
    3757 00015610     41ca          add     a14,a10
    3758                    
    3759 00015620     8741          move    *a10,a1,L               ;image addr
    3760 00015630     b742          move    *a10(20h),a2,L          ;image addr
         00015640     0020  
    3761                    
    3762 00015650     05ae          move    @special_heads+20h,a14
         00015660 00000020! 
    3763 00015680     ce05          jrn     kdeanot_spec3
    3764 00015690     24ae          sll     5,a14                           ;x 32 bits
    3765 000156a0     0b2e          addi    our_names,a14
         000156b0 00000000! 
    3766 000156d0     87c1          move    *a14,a1,L
    3767 000156e0           kdeanot_spec3
    3768 000156e0     0781          move    a1,@names+64,L
         000156f0 00000cc0- 
    3769                    
    3770                    
    3771 00015710     05ae          move    @special_heads+30h,a14
         00015720 00000030! 
    3772 00015740     ce05          jrn     kdeanot_spec4
    3773 00015750     24ae          sll     5,a14                           ;x 32 bits
    3774 00015760     0b2e          addi    our_names,a14
         00015770 00000000! 
    3775 00015790     87c2          move    *a14,a2,L
    3776 000157a0           kdeanot_spec4
    3777 000157a0     0782          move    a2,@names+96,L
         000157b0 00000ce0- 
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 14:31:17 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   85

    3778                    
    3779 000157d0     0960          rets
    3780                    
    3781                            .end

 No Errors,  No Warnings
