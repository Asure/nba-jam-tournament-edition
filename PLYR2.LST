TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    1

       1                            .file   "plyr2.asm"
       3                            .width  132
       4                            .option b,d,l,t
       5                            .mnolist
       6                    
       7                    
       8                            .include        "mproc.equ"             ;Mproc equates
       9                            .include        "disp.equ"              ;Display proc equates
      10                            .include        "gsp.equ"               ;Gsp asm equates
      11                            .include        "sys.equ"
      12                            .include        "audit.equ"
      13                            .include        "imgtbl.glo"
      14                            .include        "game.equ"
      15                            .include        "shawn.hdr"             ;Macros
      16                            .asg            0,SEQT
      17                            .include        "plyr.equ"
      18                            .include        "ball.tbl"
      19                    
      20                    
      21                    
      22                            .ref    snd_play1ovr
      23                            .ref    snd_play1ovrp
      24                    
      25                    
      26 00000000     f990  facial_snd      .word   0f990H,93,081eeH,0      ;Delivers the
      27 00000040     f981  ohmy            .word   0f981H,98,081eaH,0      ;oh my!
      28 00000080     f990  stealsb         .word   0f990H,80,081f3H,0      ;steals the ball
      29 000000c0     f991  intercept       .word   0f991H,59,081a9H,0      ;Intercepted
      30 00000100     f970  intostands      .word   0f970H,74,081c7H,0      ;into the stands
      31 00000140     fc80  bounce_snd      .word   0fc80H,10,08129H,0      ;Ball bounce
      32 00000180     fca0  swish_snd       .word   0fca0H,30,08112H,0      ;Ball swish
      33 000001c0     fca4  dunk_snd        .word   0fca4H,30,08120H,0      ;Dunk
      34                    
      35 00000200     fc90  miss_snd        .word   0fc90H,10,0813bH,0      ;Ball hits rim
      36 00000240     fd90  miss2_snd       .word   0fd90H,10,08139H,0      ;Ball hits rim
      37 00000280     fc90  miss3_snd       .word   0fc90H,10,0813aH,0      ;Ball hits rim
      38 000002c0     fc90  missd1_snd      .word   0fc90H,08H,08128H,0     ;Cartoon part of missed dunk
      39                    
      40 00000300     fcf5  hitbboard_snd   .word   0fcf5H,05,08138H,0      ;Hit backboard
      41 00000340     fd94  swat_snd        .word   0fd94H,15,08157H,0      ;Swat ball (Steals & blocks)
      42 00000380     fd94  swat3_snd       .word   0fd94H,18,08155H,0
      43 000003c0     f898  cheer_snd       .word   0f898H,40,08144H,0      ;Quick cheer
      44 00000400     fd84  cheer1_snd      .word   0fd84H,100,08111H,0     ;Long cheer
      45 00000440     f894  cheer2_snd      .word   0f894H,100,08144H,0     ;Long cheer
      46 00000480     fc84  cheer3_snd      .word   0fc84H,130,0814eH,0     ;Long cheer
      47 000004c0     f884  boo1_snd        .word   0f884H,120,0814aH,0     ;Boo
      48 00000500     fbf7  steal_snd       .word   0fbf7H,08H,08093H,0     ;Steal
      49 00000540     f1f8  anncr3_snd      .word   0f1f8H,100,08182H,0     ;And it's good
      50 00000580     fcf9  explode_snd     .word   0fcf9H,250,08153H,0     ;Backboard smash
      51                    
      52 000005c0     f9fe  onfire_snd      .word   0f9feH,74,08169H,0      ;He's on fire
      53 00000600     f981  nogood          .word   0f981H,58,081f1H,0      ;NO GOOD!
      54                    
      55                    
      56                            .ref    plyr_maxpower
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE    2

      57                            .ref    shot_percentage
      58                            .ref    gmqrtr,FIREFALP
      59                            .ref    w1blok3,w2blok3,w4blok3,w5blok3
      60                            .ref    w1blok2,w2blok2,w4blok2,w5blok2
      61                            .ref    shot_distance
      62                    
      63                            .ref    AUD1,AUD
      64                            .ref    nogood_speech,GAMSTATE
      65                            .ref    speech_playovrp
      66                    
      67                            .ref    pushed_speech
      68                            .ref    rejected_speech
      69                            .ref    rejected_dnk_speech
      70                            .ref    rebound_speech
      71                            .ref    intercepted_speech
      72                            .ref    stolen_speech
      73                    
      74                            .ref    rebound_delay
      75                            .ref    pushing_delay
      76                            .ref    team1
      77                    
      78                            .ref    shot_type
      79                            .ref    shoots_speech,scored_speech
      80                    
      81                            .ref    steals_off
      82                            .ref    pass_off
      83                            .ref    RNDRNGS,PSTATUS
      84                    
      85                            .ref    game_time
      86                            .ref    scores,prt_top_scores
      87                            .ref    score_add,score_showtvpanel
      88                            .ref    stick_number
      89                            .ref    sclockx,sc_proc
      90                            .ref    net_ani
      91                            .ref    arw_on1plyr
      92                    
      93                            .ref    pal_getf
      94                    
      95                            .ref    PCNT
      96                            .ref    HALT
      97                            .ref    scale58_t,scale66_t,scale72_t
      98                            .ref    gndx
      99                            .ref    RNDPER
     100                            .ref    SHAKER
     101                            .ref    GET_ADJ
     102                    
     103                            .ref    plyrobj_t,plyrproc_t
     104                            .ref    P1DATA,P2DATA,P3DATA,P4DATA
     105                            .ref    plyrcharge
     106                            .ref    plyrpasstype
     107                            .ref    plyrairballoff
     108                            .ref    ball_smokepuff
     109                    
     110                            .ref    seekdir_xyxy128
     111                            .ref    seekdirdist_obxz128
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE    3

     112                            .ref    plyr_setseq,plyr_takeoutball
     113                            .ref    plyr_goaltending
     114                            .ref    plyr_setshtdly
     115                    
     116                            .ref    inc_player_stat
     117                    
     118                    
     119                    
     120                            .def    ball101
     121                    
     122                            .def    hoopl_t,hoopr_t
     123                    
     124                    
     125                    
     126 00000640                   BSSX    plyrnumonfire   ,16     ;Plyr # on fire (0-3) or Neg
     127 00000640                   BSSX    ballobj_p       ,32     ;* basketball obj
     128 00000640                   BSSX    ballpnum        ,16     ;Plyr # who owns (0-3) or Neg
     129 00000640                   BSSX    ballpnumlast    ,16     ;Last plyr who owned ^ (0-3) or neg if loose
     130 00000640                   BSSX    ballpnumshot    ,16     ;Last plyr who shot (0-3)
     131 00000640                   BSSX    ballsclastp     ,16     ;Last plyr who owned (0-3) for shot clock
     132                    
     133                                                            ;Keep in order!
     134 00000640                   BSSX    ballpnumscored  ,16     ;Last plyr who scored (0-3) or neg
     135 00000640                   BSSX    ballnumscored   ,16     ;# times last plyr scored
     136                    
     137 00000640                   BSSX    ballfree        ,16     ;!0=Ball free to move
     138 00000640                   BSSX    ballscorezhit   ,16     ;!0=Ball hit score zone, +=Top z, -=Scored
     139                    
     140 00000640                   BSSX    ballrimhitcnt   ,16     ;# times rim hit since last shot
     141 00000640                   BSSX    ballbbhitcnt    ,16     ;# times backboard hit since last shot
     142                    
     143 00000640                   BSSX    ballptsforshot  ,16     ;Point value for current shot (1-3)
     144 00000640                   BSSX    ballprcv_p      ,32     ;*Plyr proc who gets this pass or 0
     145 00000640                   BSSX    ballpasstime    ,16     ;# ticks since passed
     146 00000640                   BSSX    ballgoaltcnt    ,16     ;+=Goaltend cnt down
     147 00000640                   BSSX    ballflash       ,16     ;!0=Ball flashing
     148 00000640                   BSSX    inbound         ,16     ;Inbounding team (0-1) or Neg
     149 00000640                   BSSX    bbshatter       ,16     ;!0=Backboard shattered (+=L, -=R)
     150                    
     151 00000640                   BSSX    cntl_team       ,16     ;Team in control (0,1,-1)
     152 00000640                   BSSX    cntl_team_last  ,16     ;Team in control (0,1,-1)
     153 00000640                   BSSX    scrl_divs_cur   ,16     ;Scroller current divisor
     154 00000640                   BSSX    scrl_divs_dest  ,16     ;^ destination divisor
     155                    
     156                    
     157 00000640                   BSSX    slamming        ,16     ;!0=Ball going into rim from dunking
     158                    
     159 00000640                   BSSX    t1dunkcnt       ,16     ;+=# dunks since start of game (In order)
     160 000001b0                   .bss    t2dunkcnt       ,16     ;^ -=# dunks till we can break board
     161                    
     162 00000640                   BSSX    brick_count     ,4*16   ;# bricks each player has thrown up
     163 00000640                   BSSX    last_power      ,16     ;Player pushing has this power
     164                    
     165 00000640                   BSSX    original_names  ,4*32   ;Names of original players in game
     166 00000640                   BSSX    fire_flags      ,16     ;1 if this player has been on fire (1,2,4,8)
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE    4

     167                    
     168                    
     169                    
     170 00000640                   .text
     171                    
     172                    
     173                    
     174 00000640                   STRUCTPD
     175 00000640                   WORD    ball_anix       ;X anipt offset
     176 00000640                   WORD    ball_aniy       ;Y ^
     177 00000640                   APTR    ball_ani1st_p   ;*1st ani_l pos
     178 00000640                   APTR    ball_ani_p      ;*Current ani_l pos
     179 00000640                   WORD    ball_zsznum     ;Z size # 0-?
     180 00000640                   WORD    ball_collcnt    ;# of collisions in a row
     181 00000640                   WORD    ball_xscrllmin  ;
     182 00000640                   WORD    ball_xscrllmax  ;
     183 00000640                   WORD    ball_onfire     ;!0=Flaming
     184                    
     185 00000640     fd85  push1_snd       .word   0fd85H,15,08160H,0      ;Push ugh
     186                    
     187 00000680            SUBR   ball_main
     188                    
     189                    
     190 00000680     4da1          move    a13,a1                  ;0CHlr PDATA & PSDATA areas
     191 00000690     0b01          addi    PDATA,a1
         000006a0     0100  
     192 000006b0     09c2          movi    (PRCSIZ-PDATA)/16,a2
         000006c0     004b  
     193 000006d0     5600          clr     a0
     194 000006e0     9001  tnpoclrpd       move    a0,*a1+
     195 000006f0     3c42          dsj     a2,tnpoclrpd
     196                    
     197                    
     198 00000700     05a0          move    @WORLDTLX+16,a0
         00000710 00000010! 
     199 00000730     0b00          addi    200,a0
         00000740     00c8  
     200 00000750     2600          sll     16,a0
     201 00000760     09e1          movi    [-80,0],a1              ;In air
         00000770 ffb00000  
     202 00000790     09e2          movi    ball11,a2
         000007a0 00000000! 
     203 000007c0     09c3          movi    CZMID,a3
         000007d0     0492  
     204 000007e0     09e4          movi    DMAWNZ|M_3D|M_NOSCALE,a4
         000007f0 00009102  
     205 00000810     09e5          movi    CLSENMY|TYPBALL,a5
         00000820 00008200  
     206 00000840     56c6          clr     a6
     207 00000850     09e7          movi    -020000H,a7
         00000860 fffe0000  
     208 00000880     0d5f          calla   BEGINOBJ2
         00000890 00000000! 
     209 000008b0     0788          move    a8,@ballobj_p,L
         000008c0 00000010- 
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE    5

     210 000008e0     0d3f          callr   ball_getshadow
         000008f0     04ff  
     211                    
     212 00000900     5600          clr     a0
     213 00000910     0580          move    a0,@ballpnumshot
         00000920 00000050- 
     214 00000940     0580          move    a0,@ballscorezhit
         00000950 000000a0- 
     215 00000970     0580          move    a0,@ballgoaltcnt
         00000980 00000110- 
     216 000009a0     0580          move    a0,@ballflash
         000009b0 00000120- 
     217 000009d0     0580          move    a0,@t1dunkcnt
         000009e0 000001a0- 
     218 00000a00     0580          move    a0,@t2dunkcnt
         00000a10 000001b0- 
     219 00000a30     09c0          movi    -1,a0
         00000a40     ffff  
     220 00000a50     0580          move    a0,@ballpnum
         00000a60 00000030- 
     221 00000a80     0580          move    a0,@ballpnumlast
         00000a90 00000040- 
     222                    
     223 00000ab0     0780          move    a0,@brick_count,L
         00000ac0 000001c0- 
     224 00000ae0     0780          move    a0,@brick_count+20h,L
         00000af0 000001e0- 
     225                    
     226                    
     227 00000b10     0580          move    a0,@ballpnumscored
         00000b20 00000070- 
     228                    
     229 00000b40     b00d          move    a0,*a13(ball_zsznum)
         00000b50     0160  
     230 00000b60     0580          move    a0,@bbshatter
         00000b70 00000140- 
     231 00000b90     1820          movk    1,a0
     232 00000ba0     0580          move    a0,@ballfree            ;Free
         00000bb0 00000090- 
     233                    
     234                    
     235 00000bd0     b700          move    *a8(OIMG),a0,L
         00000be0     0170  
     236 00000bf0     b80d          move    *a0(IANIOFFX),*a13(ball_anix)
         00000c00     0020  
         00000c10     0100  
     237                    
     238 00000c20     182a          movk    1,a10                   ;A10=Anim cntdn
     239                    
     240 00000c30     09c0          movi    DIVS_RATE1,a0
         00000c40     2400  
     241 00000c50     0580          move    a0,@scrl_divs_cur
         00000c60 00000170- 
     242 00000c80     09c0          movi    DIVS_RATE2,a0
         00000c90     0800  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE    6

     243 00000ca0     0580          move    a0,@scrl_divs_dest
         00000cb0 00000180- 
     244                    
     245 00000cd0     07a0          move    @WORLDTLX,a0,L
         00000ce0 00000000! 
     246 00000d00     0d00          subi    [WRLDMID-200,0],a0
         00000d10 e0c7ffff  
     247 00000d30     0780          move    a0,@gndx,L
         00000d40 00000000! 
     248                    
     249 00000d60                   SLEEPK  4                       ;Wait for others to establish data
     250                    
     251                    
     252 00000da0           tnpolp
     253 00000da0     05a0          move    @HALT,a0
         00000db0 00000000! 
     254 00000dd0     cb00          jrnz    tnpohalted
         00000de0     02ca  
     255                    
     256                    
     257 00000df0     05a0          move    @ballgoaltcnt,a0
         00000e00 00000110- 
     258 00000e20     c604          jrle    tnposkipgt
     259 00000e30     1420          subk    1,a0
     260 00000e40     0580          move    a0,@ballgoaltcnt
         00000e50 00000110- 
     261 00000e70           tnposkipgt
     262                    
     263 00000e70     57ce          clr     a14                     ;0EHmit smoke if hot
     264 00000e80     09c2          movi    -1,a2
         00000e90     ffff  
     265 00000ea0     05a0          move    @ballnumscored,a0
         00000eb0 00000080- 
     266                    
     267 00000ed0     05a4          move    @ballpnumscored,a4
         00000ee0 00000070- 
     268 00000f00     05a3          move    @fire_flags,a3
         00000f10 00000290- 
     269 00000f30     4a83          btst    a4,a3
     270 00000f40     ca02          jrz     tnponormfire
     271 00000f50     1480          subk    4,a0
     272 00000f60     c001          jruc    tnpoinhr
     273                    
     274 00000f70           tnponormfire
     275 00000f70     1460          subk    3,a0
     276 00000f80           tnpoinhr
     277 00000f80     c452          jrlt    tnponothot                      ;Not enough?
     278                    
     279                    
     280                    
     281                    
     282                    
     283                    
     284                    
     285 00000f90     05a0          move    @ballpnumscored,a0
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE    7

         00000fa0 00000070- 
     286 00000fc0     4c02          move    a0,a2
     287 00000fd0     05a1          move    @ballpnum,a1
         00000fe0 00000030- 
     288 00001000     ce15          jrn     tnponoownr
     289                    
     290 00001010     05a3          move    @plyrnumonfire,a3
         00001020 00000000- 
     291 00001040     4823          cmp     a1,a3
     292 00001050     ca04          jrz     tnponxt
     293                            
     294 00001060     5663          clr     a3
     295 00001070     b06d          move    a3,*a13(ball_onfire)
         00001080     01a0  
     296 00001090     c041          jruc    tnponothot
     297 000010a0           tnponxt
     298                    
     299 000010a0     4801          cmp     a0,a1
     300 000010b0     cb3f          jrne    tnponothot
     301 000010c0     24a1          sll     5,a1
     302 000010d0     0b21          addi    plyrproc_t,a1
         000010e0 00000000! 
     303 00001100     8621          move    *a1,a1,L
     304 00001110     b421          move    *a1(plyr_seqflgs),a1
         00001120     0180  
     305 00001130     1fc1          btst    DUNK_B,a1
     306 00001140     cb29          jrnz    tnpohot2                        ;Dunking?
     307 00001150     c034          jruc    tnpohotf
     308 00001160           tnponoownr
     309 00001160     05a3          move    @plyrnumonfire,a3
         00001170 00000000- 
     310 00001190     05a1          move    @ballpnumlast,a1
         000011a0 00000040- 
     311 000011c0     2fe1          srl     1,a1
     312 000011d0     2fe3          srl     1,a3
     313 000011e0     4823          cmp     a1,a3
     314 000011f0     cb2b          jrnz    tnponothot
     315                            
     316 00001200     05a3          move    @plyrnumonfire,a3
         00001210 00000000- 
     317 00001230     05a1          move    @ballpnumshot,a1
         00001240 00000050- 
     318 00001260     4823          cmp     a1,a3
     319 00001270     ca16          jrz     tnpohot
     320 00001280     4801          cmp     a0,a1
     321 00001290     cb09          jrne    tnponota
     322 000012a0     07a4          move    @ballprcv_p,a4,L
         000012b0 000000e0- 
     323 000012d0     ca0e          jrz     tnpoahot
     324 000012e0     b484          move    *a4(plyr_num),a4
         000012f0     0100  
     325 00001300     4864          cmp     a3,a4
     326 00001310     ca19          jrz     tnponothot
     327 00001320     c00b          jruc    tnpohot
     328 00001330           tnponota
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE    8

     329 00001330     07a4          move    @ballprcv_p,a4,L
         00001340 000000e0- 
     330 00001360     ca14          jrz     tnponothot
     331 00001370     b484          move    *a4(plyr_num),a4
         00001380     0100  
     332 00001390     4864          cmp     a3,a4
     333 000013a0     cb03          jrnz    tnpohot
     334 000013b0     c00f          jruc    tnponothot
     335                    
     336 000013c0     4823  tnpoahot        cmp     a1,a3
     337 000013d0     cb0d          jrnz    tnponothot
     338                            
     339 000013e0           tnpohot
     340 000013e0           tnpohot2
     341 000013e0     05a0          move    @PCNT,a0
         000013f0 00000000! 
     342 00001410     27e0          sll     32-1,a0
     343 00001420     cb07          jrnz    tnpohotf
     344 00001430                   CREATE0 ball_smokepuff
     345 000014a0     182e  tnpohotf        movk    1,a14
     346 000014b0           tnponothot
     347                    
     348 000014b0     05a0          move    @plyrnumonfire,a0
         000014c0 00000000- 
     349 000014e0     cf24          jrnn    tnposkip
     350 000014f0     4c42          move    a2,a2
     351 00001500     ce1f          jrn     tnposkipsnd
     352                    
     353 00001510     05a0          move    @GAMSTATE,a0
         00001520 00000000! 
     354 00001540     0b40          cmpi    INAMODE,a0
         00001550     fffe  
     355 00001560     ca05          jrz     tnponoaud
     356 00001570     09c0          movi    AUD_NUMHOTSTRK,a0
         00001580     005a  
     357 00001590     0d5f          calla   AUD1
         000015a0 00000000! 
     358 000015c0           tnponoaud
     359                    
     360 000015c0     4c40          move    a2,a0
     361 000015d0     2460          sll     3,a0
     362 000015e0     0b20          addi    tnpobit_t,a0
         000015f0 00001800' 
     363 00001610     8e00          movb    *a0,a0
     364 00001620     05ae          move    @fire_flags,a14
         00001630 00000290- 
     365 00001650     540e          or      a0,a14
     366                    
     367 00001660     1880          movk    4,a0
     368 00001670     0580          move    a0,@ballnumscored
         00001680 00000080- 
     369                    
     370 000016a0     09e0          movi    onfire_snd,a0
         000016b0 000005c0' 
     371 000016d0     0d5f          calla   speech_playovrp
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE    9

         000016e0 00000000! 
     372                    
     373 00001700           tnposkipsnd
     374 00001700     0582          move    a2,@plyrnumonfire       ;Save pnum
         00001710 00000000- 
     375 00001730           tnposkip
     376 00001730     05a1          move    @ballpnum,a1
         00001740 00000030- 
     377 00001760     cf04          jrnn    tnpock1
     378 00001770     05a1          move    @ballpnumlast,a1
         00001780 00000040- 
     379 000017a0     ce02          jrn     tnpoclrball
     380 000017b0           tnpock1
     381 000017b0     4801          cmp     a0,a1
     382 000017c0     ca05          jrz     tnpofireit
     383                            
     384 000017d0           tnpoclrball
     385 000017d0     57ce          clr     a14
     386 000017e0     5600          clr     a0
     387 000017f0     c005          jruc    tnposetb
     388                    
     389 00001800       01  tnpobit_t       .byte   1,2,4,8
     390                    
     391 00001820     182e  tnpofireit      movk    1,a14
     392 00001830     09c0          movi    -1,a0
         00001840     ffff  
     393 00001850           tnposetb
     394 00001850     b1cd          move    a14,*a13(ball_onfire)
         00001860     01a0  
     395 00001870           tnpofsame
     396                    
     397                    
     398                    
     399 00001870     b506          move    *a8(OXPOS),a6
         00001880     0090  
     400 00001890     b5ae          move    *a13(ball_anix),a14
         000018a0     0100  
     401 000018b0     41c6          add     a14,a6
     402                    
     403 000018c0     b701          move    *a8(OXVEL),a1,L
         000018d0     0020  
     404 000018e0     ca15          jreq    tnpoxok
     405 000018f0     c709          jrgt    tnpoxvpos
     406                    
     407 00001900     0b46          cmpi    WRLDMID-345,a6
         00001910     e158  
     408 00001920     c511          jrge    tnpoxok
     409 00001930     09c6          movi    WRLDMID-345,a6
         00001940     1ea7  
     410 00001950     45c6          sub     a14,a6
     411 00001960     b0c8          move    a6,*a8(OXPOS)
         00001970     0090  
     412 00001980     c008          jruc    tnpobadx
     413                    
     414 00001990     0b46  tnpoxvpos       cmpi    WRLDMID+345,a6
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   10

         000019a0     dea6  
     415 000019b0     c408          jrlt    tnpoxok
     416 000019c0     09c6          movi    WRLDMID+345,a6
         000019d0     2159  
     417 000019e0     45c6          sub     a14,a6
     418 000019f0     b0c8          move    a6,*a8(OXPOS)
         00001a00     0090  
     419                    
     420 00001a10     5621  tnpobadx        clr     a1
     421 00001a20     b228          move    a1,*a8(OXVEL),L
         00001a30     0020  
     422 00001a40           tnpoxok
     423                    
     424                    
     425 00001a40     05a5          move    @ballpnum,a5
         00001a50 00000030- 
     426 00001a70     ce05          jrn     tnpofree
     427                    
     428 00001a80     57ce          clr     a14
     429 00001a90     058e          move    a14,@ballpasstime
         00001aa0 00000100- 
     430                    
     431 00001ac0     c00e          jruc    tnpoowned
     432                    
     433 00001ad0     07a5  tnpofree        move    @ballprcv_p,a5,L
         00001ae0 000000e0- 
     434 00001b00     cb02          jrnz    tnposkpcol                      ;Pass in progress?
     435                    
     436 00001b10     0d3f          callr   ball_bbcollision
         00001b20     03fd  
     437 00001b30           tnposkpcol
     438                    
     439 00001b30     05a0          move    @ballpasstime,a0
         00001b40 00000100- 
     440 00001b60     1020          addk    1,a0
     441 00001b70     0580          move    a0,@ballpasstime
         00001b80 00000100- 
     442 00001ba0     c004          jruc    tnposcroll
     443                    
     444 00001bb0           tnpoowned
     445 00001bb0     b5ae          move    *a13(ball_onfire),a14
         00001bc0     01a0  
     446 00001bd0     cb01          jrnz    tnposcroll                      ;On fire?
     447 00001be0     184a          movk    2,a10                   ;Keep ball from animating
     448                    
     449 00001bf0           tnposcroll
     450 00001bf0     05a0          move    @inbound,a0
         00001c00 00000130- 
     451 00001c20     ce15          jrn     tnponot_inbounding
     452 00001c30           tnpodunking
     453 00001c30     cb0a          jrnz    tnporight_side
     454 00001c40     09e3          movi    [WRLDMID-200-MAX_VIEW1,0],a3
         00001c50 1e020000  
     455 00001c70     09c0          movi    DIVS_RATE1,a0
         00001c80     2400  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   11

     456 00001c90     0580          move    a0,@scrl_divs_cur
         00001ca0 00000170- 
     457 00001cc0     c000          jruc    tnpodo_scroll
         00001cd0     00be  
     458 00001ce0           tnporight_side
     459 00001ce0     09e3          movi    [WRLDMID-200+MAX_VIEW1,0],a3
         00001cf0 206e0000  
     460 00001d10     09c0          movi    DIVS_RATE1,a0
         00001d20     2400  
     461 00001d30     0580          move    a0,@scrl_divs_cur
         00001d40 00000170- 
     462 00001d60     c000          jruc    tnpodo_scroll
         00001d70     00b4  
     463 00001d80           tnponot_inbounding
     464                    
     465                    
     466 00001d80     09c0          movi    DIVS_RATE2,a0           ;normal scroll divisor
         00001d90     0800  
     467 00001da0     0580          move    a0,@scrl_divs_dest
         00001db0 00000180- 
     468                    
     469 00001dd0     05a5          move    @ballpnum,a5
         00001de0 00000030- 
     470 00001e00     c528          jrge    tnpoplyr_has_ball
     471 00001e10     4cc3          move    a6,a3
     472                    
     473 00001e20     07a0          move    @ballprcv_p,a0,L        ;passing?
         00001e30 000000e0- 
     474 00001e50     ca14          jrz     tnponot_passing
     475                    
     476 00001e60     05a0          move    @ballpnumlast,a0        ;player who passed ball
         00001e70 00000040- 
     477 00001e90     ce10          jrn     tnponot_passing
     478                    
     479                    
     480 00001ea0     09c0          movi    DIVS_RATE3,a0
         00001eb0     0500  
     481 00001ec0     05a1          move    @plyrpasstype,a1
         00001ed0 00000000! 
     482 00001ef0     ca03          jrz     tnponot_turbo
     483 00001f00     0580          move    a0,@scrl_divs_cur
         00001f10 00000170- 
     484 00001f30           tnponot_turbo
     485 00001f30     0580          move    a0,@scrl_divs_dest
         00001f40 00000180- 
     486                    
     487 00001f60     05a5          move    @ballpnumlast,a5        ;player who passed ball
         00001f70 00000040- 
     488 00001f90     c01a          jruc    tnpoplyr_has_ball2
     489                    
     490 00001fa0           tnponot_passing
     491 00001fa0     05a5          move    @ballpnumlast,a5
         00001fb0 00000040- 
     492 00001fd0     cf16          jrnn    tnpoplyr_shooting
     493                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   12

     494 00001fe0     09c0          movi    -1,a0
         00001ff0     ffff  
     495 00002000     0580          move    a0,@cntl_team           ;team in control (0,1 or -1)
         00002010 00000150- 
     496 00002030     09c0          movi    DIVS_RATE1,a0
         00002040     2400  
     497 00002050     0580          move    a0,@scrl_divs_cur
         00002060 00000170- 
     498                    
     499 00002080     c039          jruc    tnpoball_free1
     500                    
     501                    
     502 00002090           tnpoplyr_has_ball
     503 00002090     4ca0          move    a5,a0
     504 000020a0     24a0          sll     5,a0                    ;*32
     505 000020b0     0b20          addi    plyrobj_t,a0
         000020c0 00000000! 
     506 000020e0     8600          move    *a0,a0,L
     507 000020f0     b403          move    *a0(OXPOS),a3
         00002100     0090  
     508 00002110     b401          move    *a0(OXANI+16),a1
         00002120     01f0  
     509 00002130     4023          add     a1,a3
     510 00002140           tnpoplyr_has_ball2
     511 00002140           tnpoplyr_shooting
     512 00002140     4ca0          move    a5,a0
     513 00002150     2fe0          srl     1,a0
     514 00002160     0580          move    a0,@cntl_team           ;team in control (0,1 or -1)
         00002170 00000150- 
     515 00002190     24a5          sll     5,a5
     516 000021a0     0b25          addi    plyrproc_t,a5
         000021b0 00000000! 
     517 000021d0     86a5          move    *a5,a5,L
     518 000021e0     b4a0          move    *a5(plyr_seqflgs),a0
         000021f0     0180  
     519 00002200     1fc0          btst    DUNK_B,a0
     520 00002210     ca07          jrz     tnponot_dunking
     521 00002220     05a0          move    @cntl_team,a0           ;team in control (0,1 or -1)
         00002230 00000150- 
     522 00002250     0bc0          xori    1,a0
         00002260 00000001  
     523 00002280     c09a          jruc    tnpodunking
     524 00002290           tnponot_dunking
     525                    
     526                    
     527 00002290           tnponot_hixvel
     528                    
     529                    
     530 00002290     05a1          move    @scrl_divs_cur,a1       ;move cur -> dest
         000022a0 00000170- 
     531 000022c0     05a2          move    @scrl_divs_dest,a2
         000022d0 00000180- 
     532 000022f0     4822          cmp     a1,a2                   ;dest-cur
     533 00002300     ca11          jreq    tnpoat_dest
     534 00002310     c707          jrgt    tnpoadd
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   13

     535 00002320     09c0          movi    DIVS_DELTA,a0
         00002330     0048  
     536 00002340     4401          sub     a0,a1
     537 00002350     4822          cmp     a1,a2
     538 00002360     c608          jrle    tnposet_divs
     539 00002370     4c41          move    a2,a1
     540 00002380     c006          jruc    tnposet_divs
     541 00002390           tnpoadd
     542 00002390     09c0          movi    DIVS_DELTA,a0
         000023a0     0048  
     543 000023b0     4001          add     a0,a1
     544 000023c0     4822          cmp     a1,a2
     545 000023d0     c501          jrge    tnposet_divs
     546 000023e0     4c41          move    a2,a1
     547 000023f0           tnposet_divs
     548 000023f0     0581          move    a1,@scrl_divs_cur
         00002400 00000170- 
     549 00002420           tnpoat_dest
     550                    
     551                    
     552                    
     553 00002420           tnpoball_free1
     554 00002420     2603          sll     16,a3                   ;[int,frac]
     555 00002430     0d03          subi    [200,0],a3
         00002440 ff37ffff  
     556                    
     557 00002460     05a0          move    @cntl_team,a0           ;team in control (0,1 or -1)
         00002470 00000150- 
     558 00002490     ce08          jrn     tnpoball_free
     559 000024a0     cb04          jrnz    tnpoteam2
     560 000024b0           tnpoteam1
     561 000024b0     0b23          addi    [SCRL_EDGE_OFF,0],a3
         000024c0 00640000  
     562 000024e0     c003          jruc    tnpocont1
     563 000024f0           tnpoteam2
     564 000024f0     0d03          subi    [SCRL_EDGE_OFF,0],a3
         00002500 ff9bffff  
     565 00002520           tnpocont1
     566 00002520           tnpoball_free
     567                    
     568 00002520     05a0          move    @cntl_team,a0
         00002530 00000150- 
     569 00002550     05a1          move    @cntl_team_last,a1
         00002560 00000160- 
     570 00002580     4801          cmp     a0,a1
     571 00002590     ca08          jreq    tnpono_turnover2
     572 000025a0     0580          move    a0,@cntl_team_last
         000025b0 00000160- 
     573 000025d0     09c0          movi    DIVS_RATE1,a0
         000025e0     2400  
     574 000025f0     0580          move    a0,@scrl_divs_cur
         00002600 00000170- 
     575 00002620           tnpono_turnover2
     576                    
     577                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   14

     578 00002620     0b63          cmpi    [WRLDMID-200-MAX_VIEW2,0],a3
         00002630 e1c4ffff  
     579 00002650     c511          jrge    tnposxok1
     580 00002660     09e3          movi    [WRLDMID-200-MAX_VIEW2,0],a3
         00002670 1e3b0000  
     581 00002690     05a0          move    @scrl_divs_cur,a0
         000026a0 00000170- 
     582 000026c0     0b40          cmpi    DIVS_RATE2,a0
         000026d0     f7ff  
     583 000026e0     c908          jrhs    tnposxok1
     584 000026f0     09c0          movi    DIVS_RATE2,a0
         00002700     0800  
     585 00002710     0580          move    a0,@scrl_divs_cur
         00002720 00000170- 
     586 00002740     0580          move    a0,@scrl_divs_dest
         00002750 00000180- 
     587 00002770           tnposxok1
     588 00002770     0b63          cmpi    [WRLDMID-200+MAX_VIEW2,0],a3
         00002780 dfcaffff  
     589 000027a0     c611          jrle    tnposxok2
     590 000027b0     09e3          movi    [WRLDMID-200+MAX_VIEW2,0],a3
         000027c0 20350000  
     591 000027e0     05a0          move    @scrl_divs_cur,a0
         000027f0 00000170- 
     592 00002810     0b40          cmpi    DIVS_RATE2,a0
         00002820     f7ff  
     593 00002830     c908          jrhs    tnposxok2
     594 00002840     09c0          movi    DIVS_RATE2,a0
         00002850     0800  
     595 00002860     0580          move    a0,@scrl_divs_cur
         00002870 00000170- 
     596 00002890     0580          move    a0,@scrl_divs_dest
         000028a0 00000180- 
     597 000028c0           tnposxok2
     598                    
     599                    
     600                    
     601 000028c0           tnpodo_scroll
     602 000028c0     05a7          move    @scrl_divs_cur,a7
         000028d0 00000170- 
     603 000028f0     07a1          move    @WORLDTLX,a1,L          ;>Scroll world view
         00002900 00000000! 
     604 00002920     4c25          move    a1,a5
     605 00002930     4465          sub     a3,a5
     606 00002940     ca2e          jreq    tnpono_scroll
     607 00002950     c40c          jrlt    tnposcroll_right
     608 00002960           tnposcroll_left
     609 00002960     0d05          subi    [SCROLL_BUFFER,0],a5
         00002970 fff7ffff  
     610 00002990     c629          jrle    tnpono_scroll
     611 000029a0     5ae5          divu    a7,a5                   ;/ divs rate x 256
     612 000029b0     2505          sll     8,a5                    ;x 256
     613 000029c0     44a1          sub     a5,a1
     614 000029d0     0b61          cmpi    [WRLDMID-200-MAX_VIEW1,0],a1
         000029e0 e1fdffff  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   15

     615 00002a00     c622          jrle    tnpono_scroll
     616 00002a10     c00c          jruc    tnposet_scroll
     617                    
     618 00002a20           tnposcroll_right
     619 00002a20     0385          abs     a5
     620 00002a30     0d05          subi    [SCROLL_BUFFER,0],a5
         00002a40 fff7ffff  
     621 00002a60     c61c          jrle    tnpono_scroll
     622 00002a70     5ae5          divu    a7,a5                   ;/ divs rate x 256
     623 00002a80     2505          sll     8,a5                    ;x 256
     624 00002a90     40a1          add     a5,a1
     625 00002aa0     0b61          cmpi    [WRLDMID-200+MAX_VIEW1,0],a1
         00002ab0 df91ffff  
     626 00002ad0     c515          jrge    tnpono_scroll
     627                    
     628 00002ae0           tnposet_scroll
     629 00002ae0     05a0          move    @inbound,a0
         00002af0 00000130- 
     630 00002b10     ce08          jrn     tnponoinb
     631                     
     632 00002b20     07a0          move    @WORLDTLX,a0,L
         00002b30 00000000! 
     633 00002b50     4420          sub     a1,a0
     634 00002b60     0380          abs     a0
     635 00002b70     0b40          cmpi    1000h,a0
         00002b80     efff  
     636 00002b90     c409          jrlt    tnpono_scroll
     637 00002ba0           tnponoinb
     638                    
     639 00002ba0     0781          move    a1,@WORLDTLX,L
         00002bb0 00000000! 
     640 00002bd0     0d01          subi    [WRLDMID-200,0],a1
         00002be0 e0c7ffff  
     641 00002c00     0781          move    a1,@gndx,L
         00002c10 00000000! 
     642 00002c30           tnpono_scroll
     643                    
     644                    
     645                    
     646                    
     647 00002c30     05a5          move    @ballpnum,a5            ;player who has ball (0-3 or -1)
         00002c40 00000030- 
     648 00002c60     b50e          move    *a8(OZPOS),a14          ;>Set world Y
         00002c70     00d0  
     649 00002c80     0bee          subi    GZBASE,a14              ;-Base
         00002c90     fc81  
     650 00002ca0     c501          jrge    tnpozok2
     651 00002cb0     57ce          clr     a14
     652 00002cc0     4dc2  tnpozok2        move    a14,a2
     653 00002cd0     2bee          sra     1,a14                   ;Z/2
     654 00002ce0     2ba2          sra     3,a2                    ;Z/8
     655 00002cf0     444e          sub     a2,a14                  ;=Z/2.667
     656                    
     657 00002d00     b501          move    *a8(OYPOS),a1
         00002d10     00b0  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   16

     658 00002d20     41c1          add     a14,a1
     659 00002d30     0b01          addi    70,a1
         00002d40     0046  
     660                    
     661 00002d50     4cae          move    a5,a14
     662 00002d60     ce1c          jrn     tnpobfree                       ;Free from plyr?
     663 00002d70     24ae          sll     5,a14                   ;x 32 bits
     664 00002d80     0b2e          addi    plyrproc_t,a14
         00002d90 00000000! 
     665 00002db0     87ce          move    *a14,a14,L
     666 00002dc0     b5c2          move    *a14(plyr_seqflgs),a2
         00002dd0     0180  
     667 00002de0     1fc2          btst    DUNK_B,a2
     668 00002df0     ca13          jrz     tnpobfree
     669                    
     670 00002e00     b5c2          move    *a14(plyr_seq),a2       ;Current ani sequence #
         00002e10     0170  
     671 00002e20     0b42          cmpi    DUNKU2_SEQ,a2           ;These dunks need different buffering
         00002e30     ff87  
     672 00002e40     c40c          jrlt    tnpo1stdunks
     673 00002e50     0b01          addi    25-70,a1
         00002e60     ffd3  
     674 00002e70     4c21          move    a1,a1
     675 00002e80     c401          jrlt    tnpobyvis0
     676 00002e90     5621          clr     a1
     677 00002ea0           tnpobyvis0
     678 00002ea0     05a2          move    @WORLDTLY+16,a2
         00002eb0 00000010! 
     679 00002ed0     4441          sub     a2,a1
     680 00002ee0     ca16          jreq    tnposkipwy
     681 00002ef0     2b81          sra     4,a1
     682 00002f00     c00b          jruc    tnposetwy
     683                    
     684 00002f10           tnpo1stdunks
     685 00002f10     0b01          addi    45-70,a1
         00002f20     ffe7  
     686                    
     687 00002f30           tnpobfree
     688 00002f30     4c21          move    a1,a1
     689 00002f40     c401          jrlt    tnpobyvis
     690 00002f50     5621          clr     a1
     691 00002f60           tnpobyvis
     692 00002f60     05a2          move    @WORLDTLY+16,a2
         00002f70 00000010! 
     693 00002f90     4441          sub     a2,a1
     694 00002fa0     ca0a          jreq    tnposkipwy
     695 00002fb0     2bc1          sra     2,a1
     696 00002fc0     cb01  tnposetwy       jrnz    tnpoadjok
     697 00002fd0     1021          addk    1,a1
     698 00002fe0     4022  tnpoadjok       add     a1,a2
     699 00002ff0     0b42          cmpi    -130,a2                 ;110 ;125,;135
         00003000     0081  
     700 00003010     c403          jrlt    tnposkipwy                      ;Don't scroll higher?
     701 00003020     0582          move    a2,@WORLDTLY+16
         00003030 00000010! 
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   17

     702 00003050           tnposkipwy
     703                    
     704                    
     705                    
     706                                                            ;0CHheck Z
     707 00003050     b500          move    *a8(OZPOS),a0
         00003060     00d0  
     708 00003070     4ca5          move    a5,a5
     709 00003080     c513          jrge    tnpozok                 ;Plyr has ball?
     710 00003090     b701          move    *a8(OZVEL),a1,L
         000030a0     0060  
     711 000030b0     ce06          jrn     tnpozvneg
     712                    
     713 000030c0     0b40          cmpi    GZMAX,a0                ;-12
         000030d0     fa92  
     714 000030e0     c40d          jrlt    tnpozok
     715 000030f0     09c0          movi    GZMAX,a0
         00003100     056d  
     716 00003110     c005          jruc    tnpozbad
     717                    
     718 00003120     0b40  tnpozvneg       cmpi    CZMIN,a0
         00003130     fc17  
     719 00003140     c507          jrge    tnpozok
     720 00003150     09c0          movi    CZMIN,a0
         00003160     03e8  
     721                    
     722 00003170     b008  tnpozbad        move    a0,*a8(OZPOS)
         00003180     00d0  
     723 00003190     5621          clr     a1
     724 000031a0     b228          move    a1,*a8(OZVEL),L
         000031b0     0060  
     725 000031c0           tnpozok
     726                    
     727 000031c0     0be0          subi    CZMIN,a0                ;-Base
         000031d0     fc17  
     728 000031e0     c501          jrge    tnpozge
     729 000031f0     5600          clr     a0
     730 00003200     2f60  tnpozge srl     5,a0                    ;/32
     731 00003210     b5a1          move    *a13(ball_zsznum),a1
         00003220     0160  
     732 00003230     4820          cmp     a1,a0
     733 00003240     ca26          jreq    tnpoani                 ;Same Z range?
     734 00003250     b00d          move    a0,*a13(ball_zsznum)
         00003260     0160  
     735 00003270     24a0          sll     5,a0                    ;*32
     736 00003280     4c01          move    a0,a1
     737 00003290     0b21          addi    tnposhad_t,a1           ;>Set new shadow img
         000032a0 00005570' 
     738 000032c0     8622          move    *a1,a2,L
     739 000032d0     b249          move    a2,*a9(OIMG),L
         000032e0     0170  
     740 000032f0     864e          move    *a2,a14,L
     741 00003300     b3c9          move    a14,*a9(OSIZE),L
         00003310     0130  
     742 00003320     ba49          move    *a2(ISAG),*a9(OSAG),L
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   18

         00003330     0040  
         00003340     0110  
     743 00003350     b441          move    *a2(IANIOFFY),a1
         00003360     0030  
     744 00003370     03a1          neg     a1
     745 00003380     b029          move    a1,*a9(OYPOS)
         00003390     00b0  
     746                    
     747 000033a0     b5ae          move    *a13(ball_onfire),a14
         000033b0     01a0  
     748 000033c0     cb07          jrnz    tnpoonfire
     749 000033d0     0b20          addi    tnpoani_t,a0
         000033e0 00003b00' 
     750 00003400     8600          move    *a0,a0,L
     751 00003410     b20d          move    a0,*a13(ball_ani1st_p),L
         00003420     0120  
     752 00003430     c01d          jruc    tnponewz
     753                    
     754 00003440           tnpoonfire
     755 00003440     0b20          addi    tnpoanif_t,a0
         00003450 000045b0' 
     756 00003470     8600          move    *a0,a0,L
     757 00003480     b20d          move    a0,*a13(ball_ani1st_p),L
         00003490     0120  
     758 000034a0     c016          jruc    tnponewz
     759                    
     760                    
     761 000034b0           tnpoani
     762 000034b0     0d8a          dsj     a10,tnposkipa
         000034c0     002f  
     763                     
     764 000034d0     b5ae          move    *a13(ball_onfire),a14
         000034e0     01a0  
     765 000034f0     cb0b          jrnz    tnpomovin                       ;On fire?
     766                    
     767 00003500     b700          move    *a8(OXVEL),a0,L
         00003510     0020  
     768 00003520     0380          abs     a0
     769 00003530     2fc0          srl     2,a0
     770 00003540     cb06          jrnz    tnpomovin
     771 00003550     18aa          movk    5,a10
     772 00003560     b700          move    *a8(OZVEL),a0,L
         00003570     0060  
     773 00003580     0380          abs     a0
     774 00003590     2fc0          srl     2,a0
     775 000035a0     ca21          jrz     tnposkipa
     776 000035b0           tnpomovin
     777                    
     778 000035b0     b7a0          move    *a13(ball_ani_p),a0,L
         000035c0     0140  
     779 000035d0     9601          move    *a0+,a1,L               ;*Next img
     780 000035e0     cb03          jrnz    tnponotend
     781                    
     782 000035f0     b7a0          move    *a13(ball_ani1st_p),a0,L
         00003600     0120  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   19

     783 00003610     9601  tnponewz        move    *a0+,a1,L               ;*1st img
     784                    
     785 00003620     940a  tnponotend      move    *a0+,a10
     786 00003630     b20d          move    a0,*a13(ball_ani_p),L
         00003640     0140  
     787                    
     788 00003650     b228          move    a1,*a8(OIMG),L          ;>Set new img
         00003660     0170  
     789 00003670     8622          move    *a1,a2,L
     790 00003680     b248          move    a2,*a8(OSIZE),L
         00003690     0130  
     791 000036a0     ba28          move    *a1(ISAG),*a8(OSAG),L
         000036b0     0040  
         000036c0     0110  
     792 000036d0     b422          move    *a1(IANIOFFX),a2
         000036e0     0020  
     793 000036f0     b82d          move    *a1(IANIOFFY),*a13(ball_aniy)
         00003700     0030  
         00003710     0110  
     794 00003720     b5a1          move    *a13(ball_anix),a1
         00003730     0100  
     795 00003740     b04d          move    a2,*a13(ball_anix)
         00003750     0100  
     796 00003760     b500          move    *a8(OXPOS),a0
         00003770     0090  
     797 00003780     4020          add     a1,a0                   ;Old ani X
     798 00003790     4440          sub     a2,a0                   ;-New ani X
     799 000037a0     b008          move    a0,*a8(OXPOS)
         000037b0     0090  
     800                    
     801 000037c0           tnposkipa
     802 000037c0     b702          move    *a8(OYVEL),a2,L
         000037d0     0040  
     803                    
     804 000037e0     b501          move    *a8(OYPOS),a1
         000037f0     00b0  
     805 00003800     b5a3          move    *a13(ball_aniy),a3
         00003810     0110  
     806 00003820     4061          add     a3,a1
     807 00003830     c414          jrlt    tnpoagnd                        ;Above gnd?
     808                    
     809 00003840     5600          clr     a0
     810 00003850     0d5f          calla   plyr_setshtdly
         00003860 00000000! 
     811                    
     812 00003880     0b42          cmpi    04000H,a2
         00003890     bfff  
     813 000038a0     c406          jrlt    tnponosnd
     814 000038b0     09e0          movi    bounce_snd,a0
         000038c0 00000140' 
     815 000038e0     0d5f          calla   snd_play1
         000038f0 00000000! 
     816                    
     817 00003910           tnponosnd
     818 00003910     03a3          neg     a3
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   20

     819 00003920     b068          move    a3,*a8(OYPOS)           ;Set on gnd
         00003930     00b0  
     820 00003940     03a2          neg     a2
     821 00003950     4c43          move    a2,a3                   ;75%
     822 00003960     2bc3          sra     2,a3                    ;/4
     823 00003970     4462          sub     a3,a2
     824 00003980     0b02  tnpoagnd        addi    GRAVB,a2
         00003990     2600  
     825 000039a0     b248          move    a2,*a8(OYVEL),L
         000039b0     0040  
     826 000039c0           tnponograv
     827 000039c0     bb09          move    *a8(OXVAL),*a9(OXVAL),L ;0AHlign shadow
         000039d0     0080  
         000039e0     0080  
     828 000039f0     bb09          move    *a8(OXANI),*a9(OXANI),L
         00003a00     01e0  
         00003a10     01e0  
     829 00003a20     b500          move    *a8(OZPOS),a0
         00003a30     00d0  
     830 00003a40     1540          subk    10,a0                   ;Adjust
     831 00003a50     b009          move    a0,*a9(OZPOS)
         00003a60     00d0  
     832                    
     833 00003a70     0d3f          callr   ball_chkpcollide
         00003a80     079f  
     834                    
     835 00003a90           tnpohalted
     836 00003a90                   SLOOP   1,tnpolp
     837                    
     838                    
     839 00003b00           tnpoani_t
     840 00003b00 00003f80'         .long   tnpob1_l
     841 00003b20 00003f80'         .long   tnpob1_l,tnpob2_l,tnpob2_l
     842 00003b80 000040e0'         .long   tnpob3_l,tnpob3_l,tnpob4_l,tnpob4_l
     843 00003c00 00004240'         .long   tnpob5_l,tnpob5_l,tnpob6_l,tnpob6_l
     844 00003c80 000043a0'         .long   tnpob7_l,tnpob7_l,tnpob8_l,tnpob8_l
     845 00003d00 00004500'         .long   tnpob9_l,tnpob9_l, tnpob9_l,tnpob9_l
     846 00003d80 00004500'         .long   tnpob9_l,tnpob9_l, tnpob9_l,tnpob9_l
     847 00003e00 00004500'         .long   tnpob9_l,tnpob9_l, tnpob9_l,tnpob9_l
     848 00003e80 00004500'         .long   tnpob9_l,tnpob9_l, tnpob9_l,tnpob9_l
     849 00003f00 00004500'         .long   tnpob9_l,tnpob9_l, tnpob9_l,tnpob9_l
     850                    
     851                            .asg    5,D
     852                    
     853 00003f80           tnpob1_l        LW      ball11,D
     854 00003fb0                   LW      ball12,D
     855 00003fe0                   LWL0    ball13,D
     856                    
     857 00004030           tnpob2_l        LW      ball21,D
     858 00004060                   LW      ball22,D
     859 00004090                   LWL0    ball23,D
     860                    
     861 000040e0           tnpob3_l        LW      ball31,D
     862 00004110                   LW      ball32,D
     863 00004140                   LWL0    ball33,D
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   21

     864                    
     865 00004190           tnpob4_l        LW      ball41,D
     866 000041c0                   LW      ball42,D
     867 000041f0                   LWL0    ball43,D
     868                    
     869 00004240           tnpob5_l        LW      ball51,D
     870 00004270                   LW      ball52,D
     871 000042a0                   LWL0    ball53,D
     872                    
     873 000042f0           tnpob6_l        LW      ball61,D
     874 00004320                   LW      ball62,D
     875 00004350                   LWL0    ball63,D
     876                    
     877 000043a0           tnpob7_l        LW      ball71,D
     878 000043d0                   LW      ball72,D
     879 00004400                   LWL0    ball73,D
     880                    
     881 00004450           tnpob8_l        LW      ball81,D
     882 00004480                   LW      ball82,D
     883 000044b0                   LWL0    ball83,D
     884                    
     885 00004500           tnpob9_l        LW      ball91,D
     886 00004530                   LW      ball92,D
     887 00004560                   LWL0    ball93,D
     888                    
     889                    
     890 000045b0           tnpoanif_t
     891 000045b0 00004a30'         .long   tnpobf1_l
     892 000045d0 00004a30'         .long   tnpobf1_l,tnpobf2_l,tnpobf2_l
     893 00004630 00004cb0'         .long   tnpobf3_l,tnpobf3_l,tnpobf4_l,tnpobf4_l
     894 000046b0 00004f30'         .long   tnpobf5_l,tnpobf5_l,tnpobf6_l,tnpobf6_l
     895 00004730 000051b0'         .long   tnpobf7_l,tnpobf7_l,tnpobf8_l,tnpobf8_l
     896 000047b0 00005430'         .long   tnpobf9_l,tnpobf9_l, tnpobf9_l,tnpobf9_l
     897 00004830 00005430'         .long   tnpobf9_l,tnpobf9_l, tnpobf9_l,tnpobf9_l
     898 000048b0 00005430'         .long   tnpobf9_l,tnpobf9_l, tnpobf9_l,tnpobf9_l
     899 00004930 00005430'         .long   tnpobf9_l,tnpobf9_l, tnpobf9_l,tnpobf9_l
     900 000049b0 00005430'         .long   tnpobf9_l,tnpobf9_l, tnpobf9_l,tnpobf9_l
     901                    
     902                            .asg    4,D
     903                    
     904 00004a30           tnpobf1_l       LW      ballf11,D
     905 00004a60                   LW      ballf12,D
     906 00004a90                   LW      ballf13,D
     907 00004ac0                   LW      ballf14,D
     908 00004af0                   LW      ballf15,D
     909 00004b20                   LWL0    ballf16,D
     910                    
     911 00004b70           tnpobf2_l       LW      ballf21,D
     912 00004ba0                   LW      ballf22,D
     913 00004bd0                   LW      ballf23,D
     914 00004c00                   LW      ballf24,D
     915 00004c30                   LW      ballf25,D
     916 00004c60                   LWL0    ballf26,D
     917                    
     918 00004cb0           tnpobf3_l       LW      ballf31,D
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   22

     919 00004ce0                   LW      ballf32,D
     920 00004d10                   LW      ballf33,D
     921 00004d40                   LW      ballf34,D
     922 00004d70                   LW      ballf35,D
     923 00004da0                   LWL0    ballf36,D
     924                    
     925 00004df0           tnpobf4_l       LW      ballf41,D
     926 00004e20                   LW      ballf42,D
     927 00004e50                   LW      ballf43,D
     928 00004e80                   LW      ballf44,D
     929 00004eb0                   LW      ballf45,D
     930 00004ee0                   LWL0    ballf46,D
     931                    
     932 00004f30           tnpobf5_l       LW      ballf51,D
     933 00004f60                   LW      ballf52,D
     934 00004f90                   LW      ballf53,D
     935 00004fc0                   LW      ballf54,D
     936 00004ff0                   LW      ballf55,D
     937 00005020                   LWL0    ballf56,D
     938                    
     939 00005070           tnpobf6_l       LW      ballf61,D
     940 000050a0                   LW      ballf62,D
     941 000050d0                   LW      ballf63,D
     942 00005100                   LW      ballf64,D
     943 00005130                   LW      ballf65,D
     944 00005160                   LWL0    ballf66,D
     945                    
     946 000051b0           tnpobf7_l       LW      ballf71,D
     947 000051e0                   LW      ballf72,D
     948 00005210                   LW      ballf73,D
     949 00005240                   LW      ballf74,D
     950 00005270                   LW      ballf75,D
     951 000052a0                   LWL0    ballf76,D
     952                    
     953 000052f0           tnpobf8_l       LW      ballf81,D
     954 00005320                   LW      ballf82,D
     955 00005350                   LW      ballf83,D
     956 00005380                   LW      ballf84,D
     957 000053b0                   LW      ballf85,D
     958 000053e0                   LWL0    ballf86,D
     959                    
     960 00005430           tnpobf9_l       LW      ballf91,D
     961 00005460                   LW      ballf92,D
     962 00005490                   LW      ballf93,D
     963 000054c0                   LW      ballf94,D
     964 000054f0                   LW      ballf95,D
     965 00005520                   LWL0    ballf96,D
     966                    
     967                    
     968                    
     969 00005570           tnposhad_t
     970 00005570 000002a0"         .long   ballshad8,ballshad8,ballshad7,ballshad7
     971 000055f0 000001c0"         .long   ballshad6,ballshad6,ballshad5,ballshad5
     972 00005670 00000150"         .long   ballshad4,ballshad4,ballshad3,ballshad3
     973 000056f0 00000070"         .long   ballshad2,ballshad2,ballshad1,ballshad1
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   23

     974 00005770 00000000"         .long   ballshad1,ballshad1,ballshad1,ballshad1
     975 000057f0 00000000"         .long   ballshad1,ballshad1,ballshad1,ballshad1
     976 00005870 00000000"         .long   ballshad1,ballshad1,ballshad1,ballshad1
     977                    
     978                    
     979                    
     980 000058f0            SUBRP  ball_getshadow
     981                    
     982 000058f0                   PUSH    a8
     983                    
     984 00005900     b700          move    *a8(OXVAL),a0,L
         00005910     0080  
     985 00005920     09e1          movi    [-2,0],a1
         00005930 fffe0000  
     986 00005950     09e2          movi    ballshad5,a2
         00005960 00000000! 
     987 00005980     b503          move    *a8(OZPOS),a3
         00005990     00d0  
     988 000059a0     1543          subk    10,a3                   ;Z
     989 000059b0     b504          move    *a8(OCTRL),a4
         000059c0     00f0  
     990 000059d0     0b84          andi    M_FLIPH|M_FLIPV,a4
         000059e0 ffffffcf  
     991 00005a00     0ba4          ori     DMAWNZ|M_3D|M_SHAD|M_NOCOLL,a4
         00005a10 00008b02  
     992 00005a30     09c5          movi    CLSDEAD,a5
         00005a40     2000  
     993 00005a50     56c6          clr     a6
     994 00005a60     56e7          clr     a7
     995 00005a70     0d5f          calla   BEGINOBJ2
         00005a80 00000000! 
     996 00005aa0     4d09          move    a8,a9
     997 00005ab0     1940          movk    10,a0
     998 00005ac0     b008          move    a0,*a8(OMISC)           ;Z offset
         00005ad0     0210  
     999                    
    1000 00005ae0                   PULL    a8
    1001 00005af0     0960          rets
    1002                    
    1003                    
    1004                    
    1005 00005b00            SUBRP  ball_bbcollision
    1006                    
    1007 00005b00                   PUSH    a2,a3,a4,a5,a6,a7,a9,a10,a11
    1008                    
    1009 00005b20     5652          clr     b2                      ;B2=Rim collision flag
    1010                    
    1011 00005b30     05ae          move    @shot_distance,a14
         00005b40 00000000! 
    1012 00005b60     0b4e          cmpi    0158H,a14
         00005b70     fea7  
    1013 00005b80     c41c          jrlt    rwbuok
    1014 00005b90     09c0          movi    200,a0
         00005ba0     00c8  
    1015                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   24

    1016 00005bb0     07a1          move    @game_time,a1,L
         00005bc0 00000000! 
    1017 00005be0     0b41          cmpi    0400H,a1
         00005bf0     fbff  
    1018 00005c00     c702          jrgt    rwbunohelp
    1019 00005c10     09c0          movi    350,a0
         00005c20     015e  
    1020 00005c30           rwbunohelp
    1021 00005c30     0d5f          calla   RNDPER
         00005c40 00000000! 
    1022 00005c60     c30e          jrhi    rwbuok
    1023 00005c70     09ea          movi    lhoopl_t,a10
         00005c80 00007c20' 
    1024 00005ca0     09d3          movi    HOOPLX,b3               ;B3=Hoop X
         00005cb0     1ec0  
    1025 00005cc0     0b46          cmpi    WRLDMID,a6
         00005cd0     dfff  
    1026 00005ce0     c413          jrlt    rwbuleft
    1027 00005cf0     09ea          movi    lhoopr_t,a10
         00005d00 00007ff0' 
    1028 00005d20     09d3          movi    HOOPRX,b3
         00005d30     2140  
    1029 00005d40     c00d          jruc    rwbuleft
    1030                    
    1031 00005d50           rwbuok
    1032 00005d50     09ea          movi    hoopl_t,a10
         00005d60 00007480' 
    1033 00005d80     09d3          movi    HOOPLX,b3               ;B3=Hoop X
         00005d90     1ec0  
    1034 00005da0     0b46          cmpi    WRLDMID,a6
         00005db0     dfff  
    1035 00005dc0     c405          jrlt    rwbuleft
    1036 00005dd0     09ea          movi    hoopr_t,a10
         00005de0 00007850' 
    1037 00005e00     09d3          movi    HOOPRX,b3
         00005e10     2140  
    1038 00005e20           rwbuleft
    1039 00005e20     b507          move    *a8(OYPOS),a7           ;A7=Ball Y
         00005e30     00b0  
    1040 00005e40     b50e          move    *a8(OSIZEY),a14
         00005e50     0140  
    1041 00005e60     2fee          srl     1,a14                   ;/2
    1042 00005e70     41c7          add     a14,a7                  ;Center Y
    1043 00005e80     0b47          cmpi    HOOPY+20,a7
         00005e90     0063  
    1044 00005ea0     c500          jrge    rwbux                   ;Under all collision points?
         00005eb0     0159  
    1045                    
    1046                    
    1047 00005ec0     05a0          move    @ballscorezhit,a0
         00005ed0 000000a0- 
    1048 00005ef0     c51a          jrge    rwbuchkpts                      ;Haven't scored?
    1049                    
    1050 00005f00     b700          move    *a8(OZVEL),a0,L         ;>Slow XZ vel
         00005f10     0060  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   25

    1051 00005f20     2be0          sra     1,a0
    1052 00005f30     b208          move    a0,*a8(OZVEL),L
         00005f40     0060  
    1053                    
    1054 00005f50     b700          move    *a8(OYVEL),a0,L         ;-1/4 Y
         00005f60     0040  
    1055 00005f70     4c0e          move    a0,a14
    1056 00005f80     2bce          sra     2,a14
    1057 00005f90     45c0          sub     a14,a0
    1058 00005fa0     b208          move    a0,*a8(OYVEL),L
         00005fb0     0040  
    1059                    
    1060                    
    1061 00005fc0     4cc0          move    a6,a0                   ;>Pull toward center
    1062 00005fd0     4e7e          move    b3,a14
    1063 00005fe0     45c0          sub     a14,a0
    1064 00005ff0     2580          sll     12,a0                   ;/16
    1065                    
    1066 00006000     b701          move    *a8(OXVEL),a1,L
         00006010     0020  
    1067 00006020     4401          sub     a0,a1
    1068 00006030     4c2e          move    a1,a14
    1069 00006040     2bce          sra     2,a14                   ;/4
    1070 00006050     45c1          sub     a14,a1
    1071 00006060     b228          move    a1,*a8(OXVEL),L
         00006070     0020  
    1072                    
    1073 00006080     c000          jruc    rwbuchkbb
         00006090     00fc  
    1074                    
    1075                    
    1076 000060a0           rwbuchkpts
    1077 000060a0     b505          move    *a8(OZPOS),a5           ;A5=Ball Z
         000060b0     00d0  
    1078 000060c0     c000          jruc    rwbunxt
         000060d0     00bc  
    1079                    
    1080                    
    1081 000060e0     9543  rwbulp  move    *a10+,a3                ;Y
    1082 000060f0     9544          move    *a10+,a4                ;Z
    1083 00006100     954b          move    *a10+,a11               ;Mode
    1084 00006110     44c2          sub     a6,a2
    1085 00006120     44e3          sub     a7,a3
    1086 00006130     44a4          sub     a5,a4
    1087 00006140     0382          abs     a2
    1088 00006150     0383          abs     a3
    1089 00006160     0384          abs     a4
    1090                    
    1091 00006170     4862          cmp     a3,a2                   ;>Sort A2-A4 large to sml
    1092 00006180     c503          jrge    rwbu20
    1093 00006190                   SWAP    a2,a3
    1094                    
    1095 000061c0     4883  rwbu20  cmp     a4,a3
    1096 000061d0     c508          jrge    rwbusorted
    1097 000061e0                   SWAP    a3,a4
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   26

    1098                    
    1099 00006210     4862          cmp     a3,a2
    1100 00006220     c503          jrge    rwbusorted
    1101 00006230                   SWAP    a2,a3
    1102                    
    1103 00006260     2fe3  rwbusorted      srl     1,a3                    ;/2
    1104 00006270     2fc4          srl     2,a4                    ;/4
    1105 00006280     4062          add     a3,a2
    1106 00006290     4082          add     a4,a2
    1107 000062a0     14a2          subk    5,a2
    1108 000062b0     c700          jrgt    rwbunxt                 ;Too far?
         000062c0     009d  
    1109                    
    1110                    
    1111 000062d0     07a0          move    @sc_proc,a0,L
         000062e0 00000000! 
    1112 00006300     ca12          jrz     rwbuno24clock
    1113 00006310     57ce          clr     a14
    1114 00006320     0784          move    a4,@sc_proc,L
         00006330 00000000! 
    1115 00006350                   PUSH    a7,a10
    1116 00006370     09e7          movi    sclockx,a7
         00006380 00000000! 
    1117 000063a0     09c1          movi    clockid,a1
         000063b0     0084  
    1118 000063c0     b60a          move    *a0(PA10),a10,L
         000063d0     0080  
    1119 000063e0     0d5f          calla   XFERPROC
         000063f0 00000000! 
    1120 00006410                   PULL    a7,a10
    1121 00006430           rwbuno24clock
    1122                    
    1123 00006430     5600          clr     a0
    1124 00006440     0580          move    a0,@ballgoaltcnt
         00006450 00000110- 
    1125                    
    1126 00006470     09c0          movi    3*60+30,a0              ;Rebound stat can happen for next 3
         00006480     00d2  
    1127 00006490     0580          move    a0,@rebound_delay       ;seconds
         000064a0 00000000! 
    1128                    
    1129 000064c0     1900          movk    8,a0
    1130 000064d0     0580          move    a0,@ballsclastp         ;Nobody
         000064e0 00000060- 
    1131                    
    1132                    
    1133 00006500     4d6b          move    a11,a11
    1134 00006510     c676          jrle    rwbunotrim
    1135                                                            ;>Rim
    1136                    
    1137 00006520     05a0          move    @ballscorezhit,a0
         00006530 000000a0- 
    1138 00006550     ce74          jrn     rwbunxt                 ;Already scored?
    1139                     
    1140 00006560     05a0          move    @ballrimhitcnt,a0
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   27

         00006570 000000b0- 
    1141 00006590     cb17          jrnz    rwbuskipit
    1142                    
    1143 000065a0                   PUSH    a0,a7,a11
    1144                    
    1145 000065c0     05a0          move    @ballpnumshot,a0
         000065d0 00000050- 
    1146 000065f0     2480          sll     4,a0                    ;x 16
    1147 00006600     0b20          addi    brick_count,a0
         00006610 000001c0- 
    1148 00006630     8401          move    *a0,a1                  ;brick_count++
    1149 00006640     1021          inc     a1
    1150 00006650     8020          move    a1,*a0
    1151                    
    1152 00006660     4e7b          move    b3,a11                  ;hoop x
    1153 00006670                   CREATE  NOG_PID,no_good_check
    1154 000066f0                   PULL    a0,a7,a11
    1155 00006710           rwbuskipit
    1156 00006710     1020          addk    1,a0
    1157 00006720     0580          move    a0,@ballrimhitcnt
         00006730 000000b0- 
    1158                    
    1159 00006750     4c52          move    b2,b2
    1160 00006760     cb2f          jrnz    rwbunomv                        ;Hit already?
    1161 00006770     1032          addk    1,b2                    ;Set flag
    1162                    
    1163 00006780     0b4b          cmpi    3,a11
         00006790     fffc  
    1164 000067a0     c409          jrlt    rwbunobend
    1165                    
    1166 000067b0     5600          clr     a0                      ;>Make rim bend a little
    1167 000067c0     0b46          cmpi    WRLDMID,a6
         000067d0     dfff  
    1168 000067e0     c401          jrlt    rwbunetani
    1169 000067f0     1820          movk    1,a0
    1170 00006800     1881  rwbunetani      movk    4,a1
    1171 00006810     0d5f          calla   net_ani
         00006820 00000000! 
    1172                    
    1173 00006840           rwbunobend
    1174 00006840     05a0          move    @PCNT,a0
         00006850 00000000! 
    1175 00006870     27c0          sll     32-2,a0
    1176 00006880     2ce0          srl     32-2-5,a0
    1177 00006890     0b20          addi    rim_snds,a0
         000068a0 000083c0' 
    1178 000068c0     8600          move    *a0,a0,L
    1179 000068d0     0d5f          calla   snd_play1
         000068e0 00000000! 
    1180                    
    1181                    
    1182 00006900     4d01          move    a8,a1                   ;>Move back
    1183 00006910     0b01          addi    OXVAL,a1
         00006920     0080  
    1184 00006930     b700          move    *a8(OXVEL),a0,L
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   28

         00006940     0020  
    1185 00006950     8622          move    *a1,a2,L
    1186 00006960     4402          sub     a0,a2
    1187 00006970     9241          move    a2,*a1+,L
    1188 00006980     b700          move    *a8(OYVEL),a0,L
         00006990     0040  
    1189 000069a0     8623          move    *a1,a3,L
    1190 000069b0     4403          sub     a0,a3
    1191 000069c0     9261          move    a3,*a1+,L
    1192 000069d0     b700          move    *a8(OZVEL),a0,L
         000069e0     0060  
    1193 000069f0     8624          move    *a1,a4,L
    1194 00006a00     4404          sub     a0,a4
    1195 00006a10     9281          move    a4,*a1+,L
    1196                    
    1197 00006a20     b5a1          move    *a13(ball_collcnt),a1
         00006a30     0170  
    1198 00006a40     1461          subk    3,a1
    1199 00006a50     c51f          jrge    rwbuballstuck
    1200                    
    1201 00006a60           rwbunomv
    1202 00006a60     0bea          subi    16*4,a10
         00006a70     ffbf  
    1203 00006a80     9542          move    *a10+,a2
    1204 00006a90     9543          move    *a10+,a3
    1205 00006aa0     9544          move    *a10+,a4
    1206 00006ab0     120a          addk    16,a10
    1207 00006ac0     0d3f          callr   ball_deflect
         00006ad0     0196  
    1208                    
    1209 00006ae0     4c52          move    b2,b2
    1210 00006af0     cb1a          jrnz    rwbunxt                 ;Hit already?
    1211                    
    1212 00006b00     b5a1          move    *a13(ball_collcnt),a1
         00006b10     0170  
    1213 00006b20     cb17          jrnz    rwbunxt
    1214                    
    1215 00006b30     4d60          move    a11,a0                  ;0AbHsorb some vel
    1216 00006b40     15a0          subk    13,a0                   ;-12 to -9
    1217 00006b50     03a0          neg     a0
    1218 00006b60     4d01          move    a8,a1
    1219 00006b70     1001          addk    OXVEL,a1
    1220 00006b80     8623          move    *a1,a3,L
    1221 00006b90     5c03          mpys    a0,a3
    1222 00006ba0     2b63          sra     5,a3                    ;/32
    1223 00006bb0     9261          move    a3,*a1+,L
    1224 00006bc0     8623          move    *a1,a3,L
    1225 00006bd0     5c03          mpys    a0,a3
    1226 00006be0     2b63          sra     5,a3                    ;/32
    1227 00006bf0     9261          move    a3,*a1+,L
    1228 00006c00     8623          move    *a1,a3,L
    1229 00006c10     5c03          mpys    a0,a3
    1230 00006c20     2b63          sra     5,a3                    ;/32
    1231 00006c30     9261          move    a3,*a1+,L
    1232                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   29

    1233 00006c40     c005          jruc    rwbunxt
    1234                    
    1235                    
    1236 00006c50           rwbuballstuck
    1237 00006c50     0d3f          callr   ball_stuck
         00006c60     01e4  
    1238 00006c70     c005          jruc    rwbuskip
    1239                    
    1240 00006c80           rwbunotrim
    1241                    
    1242                    
    1243 00006c80     0d3f  rwbuscore       callr   ball_score              ;>Score if really a basket
         00006c90     0230  
    1244                    
    1245                    
    1246 00006ca0     9542  rwbunxt move    *a10+,a2                ;X
    1247 00006cb0     cb00          jrnz    rwbulp
         00006cc0     ff41  
    1248                    
    1249                    
    1250 00006cd0     5621  rwbuskip        clr     a1
    1251 00006ce0     4c52          move    b2,b2
    1252 00006cf0     ca03          jrz     rwbusvcol                       ;No rim collision?
    1253 00006d00     b5a1          move    *a13(ball_collcnt),a1
         00006d10     0170  
    1254 00006d20     1021          addk    1,a1
    1255 00006d30     b02d  rwbusvcol       move    a1,*a13(ball_collcnt)
         00006d40     0170  
    1256                    
    1257                    
    1258 00006d50     4c52          move    b2,b2
    1259 00006d60     ca2f          jrz     rwbuchkbb                       ;No rim collision?
    1260                    
    1261 00006d70     b702          move    *a8(OXVEL),a2,L         ;>Limit max XZvel
         00006d80     0020  
    1262 00006d90     b703          move    *a8(OZVEL),a3,L
         00006da0     0060  
    1263 00006db0     b704          move    *a8(OYVEL),a4,L
         00006dc0     0040  
    1264 00006dd0     4c40          move    a2,a0
    1265 00006de0     4c61          move    a3,a1
    1266 00006df0     0380          abs     a0
    1267 00006e00     0381          abs     a1
    1268 00006e10     4801          cmp     a0,a1
    1269 00006e20     c501          jrge    rwbua1big
    1270 00006e30     4c01          move    a0,a1
    1271 00006e40           rwbua1big
    1272 00006e40     0b61          cmpi    012000H,a1
         00006e50 fffedfff  
    1273 00006e70     c60e          jrle    rwbuchkyv                       ;XZ vel within max?
    1274                    
    1275 00006e80     4c8e          move    a4,a14
    1276 00006e90     2b0e          sra     8,a14
    1277                    
    1278 00006ea0     2fe1  rwbuscldlp      srl     1,a1                    ;Scale down
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   30

    1279 00006eb0     2be2          sra     1,a2
    1280 00006ec0     2be3          sra     1,a3
    1281 00006ed0     41c4          add     a14,a4                  ;+1/8
    1282 00006ee0     0b61  rwbustrtsc      cmpi    012000H,a1
         00006ef0 fffedfff  
    1283 00006f10     c7f8          jrgt    rwbuscldlp
    1284                    
    1285 00006f20     b248          move    a2,*a8(OXVEL),L
         00006f30     0020  
    1286 00006f40     b268          move    a3,*a8(OZVEL),L
         00006f50     0060  
    1287                    
    1288 00006f60     0b64  rwbuchkyv       cmpi    -044000H,a4
         00006f70 00043fff  
    1289 00006f90     c503          jrge    rwbuymaxok
    1290 00006fa0     09e4          movi    -044000H,a4
         00006fb0 fffbc000  
    1291 00006fd0     0b64  rwbuymaxok      cmpi    030000H,a4
         00006fe0 fffcffff  
    1292 00007000     c603          jrle    rwbuydnok
    1293 00007010     09e4          movi    030000H,a4
         00007020 00030000  
    1294 00007040     b288  rwbuydnok       move    a4,*a8(OYVEL),L
         00007050     0040  
    1295                    
    1296                    
    1297                    
    1298                    
    1299                    
    1300                    
    1301 00007060           rwbuchkbb
    1302 00007060     0be5          subi    CZMID,a5                ;0CHheck backboard
         00007070     fb6d  
    1303 00007080     0385          abs     a5
    1304 00007090     0b45          cmpi    34,a5
         000070a0     ffdd  
    1305 000070b0     c539          jrge    rwbux                   ;Z <> backboard Z?
    1306 000070c0     0be7          subi    HOOPY+5,a7
         000070d0     0072  
    1307 000070e0     c736          jrgt    rwbux                   ;Y<bottom?
    1308 000070f0     0b47          cmpi    -56,a7
         00007100     0037  
    1309 00007110     c433          jrlt    rwbux                   ;Y>top?
    1310                    
    1311 00007120     0be6          subi    WRLDMID,a6
         00007130     dfff  
    1312 00007140     4cc2          move    a6,a2
    1313 00007150     0386          abs     a6
    1314 00007160     0be6          subi    HOOPRX-WRLDMID+12,a6
         00007170     feb3  
    1315 00007180     c42c          jrlt    rwbux                   ;In front of backboard?
    1316                    
    1317 00007190     b700          move    *a8(OXVEL),a0,L
         000071a0     0020  
    1318 000071b0     0380          abs     a0
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   31

    1319 000071c0     4c42          move    a2,a2
    1320 000071d0     ce01          jrn     rwbulbb                 ;Left bb?
    1321 000071e0     03a0          neg     a0
    1322 000071f0     b208  rwbulbb move    a0,*a8(OXVEL),L
         00007200     0020  
    1323 00007210     b701          move    *a8(OXVAL),a1,L
         00007220     0080  
    1324 00007230     4001          add     a0,a1
    1325 00007240     4001          add     a0,a1
    1326 00007250     b228          move    a1,*a8(OXVAL),L
         00007260     0080  
    1327                    
    1328 00007270     0380          abs     a0
    1329 00007280     0b40          cmpi    01fffH,a0
         00007290     e000  
    1330 000072a0     c406          jrlt    rwbusoftbbhit           ;Soft?
    1331 000072b0     09e0          movi    hitbboard_snd,a0
         000072c0 00000300' 
    1332 000072e0     0d5f          calla   snd_play1
         000072f0 00000000! 
    1333 00007310           rwbusoftbbhit
    1334                         
    1335 00007310     05a0          move    @ballbbhitcnt,a0
         00007320 000000c0- 
    1336 00007340     1020          addk    1,a0
    1337 00007350     0580          move    a0,@ballbbhitcnt
         00007360 000000c0- 
    1338                    
    1339 00007380     14e0          subk    7,a0                    ;8
    1340 00007390     c40b          jrlt    rwbux                   ;!Stuck?
    1341 000073a0     09e0          movi    020000H,a0              ;20000
         000073b0 00020000  
    1342 000073d0     b501          move    *a8(OZPOS),a1
         000073e0     00d0  
    1343 000073f0     0b41          cmpi    CZMID,a1
         00007400     fb6d  
    1344 00007410     c701          jrgt    rwbunewzv
    1345 00007420     03a0          neg     a0
    1346 00007430           rwbunewzv
    1347 00007430     b208          move    a0,*a8(OZVEL),L         ;Try to unstick
         00007440     0060  
    1348                    
    1349 00007450           rwbux   PULL    a2,a3,a4,a5,a6,a7,a9,a10,a11
    1350 00007470     0960          rets
    1351                    
    1352                    
    1353                            .asg    HOOPLX,X
    1354                            .asg    HOOPY,Y
    1355                            .asg    Y+7,NY
    1356                            .asg    CZMID,Z
    1357 00007480     1eb8  hoopl_t .word   X-8     ,Y      ,Z      ,1      ;Rim
    1358 000074c0     1eba          .word   X-6     ,Y      ,Z-7    ,1
    1359 00007500     1ec0          .word   X       ,Y      ,Z-9    ,2
    1360 00007540     1ec6          .word   X+6     ,Y      ,Z-7    ,3
    1361 00007580     1ec8          .word   X+8     ,Y      ,Z      ,4
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   32

    1362 000075c0     1ec6          .word   X+6     ,Y      ,Z+7    ,3
    1363 00007600     1ec0          .word   X       ,Y      ,Z+9    ,2
    1364 00007640     1eba          .word   X-6     ,Y      ,Z+7    ,1
    1365 00007680     1ec0          .word   X       ,Y      ,Z      ,-1     ;Score spots
    1366 000076c0     1ec0          .word   X       ,Y+2    ,Z      ,-1
    1367 00007700     1ec0          .word   X       ,Y+6    ,Z      ,-2
    1368 00007740     1ebd          .word   X-3     ,Y+8    ,Z      ,-2
    1369 00007780     1ec0          .word   X       ,Y+8    ,Z-3    ,-2
    1370 000077c0     1ec3          .word   X+3     ,Y+8    ,Z      ,-2
    1371 00007800     1ec0          .word   X       ,Y+8    ,Z+3    ,-2
    1372 00007840     0000          .word   0
    1373                    
    1374                            .asg    HOOPRX,X
    1375 00007850     2138  hoopr_t .word   X-8     ,Y      ,Z      ,4
    1376 00007890     213a          .word   X-6     ,Y      ,Z-7    ,3
    1377 000078d0     2140          .word   X       ,Y      ,Z-9    ,2
    1378 00007910     2146          .word   X+6     ,Y      ,Z-7    ,1
    1379 00007950     2148          .word   X+8     ,Y      ,Z      ,1
    1380 00007990     2146          .word   X+6     ,Y      ,Z+7    ,1
    1381 000079d0     2140          .word   X       ,Y      ,Z+9    ,2
    1382 00007a10     213a          .word   X-6     ,Y      ,Z+7    ,3
    1383 00007a50     2140          .word   X       ,Y      ,Z      ,-1     ;Score spots
    1384 00007a90     2140          .word   X       ,Y+2    ,Z      ,-1
    1385 00007ad0     2140          .word   X       ,Y+6    ,Z      ,-2
    1386 00007b10     213d          .word   X-3     ,Y+8    ,Z      ,-2
    1387 00007b50     2140          .word   X       ,Y+8    ,Z-3    ,-2
    1388 00007b90     2143          .word   X+3     ,Y+8    ,Z      ,-2
    1389 00007bd0     2140          .word   X       ,Y+8    ,Z+3    ,-2
    1390 00007c10     0000          .word   0
    1391                    
    1392                            .asg    HOOPLX,X
    1393 00007c20           lhoopl_t
    1394 00007c20     1eb8          .word   X-8     ,Y      ,Z      ,1      ;Rim
    1395 00007c60     1eba          .word   X-6     ,Y      ,Z-7    ,1
    1396 00007ca0     1ec0          .word   X       ,Y      ,Z-9    ,2
    1397 00007ce0     1ec6          .word   X+6     ,Y      ,Z-7    ,3
    1398 00007d20     1ec8          .word   X+8     ,Y      ,Z      ,4
    1399 00007d60     1ec6          .word   X+6     ,Y      ,Z+7    ,3
    1400 00007da0     1ec0          .word   X       ,Y      ,Z+9    ,2
    1401 00007de0     1eba          .word   X-6     ,Y      ,Z+7    ,1
    1402 00007e20     1ec0          .word   X       ,Y      ,Z      ,1      ;Score spots
    1403 00007e60     1ec0          .word   X       ,Y+2    ,Z      ,2
    1404 00007ea0     1ec0          .word   X       ,Y+6    ,Z      ,3
    1405 00007ee0     1ebd          .word   X-3     ,Y+8    ,Z      ,4
    1406 00007f20     1ec0          .word   X       ,Y+8    ,Z-3    ,3
    1407 00007f60     1ec3          .word   X+3     ,Y+8    ,Z      ,2
    1408 00007fa0     1ec0          .word   X       ,Y+8    ,Z+3    ,1
    1409 00007fe0     0000          .word   0
    1410                    
    1411                            .asg    HOOPRX,X
    1412 00007ff0           lhoopr_t
    1413 00007ff0     2138          .word   X-8     ,Y      ,Z      ,4
    1414 00008030     213a          .word   X-6     ,Y      ,Z-7    ,3
    1415 00008070     2140          .word   X       ,Y      ,Z-9    ,2
    1416 000080b0     2146          .word   X+6     ,Y      ,Z-7    ,1
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   33

    1417 000080f0     2148          .word   X+8     ,Y      ,Z      ,1
    1418 00008130     2146          .word   X+6     ,Y      ,Z+7    ,1
    1419 00008170     2140          .word   X       ,Y      ,Z+9    ,2
    1420 000081b0     213a          .word   X-6     ,Y      ,Z+7    ,3
    1421 000081f0     2140          .word   X       ,Y      ,Z      ,1      ;Score spots
    1422 00008230     2140          .word   X       ,Y+2    ,Z      ,2
    1423 00008270     2140          .word   X       ,Y+6    ,Z      ,3
    1424 000082b0     213d          .word   X-3     ,Y+8    ,Z      ,4
    1425 000082f0     2140          .word   X       ,Y+8    ,Z-3    ,3
    1426 00008330     2143          .word   X+3     ,Y+8    ,Z      ,2
    1427 00008370     2140          .word   X       ,Y+8    ,Z+3    ,1
    1428 000083b0     0000          .word   0
    1429                    
    1430 000083c0           rim_snds
    1431 000083c0 00000200'         .long   miss_snd,miss_snd,miss2_snd,miss3_snd
    1432                    
    1433                    
    1434                    
    1435 00008440            SUBRP  ball_deflect
    1436                    
    1437 00008440                   PUSH    a5,a6,a7,a9,a10,a11
    1438                    
    1439 00008460     2482          sll     4,a2
    1440 00008470     2483          sll     4,a3
    1441 00008480     2484          sll     4,a4
    1442 00008490     2485          sll     4,a5
    1443 000084a0     2486          sll     4,a6
    1444 000084b0     2487          sll     4,a7
    1445                    
    1446 000084c0                   PUSH    a2,a3,a6,a7
    1447                    
    1448 000084e0     4cc0          move    a6,a0                   ;0DefHlect XZ
    1449 000084f0     4ca1          move    a5,a1
    1450 00008500     4c46          move    a2,a6
    1451 00008510     4c87          move    a4,a7
    1452 00008520     0d3f          callr   seekdir_xyxy128
         00008530     f7ac! 
    1453 00008540     4c0e          move    a0,a14
    1454 00008550     03a0          neg     a0
    1455 00008560     0b00          addi    080H,a0
         00008570     0080  
    1456 00008580     0d3f          callr   sinecos_get
         00008590     0245  
    1457                    
    1458 000085a0     b703          move    *a8(OXVEL),a3,L
         000085b0     0020  
    1459 000085c0     b709          move    *a8(OZVEL),a9,L
         000085d0     0060  
    1460                    
    1461 000085e0     4c65          move    a3,a5                   ;>Rotate to 0
    1462 000085f0     4d2b          move    a9,a11
    1463 00008600     5c23          mpys    a1,a3                   ;X*COS
    1464 00008610     5c0b          mpys    a0,a11                  ;Z*SIN
    1465 00008620     4563          sub     a11,a3                  ;X-Z
    1466 00008630     5c05          mpys    a0,a5                   ;X*SIN
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   34

    1467 00008640     5c29          mpys    a1,a9                   ;Z*COS
    1468 00008650     40a9          add     a5,a9                   ;X+Z
    1469 00008660     2a83          sra     12,a3
    1470 00008670     2a89          sra     12,a9
    1471                    
    1472 00008680     03a9          neg     a9                      ;Neg Z
    1473                    
    1474 00008690     4dc0          move    a14,a0
    1475 000086a0     0d3f          callr   sinecos_get
         000086b0     0233  
    1476                    
    1477 000086c0     4c65          move    a3,a5                   ;>Rotate back
    1478 000086d0     4d2b          move    a9,a11
    1479 000086e0     5c23          mpys    a1,a3                   ;X*COS
    1480 000086f0     5c0b          mpys    a0,a11                  ;Z*SIN
    1481 00008700     4563          sub     a11,a3                  ;X-Z
    1482 00008710     5c05          mpys    a0,a5                   ;X*SIN
    1483 00008720     5c29          mpys    a1,a9                   ;Z*COS
    1484 00008730     40a9          add     a5,a9                   ;X+Z
    1485 00008740     2a83          sra     12,a3
    1486 00008750     2a89          sra     12,a9
    1487                    
    1488 00008760     b268          move    a3,*a8(OXVEL),L
         00008770     0020  
    1489 00008780     b328          move    a9,*a8(OZVEL),L
         00008790     0060  
    1490                    
    1491 000087a0                   PULL    a2,a3,a6,a7
    1492                    
    1493 000087c0     4cc0          move    a6,a0                   ;0DefHlect XY
    1494 000087d0     4ce1          move    a7,a1
    1495 000087e0     4c46          move    a2,a6
    1496 000087f0     4c67          move    a3,a7
    1497 00008800     0d3f          callr   seekdir_xyxy128
         00008810     f77e! 
    1498 00008820     4c0e          move    a0,a14
    1499 00008830     03a0          neg     a0
    1500 00008840     0b00          addi    080H,a0
         00008850     0080  
    1501 00008860     0d3f          callr   sinecos_get
         00008870     0217  
    1502                    
    1503 00008880     b703          move    *a8(OXVEL),a3,L
         00008890     0020  
    1504 000088a0     b709          move    *a8(OYVEL),a9,L
         000088b0     0040  
    1505                    
    1506 000088c0     4c65          move    a3,a5                   ;>Rotate to 0
    1507 000088d0     4d2b          move    a9,a11
    1508 000088e0     5c23          mpys    a1,a3                   ;X*COS
    1509 000088f0     5c0b          mpys    a0,a11                  ;Z*SIN
    1510 00008900     4563          sub     a11,a3                  ;X-Z
    1511 00008910     5c05          mpys    a0,a5                   ;X*SIN
    1512 00008920     5c29          mpys    a1,a9                   ;Z*COS
    1513 00008930     40a9          add     a5,a9                   ;X+Z
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   35

    1514 00008940     2a83          sra     12,a3
    1515 00008950     2a89          sra     12,a9
    1516                    
    1517 00008960     03a9          neg     a9                      ;Neg Y
    1518                    
    1519 00008970     4dc0          move    a14,a0
    1520 00008980     0d3f          callr   sinecos_get
         00008990     0205  
    1521                    
    1522 000089a0     4c65          move    a3,a5                   ;>Rotate back
    1523 000089b0     4d2b          move    a9,a11
    1524 000089c0     5c23          mpys    a1,a3                   ;X*COS
    1525 000089d0     5c0b          mpys    a0,a11                  ;Z*SIN
    1526 000089e0     4563          sub     a11,a3                  ;X-Z
    1527 000089f0     5c05          mpys    a0,a5                   ;X*SIN
    1528 00008a00     5c29          mpys    a1,a9                   ;Z*COS
    1529 00008a10     40a9          add     a5,a9                   ;X+Z
    1530 00008a20     2a83          sra     12,a3
    1531 00008a30     2a89          sra     12,a9
    1532                    
    1533 00008a40     b268          move    a3,*a8(OXVEL),L
         00008a50     0020  
    1534 00008a60     b328          move    a9,*a8(OYVEL),L
         00008a70     0040  
    1535                    
    1536                    
    1537 00008a80                   PULL    a5,a6,a7,a9,a10,a11
    1538 00008aa0     0960          rets
    1539                    
    1540                    
    1541                    
    1542 00008ab0            SUBRP  ball_stuck
    1543                    
    1544 00008ab0                   PUSH    a6,a7
    1545                    
    1546 00008ad0     4e76          move    b3,a6                   ;>Give vel towards or away from center
    1547 00008ae0     09c7          movi    CZMID,a7
         00008af0     0492  
    1548 00008b00     0d3f          callr   seekdirdist_obxz128
         00008b10     f74e! 
    1549                    
    1550 00008b20     2fa0          srl     3,a0                    ;Dir 0-15
    1551 00008b30     2480          sll     4,a0                    ;*16
    1552 00008b40     0b20          addi    drcddx_t,a0
         00008b50 00008ea0' 
    1553 00008b70     8402          move    *a0,a2
    1554 00008b80     b403          move    *a0(drcddz_t-drcddx_t),a3
         00008b90     ffc0  
    1555 00008ba0     1541          subk    10,a1
    1556 00008bb0     c604          jrle    drcdtcent                       ;Towards center?
    1557 00008bc0     03a2          neg     a2
    1558 00008bd0     03a3          neg     a3
    1559 00008be0     2be2          sra     1,a2                    ;/2
    1560 00008bf0     2be3          sra     1,a3
    1561 00008c00           drcdtcent
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   36

    1562 00008c00     2462          sll     3,a2                    ;*8
    1563 00008c10     2463          sll     3,a3
    1564 00008c20     b248          move    a2,*a8(OXVEL),L
         00008c30     0020  
    1565 00008c40     b268          move    a3,*a8(OZVEL),L
         00008c50     0060  
    1566                    
    1567 00008c60     b700          move    *a8(OXVAL),a0,L
         00008c70     0080  
    1568 00008c80     4040          add     a2,a0
    1569 00008c90     b208          move    a0,*a8(OXVAL),L
         00008ca0     0080  
    1570 00008cb0     b700          move    *a8(OZVAL),a0,L
         00008cc0     00c0  
    1571 00008cd0     4060          add     a3,a0
    1572 00008ce0     b208          move    a0,*a8(OZVAL),L
         00008cf0     00c0  
    1573                    
    1574 00008d00     05ae          move    @HCOUNT,a14
         00008d10 c00001c0  
    1575 00008d30     1fee          btst    0,a14
    1576 00008d40     ca0b          jrz     drcdnoyvc                       ;Skip yvel change?
    1577                    
    1578 00008d50     09e1          movi    -GRAVB*7,a1
         00008d60 fffef600  
    1579 00008d80     b500          move    *a8(OYPOS),a0
         00008d90     00b0  
    1580 00008da0     0b40          cmpi    HOOPY+6,a0
         00008db0     0071  
    1581 00008dc0     c401          jrlt    drcdabv                 ;Ball above rim?
    1582 00008dd0     03a1          neg     a1
    1583 00008de0     b228  drcdabv move    a1,*a8(OYVEL),L
         00008df0     0040  
    1584                    
    1585 00008e00           drcdnoyvc
    1586 00008e00     5621          clr     a1
    1587 00008e10     b02d          move    a1,*a13(ball_collcnt)
         00008e20     0170  
    1588                    
    1589 00008e30                   PULL    a6,a7
    1590 00008e50     0960          rets
    1591                    
    1592                    
    1593 00008e60           drcddz_t
    1594 00008e60     c000          .word   -16384,-15137,-11585,-6270
    1595 00008ea0           drcddx_t
    1596 00008ea0     0000          .word   0,6270,11585,15137,16384,15137,11585,6270
    1597 00008f20     0000          .word   0,-6269,-11585,-15137, -16384,-15137,-11585,-6270
    1598                    
    1599                    
    1600                    
    1601 00008fa0            SUBRP  ball_score
    1602                    
    1603 00008fa0                   PUSH    a2,a3,a4,a5,a6,a7,a10,a11
    1604                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   37

    1605                    
    1606 00008fc0     b700          move    *a8(OYVEL),a0,L
         00008fd0     0040  
    1607 00008fe0     c600          jrle    jorwx                   ;Moving up?
         00008ff0     016c  
    1608                    
    1609 00009000     102b          addk    1,a11
    1610 00009010     cb06          jrne    jorwlow
    1611                    
    1612 00009020     1820          movk    1,a0                    ;Upper zone hit
    1613 00009030     0580          move    a0,@ballscorezhit
         00009040 000000a0- 
    1614 00009060     c000          jruc    jorwx
         00009070     0164  
    1615                    
    1616 00009080           jorwlow
    1617 00009080     05a0          move    @ballscorezhit,a0
         00009090 000000a0- 
    1618 000090b0     c600          jrle    jorwx                   ;No top hit?
         000090c0     015f  
    1619                    
    1620 000090d0     09c0          movi    -1,a0
         000090e0     ffff  
    1621 000090f0     0580          move    a0,@ballscorezhit
         00009100 000000a0- 
    1622                    
    1623 00009120     09c0          movi    NOG_PID,a0              ;kill no good process
         00009130     2600  
    1624 00009140     0d5f          calla   KIL1C
         00009150 00000000! 
    1625                    
    1626 00009170     05a1          move    @ballptsforshot,a1
         00009180 000000d0- 
    1627 000091a0     ca00          jrz     jorwx                   ;Goaltending?
         000091b0     0150  
    1628                    
    1629                    
    1630 000091c0     574a          clr     a10
    1631                    
    1632                    
    1633 000091d0     1a00          movk    16,a0                   ;Team 2
    1634 000091e0     5642          clr     a2
    1635 000091f0     b50e          move    *a8(OXPOS),a14
         00009200     0090  
    1636 00009210     0b4e          cmpi    WRLDMID,a14
         00009220     dfff  
    1637 00009230     c402          jrlt    jorwleft
    1638 00009240     5600          clr     a0                      ;Team 1
    1639 00009250     1802          movk    32,a2
    1640 00009260           jorwleft
    1641 00009260     0b20          addi    scores,a0               ;+Base
         00009270 00000000! 
    1642 00009290     05a1          move    @ballptsforshot,a1
         000092a0 000000d0- 
    1643 000092c0     4c23          move    a1,a3
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   38

    1644 000092d0     0d5f          calla   score_add
         000092e0 00000000! 
    1645                    
    1646 00009300     5600          clr     a0
    1647 00009310     0580          move    a0,@rebound_delay
         00009320 00000000! 
    1648                    
    1649 00009340     0d3f          callr   plyr_setptsdown
         00009350     0727  
    1650                    
    1651 00009360     1443          subk    2,a3
    1652 00009370     cb02          jrne    jorw3ptr
    1653 00009380     1820          movk    PS_2PTS_MADE,a0         ;>Inc made shot stat
    1654 00009390     c001          jruc    jorw2ptr
    1655 000093a0           jorw3ptr
    1656 000093a0     1860          movk    PS_3PTS_MADE,a0
    1657                    
    1658 000093b0     05a1  jorw2ptr        move    @ballpnumshot,a1
         000093c0 00000050- 
    1659 000093e0     0d5f          calla   inc_player_stat
         000093f0 00000000! 
    1660                    
    1661 00009410     0d5f          calla   prt_top_scores          ;Update scores at scrn top
         00009420 00000000! 
    1662                    
    1663 00009440                   CREATE0 score_showtvpanel
    1664                    
    1665 000094b0     4c4b          move    a2,a11
    1666                    
    1667                    
    1668 000094c0                   CREATE0 plyr_takeoutball
    1669                    
    1670                    
    1671                    
    1672 00009530     09c0          movi    TSEC*1,a0
         00009540     0035  
    1673 00009550     0d5f          calla   plyr_setshtdly
         00009560 00000000! 
    1674                    
    1675 00009580     09ea          movi    P1DATA,a10
         00009590 00000000! 
    1676 000095b0     0d5f          calla   stick_number
         000095c0 00000000! 
    1677 000095e0     09ea          movi    P2DATA,a10
         000095f0 00000000! 
    1678 00009610     0d5f          calla   stick_number
         00009620 00000000! 
    1679 00009640     09ea          movi    P3DATA,a10
         00009650 00000000! 
    1680 00009670     0d5f          calla   stick_number
         00009680 00000000! 
    1681 000096a0     09ea          movi    P4DATA,a10
         000096b0 00000000! 
    1682 000096d0     0d5f          calla   stick_number
         000096e0 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   39

    1683                    
    1684                                                            ;0DHo a net animation
    1685 00009700     05a0          move    @ballpnumshot,a0
         00009710 00000050- 
    1686 00009730     4c0e          move    a0,a14
    1687 00009740     248e          sll     4,a14                   ;x 16
    1688 00009750     0b2e          addi    brick_count,a14
         00009760 000001c0- 
    1689 00009780     5621          clr     a1
    1690 00009790     802e          move    a1,*a14
    1691                    
    1692 000097a0     09e3          movi    ballpnumscored,a3
         000097b0 00000070- 
    1693 000097d0     846e          move    *a3,a14
    1694 000097e0     480e          cmp     a0,a14
    1695 000097f0     ca1b          jreq    jorwsmpl                        ;Same guy?
    1696                    
    1697 00009800     1821          movk    1,a1                    ;1st
    1698 00009810     b464          move    *a3(16),a4              ;# times
         00009820     0010  
    1699                    
    1700                    
    1701 00009830     05a5          move    @fire_flags,a5
         00009840 00000290- 
    1702 00009860     4bc5          btst    a14,a5
    1703 00009870     ca03          jrz     jorwnormfire2
    1704 00009880     0b44          cmpi    4,a4
         00009890     fffb  
    1705 000098a0     c002          jruc    jorwnrmf2       
    1706                    
    1707 000098b0           jorwnormfire2
    1708 000098b0     0b44          cmpi    3,a4
         000098c0     fffc  
    1709 000098d0           jorwnrmf2       
    1710                    
    1711 000098d0     c419          jrlt    jorwdiffpl                      ;Last guy not hot?
    1712                    
    1713 000098e0     4c04          move    a0,a4
    1714 000098f0     2fe4          srl     1,a4
    1715 00009900     2fee          srl     1,a14
    1716 00009910     488e          cmp     a4,a14
    1717 00009920     ca16          jrz     jorwnochg                       ;Different team?
    1718 00009930     b023          move    a1,*a3(16)
         00009940     0010  
    1719 00009950     09c1          movi    -1,a1
         00009960     ffff  
    1720 00009970     0581          move    a1,@plyrnumonfire
         00009980 00000000- 
    1721 000099a0     c00e          jruc    jorwnochg                       ;Don't messup teammate
    1722                    
    1723 000099b0           jorwsmpl
    1724 000099b0     b461          move    *a3(16),a1              ;# times
         000099c0     0010  
    1725 000099d0     1021          addk    1,a1
    1726 000099e0     0b41          cmpi    8,a1                    ;7
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   40

         000099f0     fff7  
    1727 00009a00     c406          jrlt    jorwdiffpl
    1728 00009a10     09c1          movi    -1,a1
         00009a20     ffff  
    1729 00009a30     0581          move    a1,@plyrnumonfire       ;Cap out on fire capability
         00009a40 00000000- 
    1730 00009a60     1821          movk    1,a1
    1731 00009a70     b023  jorwdiffpl      move    a1,*a3(16)
         00009a80     0010  
    1732 00009a90           jorwnochg
    1733 00009a90     8003          move    a0,*a3
    1734                    
    1735 00009aa0     24a0          sll     5,a0                    ;*32
    1736 00009ab0     0b20          addi    plyrproc_t,a0
         00009ac0 00000000! 
    1737 00009ae0     860a          move    *a0,a10,L
    1738 00009af0     b546          move    *a10(plyr_seqflgs),a6
         00009b00     0180  
    1739                    
    1740 00009b10     4c40          move    a2,a0
    1741 00009b20     1821          movk    1,a1                    ;Bend from dunk
    1742                    
    1743 00009b30     09eb          movi    dunk_snd,a11            ;Sound for dunk
         00009b40 000001c0' 
    1744 00009b60     1fc6          btst    DUNK_B,a6
    1745 00009b70     cb19          jrnz    jorwneta
    1746                    
    1747 00009b80                   CREATE0 plyr_jscrowdsnd         ;For good jump shot
    1748                    
    1749 00009bf0     09eb          movi    swish_snd,a11           ;Sound for swish
         00009c00 00000180' 
    1750                    
    1751 00009c20     5621          clr     a1                      ;Normal swish
    1752 00009c30     b70e          move    *a8(OXVEL),a14,L
         00009c40     0020  
    1753 00009c50     2a2e          sra     15,a14
    1754 00009c60     4c40          move    a2,a0
    1755 00009c70     cb01          jrnz    jorwrnet
    1756 00009c80     03ae          neg     a14                     ;Reverse
    1757 00009c90     148e  jorwrnet        subk    4,a14
    1758 00009ca0     c401          jrlt    jorwxvsml
    1759 00009cb0     1861          movk    3,a1                    ;Angled swish
    1760 00009cc0           jorwxvsml
    1761 00009cc0     b50e          move    *a8(OYVEL+16),a14
         00009cd0     0050  
    1762 00009ce0     144e          subk    2,a14
    1763 00009cf0     c501          jrge    jorwyvlrg
    1764 00009d00     5621          clr     a1
    1765 00009d10           jorwyvlrg
    1766 00009d10           jorwneta
    1767 00009d10     b464          move    *a3(16),a4              ;# times
         00009d20     0010  
    1768 00009d30     05ae          move    @ballpnumscored,a14
         00009d40 00000070- 
    1769 00009d60     05a2          move    @fire_flags,a2
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   41

         00009d70 00000290- 
    1770 00009d90     4bc2          btst    a14,a2
    1771 00009da0     ca03          jrz     jorwnor2
    1772 00009db0     0b44          cmpi    4,a4
         00009dc0     fffb  
    1773 00009dd0     c002          jruc    jorwnor3
    1774                    
    1775 00009de0           jorwnor2
    1776 00009de0     0b44          cmpi    3,a4
         00009df0     fffc  
    1777 00009e00           jorwnor3
    1778                    
    1779                    
    1780                    
    1781                    
    1782 00009e00     c401          jrlt    jorwnothot
    1783 00009e10     18c1          movk    6,a1                    ;Burn net
    1784 00009e20           jorwnothot
    1785 00009e20     0d5f          calla   net_ani
         00009e30 00000000! 
    1786                    
    1787 00009e50     4d60          move    a11,a0
    1788 00009e60     0d5f          calla   snd_play1               ;Net sound
         00009e70 00000000! 
    1789                    
    1790                    
    1791                    
    1792                    
    1793 00009e90     b700          move    *a8(OXVEL),a0,L         ;>Slow XZ vel
         00009ea0     0020  
    1794 00009eb0     2be0          sra     1,a0
    1795 00009ec0     b208          move    a0,*a8(OXVEL),L
         00009ed0     0020  
    1796 00009ee0     b700          move    *a8(OZVEL),a0,L
         00009ef0     0060  
    1797 00009f00     2be0          sra     1,a0
    1798 00009f10     b208          move    a0,*a8(OZVEL),L
         00009f20     0060  
    1799                    
    1800                    
    1801 00009f30     1fc6          btst    DUNK_B,a6
    1802 00009f40     ca74          jrz     jorwnoshake             ;!dunk?
    1803 00009f50     1e06          btst    LAYUP_B,a6
    1804 00009f60     cb72          jrnz    jorwnoshake             ;!dunk?
    1805                    
    1806 00009f70     18a0          movk    PS_DUNKS_MADE,a0
    1807 00009f80     05a1          move    @ballpnumshot,a1
         00009f90 00000050- 
    1808 00009fb0     4c22          move    a1,a2
    1809 00009fc0     0d5f          calla   inc_player_stat
         00009fd0 00000000! 
    1810 00009ff0     2fe2          srl     1,a2                    ;0-1
    1811 0000a000     4c43          move    a2,a3
    1812 0000a010                   XORK    1,a2
    1813 0000a030     0582          move    a2,@inbound             ;Inbounding team (0-1)
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   42

         0000a040 00000130- 
    1814                    
    1815 0000a060     2483          sll     4,a3                    ;*16
    1816 0000a070     0b23          addi    t1dunkcnt,a3
         0000a080 000001a0- 
    1817 0000a0a0     8460          move    *a3,a0
    1818 0000a0b0     1020          addk    1,a0
    1819 0000a0c0     c957          jrnc    jorwnoshat                      ;No overflow?
    1820                    
    1821 0000a0d0     b540          move    *a10(plyr_seq),a0
         0000a0e0     0170  
    1822 0000a0f0     09e1          movi    jorwdunk_t,a1
         0000a100 0000a6f0' 
    1823 0000a120     942e  jorwdlp move    *a1+,a14
    1824 0000a130     ce51          jrn     jorwnoshat2             ;End of table?
    1825 0000a140     49c0          cmp     a14,a0
    1826 0000a150     cbfc          jrne    jorwdlp                 ;Wimpy dunk?
    1827                    
    1828 0000a160     05a0          move    @PSTATUS,a0             ;Plyr start bits 0-3
         0000a170 00000000! 
    1829 0000a190     05a1          move    @ballpnumshot,a1
         0000a1a0 00000050- 
    1830 0000a1c0     4a20          btst    a1,a0
    1831 0000a1d0     ca47          jrz     jorwnoshat2             ;Drone?
    1832                    
    1833                    
    1834 0000a1e0     05a0          move    @bbshatter,a0           ;Already happened
         0000a1f0 00000140- 
    1835 0000a210     cb43          jrnz    jorwnoshat2
    1836                    
    1837 0000a220     c042          jruc    jorwnoshat2             ;THE NBA SUCKS!
    1838                    
    1839                            .ref    gmqrtr
    1840 0000a230     05a0          move    @gmqrtr,a0
         0000a240 00000000! 
    1841 0000a260     0b40          cmpi    3,a0
         0000a270     fffc  
    1842 0000a280     c43c          jrlt    jorwnoshat2
    1843                    
    1844 0000a290     b740          move    *a10(plyr_attrib_p),a0,L
         0000a2a0     0150  
    1845 0000a2b0     b400          move    *a0(PAT_DUNKSKILL),a0
         0000a2c0     0040  
    1846 0000a2d0     0b40          cmpi    9,a0
         0000a2e0     fff6  
    1847 0000a2f0     c435          jrlt    jorwnoshat2
    1848                    
    1849 0000a300     5600          clr     a0
    1850 0000a310     8003          move    a0,*a3                  ;Reset cnt
    1851 0000a320     0580          move    a0,@t1dunkcnt
         0000a330 000001a0- 
    1852 0000a350     0580          move    a0,@t2dunkcnt
         0000a360 000001b0- 
    1853                    
    1854 0000a380     1800          movk    32,a0
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   43

    1855 0000a390     0b41          cmpi    2,a1
         0000a3a0     fffd  
    1856 0000a3b0     c40b          jrlt    tm1
    1857 0000a3c0     07a1          move    @plyrproc_t,a1,L
         0000a3d0 00000000! 
    1858 0000a3f0     b001          move    a0,*a1(plyr_stagcnt)
         0000a400     0430  
    1859 0000a410     07a1          move    @plyrproc_t+32,a1,L
         0000a420 00000020! 
    1860 0000a440     b001          move    a0,*a1(plyr_stagcnt)
         0000a450     0430  
    1861 0000a460     c00a          jruc    jorwdoit
    1862 0000a470           tm1
    1863 0000a470     07a1          move    @plyrproc_t+64,a1,L
         0000a480 00000040! 
    1864 0000a4a0     b001          move    a0,*a1(plyr_stagcnt)
         0000a4b0     0430  
    1865 0000a4c0     07a1          move    @plyrproc_t+96,a1,L
         0000a4d0 00000060! 
    1866 0000a4f0     b001          move    a0,*a1(plyr_stagcnt)
         0000a500     0430  
    1867 0000a510           jorwdoit
    1868 0000a510                   CREATE0 board_shatter
    1869 0000a580     09c0          movi    HOOP_PID,a0
         0000a590     2300  
    1870 0000a5a0     0d5f          calla   KIL1C
         0000a5b0 00000000! 
    1871 0000a5d0     4c40          move    a2,a0
    1872 0000a5e0     18a1          movk    5,a1                    ;Big rim bend
    1873 0000a5f0     0d5f          calla   net_ani
         0000a600 00000000! 
    1874 0000a620     1a4a          movk    18,a10                  ;Big shake
    1875 0000a630     c002          jruc    jorwshake
    1876 0000a640           jorwnoshat
    1877 0000a640     8003          move    a0,*a3
    1878 0000a650           jorwnoshat2
    1879 0000a650     19ea          movk    15,a10
    1880 0000a660     0d5f  jorwshake       calla   SHAKER
         0000a670 00000000! 
    1881 0000a690           jorwnoshake
    1882                    
    1883                    
    1884                    
    1885 0000a690     0d5f          calla   scored_speech
         0000a6a0 00000000! 
    1886                    
    1887 0000a6c0           jorwx   PULL    a2,a3,a4,a5,a6,a7,a10,a11
    1888 0000a6e0     0960          rets
    1889                    
    1890 0000a6f0     0058  jorwdunk_t      .word   DUNKP_SEQ,DUNKA_SEQ,DUNKB_SEQ,DUNKC_SEQ,DUNKD_SEQ
    1891 0000a740     0045          .word   DUNKE_SEQ,DUNKE2_SEQ,DUNKD2_SEQ
    1892 0000a770     0050          .word   DUNKL_SEQ,DUNKL2_SEQ,DUNKL3_SEQ,DUNKL4_SEQ
    1893 0000a7b0     0059          .word   DUNKP2_SEQ
    1894 0000a7c0     005a          .word   DUNKP3_SEQ
    1895 0000a7d0     005f          .word   DUNKR_SEQ
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   44

    1896 0000a7e0     0060          .word   DUNKR2_SEQ
    1897 0000a7f0     0067          .word   DUNKT5_SEQ
    1898 0000a800     0078          .word   DUNKU2_SEQ
    1899 0000a810     0079          .word   DUNKU3_SEQ
    1900 0000a820     007a          .word   DUNKU4_SEQ
    1901 0000a830     007b          .word   DUNKU5_SEQ
    1902 0000a840     007c          .word   DUNKU6_SEQ
    1903 0000a850     007d          .word   DUNKX_SEQ
    1904 0000a860     007e          .word   DUNKX2_SEQ
    1905 0000a870     007f          .word   DUNKX3_SEQ
    1906 0000a880     006d          .word   DUNKY_SEQ
    1907 0000a890     006e          .word   DUNKY2_SEQ
    1908 0000a8a0     006f          .word   DUNKZ_SEQ
    1909 0000a8b0     0070          .word   DUNKZ2_SEQ
    1910 0000a8c0     0071          .word   DUNKZ3_SEQ
    1911 0000a8d0     0064          .word   DUNKT2_SEQ
    1912 0000a8e0     0065          .word   DUNKT3_SEQ
    1913 0000a8f0     0066          .word   DUNKT4_SEQ
    1914 0000a900     0063          .word   DUNKT_SEQ
    1915 0000a910     0077          .word   DUNKU_SEQ
    1916 0000a920     0047          .word   DUNKF_SEQ,DUNKJ_SEQ,DUNKO_SEQ
    1917 0000a950     004e          .word   DUNKK_SEQ,DUNKK2_SEQ,DUNKJ2_SEQ
    1918 0000a980     005b          .word   DUNKQ_SEQ
    1919 0000a990     005d          .word   DUNKQ3_SEQ
    1920 0000a9a0     0057          .word   DUNKO2_SEQ
    1921 0000a9b0     006c          .word   DUNKW3_SEQ
    1922 0000a9c0     006b          .word   DUNKW2_SEQ
    1923 0000a9d0     006a          .word   DUNKW_SEQ
    1924                    
    1925 0000a9e0     ffff          .word   -1
    1926                    
    1927                    
    1928                    
    1929 0000a9f0            SUBR   sinecos_get
    1930                    
    1931 0000a9f0     2720          sll     32-7,a0
    1932 0000aa00     2d60          srl     32-7-4,a0               ;*16
    1933 0000aa10     0b20          addi    sine_t,a0
         0000aa20 0000aa80' 
    1934 0000aa40     b401          move    *a0(cos_t-sine_t),a1
         0000aa50     0200  
    1935 0000aa60     8400          move    *a0,a0
    1936 0000aa70     0960          rets
    1937                    
    1938 0000aa80           sine_t
    1939 0000aa80     f000          .word   -4096,-4091,-4076,-4052,-4017,-3973,-3920,-3857
    1940 0000ab00     f138          .word   -3784,-3703,-3612,-3513,-3406,-3290,-3166,-3035
    1941 0000ab80     f4b0          .word   -2896,-2751,-2598,-2440,-2275,-2106,-1931,-1751
    1942 0000ac00     f9e1          .word   -1567,-1380,-1189,-995,-799,-601,-401,-201
    1943 0000ac80           cos_t
    1944 0000ac80     0000          .word   0,201,401,601,799,995,1189,1380
    1945 0000ad00     061f          .word   1567,1751,1931,2106,2275,2440,2598,2751
    1946 0000ad80     0b50          .word   2896,3035,3166,3290,3406,3513,3612,3703
    1947 0000ae00     0ec8          .word   3784,3857,3920,3973,4017,4052,4076,4091
    1948                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   45

    1949 0000ae80     1000          .word   4096,4091,4076,4052,4017,3973,3920,3857
    1950 0000af00     0ec8          .word   3784,3703,3612,3513,3406,3290,3166,3035
    1951 0000af80     0b50          .word   2896,2751,2598,2440,2275,2106,1931,1751
    1952 0000b000     061f          .word   1567,1380,1189,995,799,601,401,201
    1953                    
    1954 0000b080     0000          .word   0,-200,-401,-601,-799,-995,-1189,-1380
    1955 0000b100     f9e1          .word   -1567,-1751,-1931,-2105,-2275,-2440,-2598,-2750
    1956 0000b180     f4b0          .word   -2896,-3035,-3166,-3290,-3406,-3513,-3612,-3703
    1957 0000b200     f138          .word   -3784,-3857,-3920,-3973,-4017,-4052,-4076,-4091
    1958                    
    1959 0000b280     f000          .word   -4096,-4091,-4076,-4052,-4017,-3973,-3920,-3857
    1960 0000b300     f138          .word   -3784,-3703,-3612,-3513,-3406,-3290,-3166,-3035
    1961 0000b380     f4b0          .word   -2896,-2751,-2598,-2440,-2275,-2106,-1931,-1751
    1962 0000b400     f9e1          .word   -1567,-1380,-1189,-995,-799,-601,-401,-201
    1963                    
    1964                    
    1965                    
    1966                    
    1967 0000b480            SUBR   ball_chkpcollide
    1968                    
    1969 0000b480                   PUSH    a2,a3,a4,a5,a6,a7,a10,a11
    1970                    
    1971 0000b4a0     1887          movk    4,a7
    1972 0000b4b0     b504          move    *a8(OXPOS),a4
         0000b4c0     0090  
    1973 0000b4d0     b50e          move    *a8(OXANI+16),a14
         0000b4e0     01f0  
    1974 0000b4f0     41c4          add     a14,a4                  ;A4=Center X
    1975 0000b500     b506          move    *a8(OZPOS),a6           ;A6=Z
         0000b510     00d0  
    1976 0000b520     09e5          movi    plyrobj_t,a5
         0000b530 00000000! 
    1977                    
    1978 0000b550     1a4a          movk    18,a10                  ;A10=Z coll radius
    1979 0000b560     b500          move    *a8(OYPOS),a0
         0000b570     00b0  
    1980 0000b580     0b40          cmpi    -28,a0
         0000b590     001b  
    1981 0000b5a0     c409          jrlt    muwilp
    1982 0000b5b0     b700          move    *a8(OYVEL),a0,L
         0000b5c0     0040  
    1983 0000b5d0     0380          abs     a0
    1984 0000b5e0     0b60          cmpi    0c000H,a0
         0000b5f0 ffff3fff  
    1985 0000b610     c702          jrgt    muwilp
    1986 0000b620     09ca          movi    35,a10                  ;Larger radius
         0000b630     0023  
    1987                    
    1988 0000b640     96ab  muwilp  move    *a5+,a11,L
    1989                    
    1990 0000b650     b762          move    *a11(OPLINK),a2,L
         0000b660     01a0  
    1991 0000b670     b642          move    *a2(plyr_attrib_p),a2,L
         0000b680     0150  
    1992 0000b690     b442          move    *a2(PAT_DEFSKILL),a2
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   46

         0000b6a0     0050  
    1993 0000b6b0     2482          sll     4,a2
    1994 0000b6c0     164a          subk    18,a10
    1995 0000b6d0     ca04          jrz     muwitbl1
    1996 0000b6e0     0b22          addi    tbl2,a2
         0000b6f0 0000f580' 
    1997 0000b710     c003          jruc    muwitbo
    1998 0000b720           muwitbl1        
    1999 0000b720     0b22          addi    tbl1,a2
         0000b730 0000f4c0' 
    2000 0000b750     844a  muwitbo move    *a2,a10
    2001                    
    2002                    
    2003 0000b760     b562          move    *a11(OZPOS),a2          ;0CHhk Z
         0000b770     00d0  
    2004 0000b780     44c2          sub     a6,a2
    2005 0000b790     0382          abs     a2
    2006 0000b7a0     4542          sub     a10,a2
    2007 0000b7b0     c500          jrge    muwinxt
         0000b7c0     03ca  
    2008                    
    2009 0000b7d0     b561          move    *a11(OXPOS),a1          ;0CHhk box X
         0000b7e0     0090  
    2010 0000b7f0     b56e          move    *a11(OXANI+16),a14
         0000b800     01f0  
    2011 0000b810     41c1          add     a14,a1
    2012 0000b820     b56e          move    *a11(OSIZEX),a14
         0000b830     0130  
    2013 0000b840     2fee          srl     1,a14                   ;/2
    2014 0000b850     45c1          sub     a14,a1
    2015 0000b860     4824          cmp     a1,a4
    2016 0000b870     c600          jrle    muwinxt                 ;Center X <= lft?
         0000b880     03be  
    2017 0000b890     242e          sll     1,a14
    2018 0000b8a0     41c1          add     a14,a1
    2019 0000b8b0     4824          cmp     a1,a4
    2020 0000b8c0     c500          jrge    muwinxt                 ;Center X >= rgt?
         0000b8d0     03b9  
    2021                    
    2022 0000b8e0     b561          move    *a11(OYPOS),a1
         0000b8f0     00b0  
    2023 0000b900     b500          move    *a8(OYPOS),a0
         0000b910     00b0  
    2024 0000b920     1060          addk    3,a0
    2025 0000b930     b5ae          move    *a13(plyr_seq),a14
         0000b940     0170  
    2026 0000b950     0b4e          cmpi    RUNDRIBTURB_SEQ,a14
         0000b960     ffef  
    2027 0000b970     c30c          jrhi    muwihandhi                      ;Hand higher than shoulder?
    2028                    
    2029 0000b980     b76e          move    *a11(OPLINK),a14,L
         0000b990     01a0  
    2030 0000b9a0     b7ce          move    *a14(plyr_attrib_p),a14,L
         0000b9b0     0150  
    2031 0000b9c0     b5ce          move    *a14(PAT_DEFSKILL),a14
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   47

         0000b9d0     0050  
    2032 0000b9e0     248e          sll     4,a14
    2033 0000b9f0     0b2e          addi    tbl3,a14
         0000ba00 0000f640' 
    2034 0000ba20     85ce          move    *a14,a14
    2035 0000ba30     41c0          add     a14,a0
    2036                    
    2037                    
    2038 0000ba40     4820  muwihandhi      cmp     a1,a0
    2039 0000ba50     c400          jrlt    muwinxt                 ;Too hi?
         0000ba60     03a0  
    2040                    
    2041 0000ba70     b763          move    *a11(OPLINK),a3,L
         0000ba80     01a0  
    2042 0000ba90     b46e          move    *a3(plyr_shtdly),a14
         0000baa0     02b0  
    2043 0000bab0     c700          jrgt    muwinxt5                        ;Can't touch?
         0000bac0     0392  
    2044                    
    2045 0000bad0     05b0          move    @ballpnum,b0    ;a14
         0000bae0 00000030- 
    2046 0000bb00     ce55          jrn     muwiok
    2047                    
    2048                    
    2049 0000bb10     24b0          sll     5,b0            ;a14
    2050 0000bb20     0b30          addi    plyrproc_t,b0   ;a14
         0000bb30 00000000! 
    2051 0000bb50     8610          move    *b0,b0,L        ;a14,a14,L
    2052 0000bb60     4e1e          move    b0,a14
    2053 0000bb70     49c3          cmp     a14,a3
    2054 0000bb80     ca06          jrz     muwiskpz
    2055 0000bb90     b410          move    *b0(plyr_seqflgs),b0    ;a14    a6
         0000bba0     0180  
    2056 0000bbb0     1e10          btst    LAYUP_B,b0
    2057 0000bbc0     cb1f          jrnz    muwiguydunking
    2058 0000bbd0     1fd0          btst    DUNK_B,b0
    2059 0000bbe0     cb1d          jrnz    muwiguydunking
    2060 0000bbf0           muwiskpz
    2061 0000bbf0     b5ce          move    *a14(plyr_seq),a14
         0000bc00     0170  
    2062 0000bc10     0b4e          cmpi    SHOOT_SEQ,a14
         0000bc20     ffe8  
    2063 0000bc30     cb42          jrnz    muwiok
    2064 0000bc40     c000          jruc    muwinxt5
         0000bc50     0379  
    2065                    
    2066 0000bc60           takedunk_t
    2067 0000bc60     0000          .word   0,0,0,0,0,0,0,0,0,0,0,50,100,150,300,400,500,600,700,800,999,999
    2068                    
    2069 0000bdc0           muwiguydunking
    2070 0000bdc0                   PUSH    a0,a1
    2071                    
    2072 0000bde0     b5c0          move    *a14(plyr_num),a0
         0000bdf0     0100  
    2073 0000be00     05a1          move    @plyr_maxpower,a1
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   48

         0000be10 00000000! 
    2074 0000be30     4bc1          btst    a14,a1
    2075 0000be40     ca02          jrz     muwinochng
    2076 0000be50     1920          movk    9,a0
    2077 0000be60     c004          jruc    muwimaxp
    2078 0000be70           muwinochng
    2079 0000be70     b7ce          move    *a14(plyr_attrib_p),a14,L
         0000be80     0150  
    2080 0000be90     b5c0          move    *a14(PAT_POWER),a0              ;Guy trying to dunk ball
         0000bea0     0150  
    2081 0000beb0           muwimaxp
    2082                    
    2083                    
    2084                    
    2085 0000beb0     b76e          move    *a11(OPLINK),a14,L
         0000bec0     01a0  
    2086 0000bed0     b7ce          move    *a14(plyr_attrib_p),a14,L
         0000bee0     0150  
    2087 0000bef0     b5ce          move    *a14(PAT_POWER),a14             ;Guy trying to take ball
         0000bf00     0150  
    2088 0000bf10     0b4e          cmpi    3,a14
         0000bf20     fffc  
    2089 0000bf30     c60c          jrle    muwinxt0z                               ;3 power can't take ball!
    2090                    
    2091 0000bf40     45c0          sub     a14,a0                          ;a0=-10 thru 10
    2092 0000bf50     1140          addk    10,a0
    2093 0000bf60     2480          sll     4,a0
    2094 0000bf70     0b20          addi    takedunk_t,a0
         0000bf80 0000bc60' 
    2095 0000bfa0     8400          move    *a0,a0
    2096 0000bfb0     ca08          jrz     muwiok0
    2097 0000bfc0     0d5f          calla   RNDPER
         0000bfd0 00000000! 
    2098 0000bff0     c204          jrls    muwiok0
    2099 0000c000           muwinxt0z                                               ;3 power can't take ball!
    2100 0000c000                   PULL    a0,a1
    2101 0000c020     c000          jruc    muwinxt                         ;To big, don't lose ball!
         0000c030     0343  
    2102 0000c040           muwiok0
    2103 0000c040                   PULL    a0,a1
    2104 0000c060           muwiok
    2105 0000c060     b46e          move    *a3(plyr_jmpcnt),a14
         0000c070     0400  
    2106 0000c080     c608          jrle    muwiongnd
    2107 0000c090     b46e          move    *a3(plyr_aniy),a14
         0000c0a0     0420  
    2108 0000c0b0     41c1          add     a14,a1
    2109 0000c0c0     2bce          sra     2,a14                   ;/4
    2110 0000c0d0     45c1          sub     a14,a1                  ;75% down from top
    2111 0000c0e0     4820          cmp     a1,a0
    2112 0000c0f0     c500          jrge    muwinxt3                        ;Ball too low?
         0000c100     0332  
    2113 0000c110           muwiongnd
    2114                    
    2115 0000c110     b46e          move    *a3(plyr_seqflgs),a14
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   49

         0000c120     0180  
    2116 0000c130     1f2e          btst    BLOCKREB_B,a14
    2117 0000c140     ca00          jrz     muwinobr                        ;No?
         0000c150     01b0  
    2118                    
    2119 0000c160     10c2          addk    18-12,a2
    2120 0000c170     c500          jrge    muwinxt2                        ;Too far from Z?
         0000c180     0328  
    2121                                                            ;0CHhk box X
    2122 0000c190     b762          move    *a11(OIMG),a2,L
         0000c1a0     0170  
    2123 0000c1b0     b440          move    *a2(IANI2X),a0
         0000c1c0     0090  
    2124                    
    2125 0000c1d0     b56e          move    *a11(OCTRL),a14
         0000c1e0     00f0  
    2126 0000c1f0     1f6e          btst    B_FLIPH,a14
    2127 0000c200     ca04          jrz     muwinof                 ;No flip?
    2128                    
    2129 0000c210     8442          move    *a2,a2                  ;ISIZEX
    2130 0000c220     1422          subk    1,a2
    2131 0000c230     03a0          neg     a0
    2132 0000c240     4040          add     a2,a0                   ;+size
    2133 0000c250           muwinof
    2134 0000c250     b56e          move    *a11(OXPOS),a14
         0000c260     0090  
    2135 0000c270     41c0          add     a14,a0
    2136 0000c280     4480          sub     a4,a0
    2137 0000c290     0380          abs     a0
    2138                    
    2139 0000c2a0     b76e          move    *a11(OPLINK),a14,L
         0000c2b0     01a0  
    2140 0000c2c0     b7ce          move    *a14(plyr_attrib_p),a14,L
         0000c2d0     0150  
    2141 0000c2e0     b5ce          move    *a14(PAT_DEFSKILL),a14
         0000c2f0     0050  
    2142 0000c300     248e          sll     4,a14
    2143 0000c310     0b2e          addi    tbl4,a14
         0000c320 0000f700' 
    2144 0000c340     85ce          move    *a14,a14
    2145 0000c350     45c0          sub     a14,a0
    2146                    
    2147 0000c360     c500          jrge    muwinxt4                        ;Too far from X?
         0000c370     030d  
    2148                    
    2149                    
    2150 0000c380     05a1          move    @ballpnum,a1
         0000c390 00000030- 
    2151 0000c3b0     ce21          jrn     muwinoow                        ;No owner?
    2152 0000c3c0     b46e          move    *a3(plyr_num),a14
         0000c3d0     0100  
    2153 0000c3e0     482e          cmp     a1,a14
    2154 0000c3f0     ca00          jreq    muwinxt                 ;I own?
         0000c400     0306  
    2155                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   50

    2156 0000c410     2fe1          srl     1,a1
    2157 0000c420     2fee          srl     1,a14
    2158 0000c430     482e          cmp     a1,a14
    2159 0000c440     ca00          jreq    muwinxt                 ;Teammate owns?
         0000c450     0301  
    2160                    
    2161                    
    2162 0000c460     b460          move    *a3(plyr_num),a0
         0000c470     0100  
    2163 0000c480     05a1          move    @plyrnumonfire,a1
         0000c490 00000000- 
    2164 0000c4b0     4801          cmp     a0,a1
    2165 0000c4c0     ca10          jrz     muwinoow                        ;If on fire, don't miss as often
    2166                    
    2167 0000c4d0     b76e          move    *a11(OPLINK),a14,L
         0000c4e0     01a0  
    2168 0000c4f0     b7ce          move    *a14(plyr_attrib_p),a14,L
         0000c500     0150  
    2169 0000c510     b5ce          move    *a14(PAT_DEFSKILL),a14
         0000c520     0050  
    2170 0000c530     248e          sll     4,a14
    2171 0000c540     0b2e          addi    tbl5,a14
         0000c550 0000f7c0' 
    2172 0000c570     85c0          move    *a14,a0
    2173 0000c580     0d5f          calla   RNDPER
         0000c590 00000000! 
    2174 0000c5b0     c300          jrhi    muwinxt
         0000c5c0     02ea  
    2175                    
    2176                    
    2177 0000c5d0           muwinoow
    2178 0000c5d0                   PUSH    a7
    2179 0000c5e0                   CREATE0 fix_airb
    2180 0000c650                   PULL    a7
    2181                    
    2182                    
    2183 0000c660     07a2          move    @ballprcv_p,a2,L
         0000c670 000000e0- 
    2184 0000c690     4862          cmp     a3,a2
    2185 0000c6a0     ca00          jreq    muwircvok                       ;The receiver is touching it?
         0000c6b0     0298  
    2186                    
    2187                    
    2188 0000c6c0     05a0          move    @ballgoaltcnt,a0        ;0CHhk goaltending
         0000c6d0 00000110- 
    2189 0000c6f0     c662          jrle    muwiskipgt
    2190 0000c700     05a1          move    @ballpnumshot,a1
         0000c710 00000050- 
    2191 0000c730     b46e          move    *a3(plyr_num),a14
         0000c740     0100  
    2192 0000c750     2fe1          srl     1,a1
    2193 0000c760     2fee          srl     1,a14
    2194 0000c770     482e          cmp     a1,a14
    2195 0000c780     ca00          jreq    muwinxt                 ;Same team?
         0000c790     02cd  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   51

    2196                    
    2197 0000c7a0     b700          move    *a8(OYVEL),a0,L
         0000c7b0     0040  
    2198 0000c7c0     4c02          move    a0,a2
    2199 0000c7d0     2a40          sra     14,a0
    2200 0000c7e0     c63c          jrle    muwinogt
    2201                    
    2202 0000c7f0     b460          move    *a3(plyr_num),a0
         0000c800     0100  
    2203 0000c810     05a1          move    @plyrnumonfire,a1
         0000c820 00000000- 
    2204 0000c840     4801          cmp     a0,a1
    2205 0000c850     ca35          jrz     muwinogt
    2206                    
    2207 0000c860     b460          move    *a3(plyr_ptsdown),a0
         0000c870     0440  
    2208                    
    2209 0000c880     14a0          subk    5,a0
    2210 0000c890     c405          jrlt    muwinormgt                      ;I'm losing by 5?
    2211 0000c8a0     0b62          cmpi    [3,0000h],a2
         0000c8b0 fffcffff  
    2212 0000c8d0     c42d          jrlt    muwinogt
    2213 0000c8e0     c004          jruc    muwigt
    2214 0000c8f0           muwinormgt
    2215 0000c8f0     0b62          cmpi    [2,0000h],a2
         0000c900 fffdffff  
    2216 0000c920     c428          jrlt    muwinogt
    2217                    
    2218 0000c930           muwigt
    2219 0000c930     18c0          movk    6,a0
    2220 0000c940     0d5f          calla   rnd
         0000c950 00012540' 
    2221 0000c970     cb00          jrnz    muwinxt
         0000c980     02ae  
    2222                            
    2223 0000c990     05a0          move    @plyrairballoff,a0
         0000c9a0 00000000! 
    2224 0000c9c0     ce1e          jrn     muwinogt
    2225 0000c9d0     05a0          move    @shot_percentage,a0
         0000c9e0 00000000! 
    2226 0000ca00     ce1a          jrn     muwinogt
    2227                            
    2228                    
    2229 0000ca10     b460          move    *a3(plyr_num),a0
         0000ca20     0100  
    2230 0000ca30     2480          sll     4,a0                    ;Secret goaltend
    2231                            .ref    p1taps
    2232 0000ca40     0b20          addi    p1taps,a0
         0000ca50 00000000! 
    2233 0000ca70     8400          move    *a0,a0
    2234 0000ca80     0b40          cmpi    24,a0
         0000ca90     ffe7  
    2235 0000caa0     cb06          jrnz    muwinosec1
    2236                    
    2237 0000cab0     09c0          movi    700,a0                  ;Let this guy get away with GT
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   52

         0000cac0     02bc  
    2238 0000cad0     0d5f          calla   RNDPER
         0000cae0 00000000! 
    2239 0000cb00     c30a          jrhi    muwinogt
    2240                    
    2241                    
    2242 0000cb10           muwinosec1
    2243 0000cb10     4ce2          move    a7,a2
    2244 0000cb20                   CREATE0 plyr_goaltending        ;Pass A11
    2245 0000cb90     4c47          move    a2,a7
    2246 0000cba0     c017          jruc    muwiskipgt
    2247 0000cbb0           muwinogt
    2248 0000cbb0     18c0          movk    PS_BLOCKS,a0            ;It's a block
    2249 0000cbc0     b461          move    *a3(plyr_num),a1
         0000cbd0     0100  
    2250 0000cbe0     0d5f          calla   inc_player_stat
         0000cbf0 00000000! 
    2251                    
    2252 0000cc10     0d5f          calla   rejected_speech
         0000cc20 00000000! 
    2253                    
    2254 0000cc40     09e0          movi    steal_snd,a0
         0000cc50 00000500' 
    2255 0000cc70     0d5f          calla   snd_play1
         0000cc80 00000000! 
    2256 0000cca0                   PUSH    a7,a10
    2257 0000ccc0     4c6a          move    a3,a10
    2258 0000ccd0     0d5f          calla   arw_on1plyr             ;Guy who picks up ball gets arw
         0000cce0 00000000! 
    2259 0000cd00                   PULL    a7,a10
    2260                    
    2261 0000cd20           muwiskipgt
    2262                    
    2263 0000cd20     0d3f          callr   flash_ball
         0000cd30     02ff  
    2264 0000cd40     09e0          movi    cheer_snd,a0
         0000cd50 000003c0' 
    2265 0000cd70     0d5f          calla   snd_play1
         0000cd80 00000000! 
    2266 0000cda0     0d3f          callr   get_swat
         0000cdb0     02cc  
    2267                    
    2268 0000cdc0     b462          move    *a3(plyr_seq),a2
         0000cdd0     0170  
    2269 0000cde0     0b42          cmpi    REBOUND_SEQ,a2
         0000cdf0     ffeb  
    2270 0000ce00     ca03          jreq    muwiagiveball
    2271 0000ce10     0b42          cmpi    REBOUNDA_SEQ,a2
         0000ce20     ffea  
    2272 0000ce30     cb53          jrnz    muwifix
    2273                    
    2274                    
    2275 0000ce40           muwiagiveball
    2276 0000ce40                   PUSH    a3
    2277                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   53

    2278 0000ce50     05a0          move    @ballpnum,a0
         0000ce60 00000030- 
    2279 0000ce80     ce07          jrn     muwiballfree
    2280                    
    2281 0000ce90     09e0          movi    stealsb,a0              ;steals the ball
         0000cea0 00000080' 
    2282 0000cec0     0d5f          calla   snd_play1ovrp
         0000ced0 00000000! 
    2283                    
    2284 0000cef0     c03a          jruc    muwiskiprbnd
    2285 0000cf00           muwiballfree
    2286 0000cf00     05a0          move    @ballgoaltcnt,a0        ;0CHhk goaltending
         0000cf10 00000110- 
    2287 0000cf30     c736          jrgt    muwiskiprbnd
    2288 0000cf40     07a0          move    @ballprcv_p,a0,L
         0000cf50 000000e0- 
    2289 0000cf70     ca04          jrz     muwiisreb
    2290 0000cf80     0d5f          calla   intercepted_speech
         0000cf90 00000000! 
    2291 0000cfb0     c02e          jruc    muwiskiprbnd
    2292 0000cfc0           muwiisreb
    2293 0000cfc0     b46e          move    *a3(plyr_num),a14
         0000cfd0     0100  
    2294 0000cfe0     058e          move    a14,@ballpnum
         0000cff0 00000030- 
    2295 0000d010     5600          clr     a0
    2296 0000d020     b003          move    a0,*a3(plyr_dribmode)   ;Reset dribble
         0000d030     0210  
    2297                    
    2298 0000d040     05a0          move    @inbound,a0
         0000d050 00000130- 
    2299 0000d070     cf22          jrnn    muwiskiprbnd
    2300                    
    2301 0000d080     05a0          move    @gmqrtr,a0
         0000d090 00000000! 
    2302 0000d0b0     cb07          jrnz    muwiokr
    2303 0000d0c0     07a0          move    @game_time,a0,L
         0000d0d0 00000000! 
    2304 0000d0f0     0b60          cmpi    02050400H,a0
         0000d100 fdfafbff  
    2305 0000d120     c703          jrgt    muwinor
    2306                    
    2307 0000d130           muwiokr
    2308 0000d130     0d5f          calla   rebound_speech
         0000d140 00000000! 
    2309 0000d160           muwinor
    2310 0000d160     09c0          movi    80,a0
         0000d170     0050  
    2311 0000d180     0580          move    a0,@pushing_delay
         0000d190 00000000! 
    2312 0000d1b0     09c0          movi    15,a0
         0000d1c0     000f  
    2313 0000d1d0     0d5f          calla   plyr_setshtdly
         0000d1e0 00000000! 
    2314 0000d200                   PULL    a3
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   54

    2315                    
    2316 0000d210     c000          jruc    muwix
         0000d220     0226  
    2317                    
    2318 0000d230           fix_airb
    2319 0000d230     1820          movk    1,a0
    2320 0000d240     0580          move    a0,@plyrairballoff      ;Shut off eventual airball snd
         0000d250 00000000! 
    2321 0000d270                   DIE
    2322                    
    2323 0000d2a0           muwiskiprbnd
    2324 0000d2a0     09c0          movi    80,a0
         0000d2b0     0050  
    2325 0000d2c0     0580          move    a0,@pushing_delay
         0000d2d0 00000000! 
    2326 0000d2f0     09c0          movi    15,a0
         0000d300     000f  
    2327 0000d310     0d5f          calla   plyr_setshtdly
         0000d320 00000000! 
    2328 0000d340                   PULL    a3
    2329 0000d350     c000          jruc    muwigiveball
         0000d360     0132  
    2330 0000d370           muwifix
    2331 0000d370     1642          subk    BLOCKREJ_SEQ,a2
    2332 0000d380     ca6d          jreq    muwirej
    2333                    
    2334 0000d390     1860          movk    3,a0                    ;>Regular block
    2335 0000d3a0     0d3f          callr   rnd
         0000d3b0     0518  
    2336                    
    2337                    
    2338 0000d3c0     cb1e          jrnz    muwiglance_off
    2339                    
    2340 0000d3d0     09e0          movi    steal_snd,a0
         0000d3e0 00000500' 
    2341 0000d400     0d5f          calla   snd_play1
         0000d410 00000000! 
    2342 0000d430     09c0          movi    80,a0
         0000d440     0050  
    2343 0000d450     0580          move    a0,@pushing_delay
         0000d460 00000000! 
    2344 0000d480                   PUSH    a7,a10
    2345 0000d4a0     4c6a          move    a3,a10
    2346 0000d4b0     0d5f          calla   arw_on1plyr
         0000d4c0 00000000! 
    2347 0000d4e0                   PULL    a7,a10
    2348                    
    2349 0000d500     18c0          movk    PS_BLOCKS,a0            ;It's a block
    2350 0000d510     b461          move    *a3(plyr_num),a1
         0000d520     0100  
    2351 0000d530     0d5f          calla   inc_player_stat
         0000d540 00000000! 
    2352                     
    2353 0000d560     0d5f          calla   rejected_dnk_speech
         0000d570 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   55

    2354 0000d590     c000          jruc    muwigiveball
         0000d5a0     010e  
    2355                    
    2356 0000d5b0           muwiglance_off
    2357 0000d5b0                   PUSH    a3
    2358 0000d5c0     09c0          movi    15,a0
         0000d5d0     000f  
    2359 0000d5e0     0d5f          calla   plyr_setshtdly
         0000d5f0 00000000! 
    2360 0000d610                   PULL    a3
    2361                    
    2362 0000d620     05a0          move    @ballgoaltcnt,a0
         0000d630 00000110- 
    2363 0000d650     c723          jrgt    muwiablk
    2364                    
    2365                    
    2366 0000d660     b500          move    *a8(OYPOS),a0
         0000d670     00b0  
    2367 0000d680     13c0          addk    30,a0                   ;Not if ball near ground
    2368 0000d690     c700          jrgt    muwix
         0000d6a0     01de  
    2369                    
    2370 0000d6b0     b460          move    *a3(plyr_dir),a0
         0000d6c0     03d0  
    2371 0000d6d0     0d3f          callr   sinecos_get
         0000d6e0     fd30  
    2372 0000d6f0     24a0          sll     5,a0                    ;*32
    2373 0000d700     24a1          sll     5,a1
    2374 0000d710     b208          move    a0,*a8(OZVEL),L
         0000d720     0060  
    2375 0000d730     b228          move    a1,*a8(OXVEL),L
         0000d740     0020  
    2376                    
    2377 0000d750     09e1          movi    -GRAV*22,a1             ;Towards roof
         0000d760 fffcbc00  
    2378                    
    2379 0000d780     b228          move    a1,*a8(OYVEL),L
         0000d790     0040  
    2380                    
    2381 0000d7a0     05a0          move    @PCNT,a0
         0000d7b0 00000000! 
    2382 0000d7d0                   ANDK    7,a0
    2383 0000d7f0     cb00          jrnz    muwix
         0000d800     01c8  
    2384                    
    2385 0000d810     1b20          movk    25,a0
    2386 0000d820     b003          move    a0,*a3(plyr_shtdly)
         0000d830     02b0  
    2387 0000d840     0d5f          calla   rejected_dnk_speech
         0000d850 00000000! 
    2388                    
    2389 0000d870     c000          jruc    muwix
         0000d880     01c0  
    2390                    
    2391 0000d890           muwiablk
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   56

    2392 0000d890     5600          clr     a0
    2393 0000d8a0     0580          move    a0,@ballgoaltcnt
         0000d8b0 00000110- 
    2394                    
    2395                    
    2396 0000d8d0     09e1          movi    -GRAV*15,a1             ;Towards roof
         0000d8e0 fffdc600  
    2397 0000d900     b228          move    a1,*a8(OYVEL),L
         0000d910     0040  
    2398                    
    2399                    
    2400 0000d920     1be0          movk    01fH,a0
    2401 0000d930     0d3f          callr   rnd
         0000d940     04bf  
    2402 0000d950     1fe0          btst    0,a0
    2403 0000d960     ca05          jrz     muwinoxf
    2404 0000d970     b702          move    *a8(OXVEL),a2,L
         0000d980     0020  
    2405 0000d990     03a2          neg     a2
    2406 0000d9a0     b248          move    a2,*a8(OXVEL),L
         0000d9b0     0020  
    2407 0000d9c0           muwinoxf
    2408 0000d9c0     1fc0          btst    1,a0
    2409 0000d9d0     ca00          jrz     muwinxt
         0000d9e0     01a8  
    2410 0000d9f0     b702          move    *a8(OZVEL),a2,L
         0000da00     0060  
    2411 0000da10     03a2          neg     a2
    2412 0000da20     b248          move    a2,*a8(OZVEL),L
         0000da30     0060  
    2413                    
    2414                    
    2415 0000da40     c000          jruc    muwinxt
         0000da50     01a1  
    2416                    
    2417 0000da60           muwirej
    2418 0000da60     18c0          movk    PS_BLOCKS,a0            ;It's a block
    2419 0000da70     b461          move    *a3(plyr_num),a1
         0000da80     0100  
    2420 0000da90     0d5f          calla   inc_player_stat
         0000daa0 00000000! 
    2421 0000dac0     b460          move    *a3(plyr_dir),a0
         0000dad0     03d0  
    2422 0000dae0     0d3f          callr   sinecos_get
         0000daf0     fcef  
    2423 0000db00     24a0          sll     5,a0                    ;*32
    2424 0000db10     24a1          sll     5,a1
    2425 0000db20     b208          move    a0,*a8(OZVEL),L
         0000db30     0060  
    2426 0000db40     b228          move    a1,*a8(OXVEL),L
         0000db50     0020  
    2427 0000db60     09e1          movi    -GRAV*21,a1             ;Towards roof ;18
         0000db70 fffce200  
    2428 0000db90     b228          move    a1,*a8(OYVEL),L
         0000dba0     0040  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   57

    2429 0000dbb0     19e0          movk    15,a0
    2430 0000dbc0     b003          move    a0,*a3(plyr_shtdly)
         0000dbd0     02b0  
    2431                    
    2432 0000dbe0     0d3f          callr   def_play_reward         ;Good defensive play reward
         0000dbf0     01ef  
    2433                    
    2434 0000dc00     5600          clr     a0
    2435 0000dc10     0580          move    a0,@ballgoaltcnt
         0000dc20 00000110- 
    2436 0000dc40     c000          jruc    muwinxt
         0000dc50     0181  
    2437                    
    2438 0000dc60           muwinobr
    2439 0000dc60     05a2          move    @ballpnum,a2
         0000dc70 00000030- 
    2440 0000dc90     c400          jrlt    muwigiveball            ;No owner?
         0000dca0     009e  
    2441 0000dcb0     b46e          move    *a3(plyr_num),a14
         0000dcc0     0100  
    2442 0000dcd0     484e          cmp     a2,a14
    2443 0000dce0     ca00          jreq    muwinxt                 ;I already have it?
         0000dcf0     0177  
    2444                    
    2445 0000dd00     b460          move    *a3(plyr_seq),a0
         0000dd10     0170  
    2446 0000dd20     0be0          subi    STEAL_SEQ,a0
         0000dd30     ffd4  
    2447 0000dd40     cb00          jrne    muwinxt
         0000dd50     0171  
    2448                    
    2449                    
    2450 0000dd60     b660          move    *a3(plyr_attrib_p),a0,L
         0000dd70     0150  
    2451 0000dd80     b400          move    *a0(PAT_STLSKILL),a0
         0000dd90     0060  
    2452 0000dda0     2480          sll     4,a0
    2453 0000ddb0     0b20          addi    stl1,a0
         0000ddc0 0000e390' 
    2454 0000dde0     8400          move    *a0,a0
    2455                    
    2456 0000ddf0     0d5f          calla   RNDPER
         0000de00 00000000! 
    2457 0000de20     c200          jrls    muwinxt                 ;No steal?
         0000de30     0163  
    2458                    
    2459 0000de40     24a2          sll     5,a2                    ;*32
    2460 0000de50     0b22          addi    plyrproc_t,a2
         0000de60 00000000! 
    2461 0000de80     8642          move    *a2,a2,L
    2462                    
    2463 0000de90     b440          move    *a2(plyr_seqflgs),a0
         0000dea0     0180  
    2464 0000deb0     1e80          btst    NOSTEAL_B,a0
    2465 0000dec0     cb00          jrnz    muwinxt                 ;Ball can't be stolen?
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   58

         0000ded0     0159  
    2466                    
    2467                    
    2468 0000dee0     05a0          move    @steals_off,a0
         0000def0 00000000! 
    2469 0000df10     cb00          jrnz    muwinxt
         0000df20     0154  
    2470                    
    2471 0000df30     1920          movk    PS_STEALS,a0
    2472 0000df40     b461          move    *a3(plyr_num),a1
         0000df50     0100  
    2473 0000df60     0d5f          calla   inc_player_stat
         0000df70 00000000! 
    2474                    
    2475 0000df90     b660          move    *a3(plyr_attrib_p),a0,L
         0000dfa0     0150  
    2476 0000dfb0     b400          move    *a0(PAT_STLSKILL),a0
         0000dfc0     0060  
    2477 0000dfd0     2480          sll     4,a0
    2478 0000dfe0     0b20          addi    stl2,a0
         0000dff0 0000e440' 
    2479 0000e010     8400          move    *a0,a0
    2480                    
    2481 0000e020     0d5f          calla   RNDPER
         0000e030 00000000! 
    2482 0000e050     c349          jrhi    muwigiveballflsh                ;20% give him the ball?
    2483                    
    2484 0000e060     19e0          movk    15,a0                   ;>Knock it away
    2485 0000e070     b002          move    a0,*a2(plyr_shtdly)
         0000e080     02b0  
    2486 0000e090     b003          move    a0,*a3(plyr_shtdly)
         0000e0a0     02b0  
    2487                    
    2488 0000e0b0     09c0          movi    -1,a0
         0000e0c0     ffff  
    2489 0000e0d0     0580          move    a0,@ballpnum
         0000e0e0 00000030- 
    2490 0000e100     0580          move    a0,@ballpnumlast
         0000e110 00000040- 
    2491 0000e130     0d3f          callr   ball_convfmprel2
         0000e140     0229  
    2492                    
    2493 0000e150     09e2          movi    01ffffH,a2              ;>Give rnd velocity
         0000e160 0001ffff  
    2494 0000e180     09e3          movi    010000H,a3
         0000e190 00010000  
    2495 0000e1b0     4c40          move    a2,a0
    2496 0000e1c0     0d3f          callr   rnd
         0000e1d0     0436  
    2497 0000e1e0     4060          add     a3,a0
    2498 0000e1f0     1fe0          btst    0,a0
    2499 0000e200     ca01          jrz     muwixpos
    2500 0000e210     03a0          neg     a0
    2501 0000e220     b208  muwixpos        move    a0,*a8(OXVEL),L
         0000e230     0020  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   59

    2502 0000e240     4c40          move    a2,a0
    2503 0000e250     0d3f          callr   rnd
         0000e260     042d  
    2504 0000e270     4060          add     a3,a0
    2505 0000e280     1fe0          btst    0,a0
    2506 0000e290     ca01          jrz     muwiypos
    2507 0000e2a0     03a0          neg     a0
    2508 0000e2b0     b208  muwiypos        move    a0,*a8(OZVEL),L
         0000e2c0     0060  
    2509                    
    2510 0000e2d0     0d3f          callr   flash_ball
         0000e2e0     01a4  
    2511 0000e2f0     0d3f          callr   get_swat
         0000e300     0177  
    2512 0000e310     09e0          movi    cheer_snd,a0
         0000e320 000003c0' 
    2513 0000e340     0d5f          calla   snd_play1
         0000e350 00000000! 
    2514                    
    2515 0000e370     c000          jruc    muwinxt
         0000e380     010e  
    2516                    
    2517 0000e390     00a0  stl1    .word   160,170,180,195,200
    2518 0000e3e0     00cd          .word   205,215,245,260,285
    2519 0000e430     012c          .word   300
    2520                    
    2521 0000e440     00a0  stl2    .word   160,170,180,195,200
    2522 0000e490     00cd          .word   205,215,225,230,235
    2523 0000e4e0     00fa          .word   250
    2524                    
    2525                    
    2526 0000e4f0           muwigiveballflsh
    2527                    
    2528 0000e4f0     0d5f          calla   stolen_speech
         0000e500 00000000! 
    2529                    
    2530 0000e520     1bc0          movk    30,a0
    2531 0000e530     0580          move    a0,@steals_off
         0000e540 00000000! 
    2532 0000e560     1b20          movk    25,a0
    2533 0000e570     0580          move    a0,@pass_off
         0000e580 00000000! 
    2534 0000e5a0     09c0          movi    80,a0
         0000e5b0     0050  
    2535 0000e5c0     0580          move    a0,@pushing_delay
         0000e5d0 00000000! 
    2536 0000e5f0     0d3f          callr   flash_ball
         0000e600     0172  
    2537 0000e610     0d3f          callr   get_swat
         0000e620     0145  
    2538 0000e630     09e0          movi    cheer_snd,a0
         0000e640 000003c0' 
    2539 0000e660     0d5f          calla   snd_play1
         0000e670 00000000! 
    2540                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   60

    2541                    
    2542 0000e690           muwigiveball
    2543 0000e690     07a2          move    @ballprcv_p,a2,L
         0000e6a0 000000e0- 
    2544 0000e6c0     ca00          jrz     muwinorcvr                      ;No pass receiver?
         0000e6d0     009a  
    2545 0000e6e0     4862          cmp     a3,a2
    2546 0000e6f0     ca00          jreq    muwircvok                       ;The receiver has it?
         0000e700     0093  
    2547                    
    2548 0000e710     09c0          movi    99,a0
         0000e720     0063  
    2549 0000e730     0d3f          callr   rndrng0
         0000e740     03ed  
    2550                    
    2551 0000e750     57ce          clr     a14
    2552 0000e760     b461          move    *a3(plyr_ptsdown),a1
         0000e770     0440  
    2553 0000e780     c612          jrle    muwinormint             ;!Losing?
    2554                    
    2555 0000e790     0b41          cmpi    15,a1
         0000e7a0     fff0  
    2556 0000e7b0     c601          jrle    muwimaxpts2
    2557 0000e7c0     19e1          movk    15,a1
    2558                    
    2559 0000e7d0           muwimaxpts2
    2560 0000e7d0     09ce          movi    150,a14                 ;Secret steal power!
         0000e7e0     0096  
    2561 0000e7f0     b466          move    *a3(plyr_num),a6
         0000e800     0100  
    2562                            .ref    stlpower
    2563 0000e810     05a4          move    @stlpower,a4
         0000e820 00000000! 
    2564 0000e840     4ac4          btst    a6,a4
    2565 0000e850     cb05          jrnz    muwinormint
    2566                    
    2567 0000e860     2481          sll     4,a1
    2568 0000e870     0b21          addi    muwiint_t,a1
         0000e880 0000f980' 
    2569 0000e8a0     842e          move    *a1,a14
    2570                    
    2571 0000e8b0           muwinormint
    2572 0000e8b0     05a1          move    @ballpasstime,a1
         0000e8c0 00000100- 
    2573 0000e8e0     1461          subk    3,a1
    2574 0000e8f0     0381          abs     a1
    2575 0000e900     2fe1          srl     1,a1                    ;/2
    2576 0000e910     41c1          add     a14,a1
    2577 0000e920     1021          addk    1,a1                    ;1% to 100%
    2578 0000e930     4820          cmp     a1,a0
    2579 0000e940     c500          jrge    muwinxt                 ;% failed?
         0000e950     00b1  
    2580                    
    2581                    
    2582 0000e960     09c0          movi    400,a0                  ;650 ,450
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   61

         0000e970     0190  
    2583 0000e980     0d5f          calla   RNDPER
         0000e990 00000000! 
    2584 0000e9b0     c200          jrls    muwinxt                 ;br=nope
         0000e9c0     00aa  
    2585                    
    2586                    
    2587 0000e9d0                   PUSH    a2,a8
    2588                    
    2589 0000e9f0     b706          move    *a8(OXVAL),a6,L         ;Figure out where ball was 4 ticks ago
         0000ea00     0080  
    2590 0000ea10     b707          move    *a8(OZVAL),a7,L
         0000ea20     00c0  
    2591                    
    2592 0000ea30     b701          move    *a8(OXVEL),a1,L
         0000ea40     0020  
    2593 0000ea50     2441          sll     2,a1
    2594 0000ea60     4426          sub     a1,a6
    2595 0000ea70     b701          move    *a8(OZVEL),a1,L
         0000ea80     0060  
    2596 0000ea90     2441          sll     2,a1
    2597 0000eaa0     4427          sub     a1,a7
    2598                    
    2599 0000eab0     2a06          sra     16,a6
    2600 0000eac0     2a07          sra     16,a7
    2601                    
    2602 0000ead0     4d68          move    a11,a8
    2603                    
    2604 0000eae0     0d5f          calla   seekdirdist_obxz128
         0000eaf0 00000000! 
    2605 0000eb10     b003          move    a0,*a3(plyr_newdir)     ;Turn toward ball
         0000eb20     03e0  
    2606                    
    2607 0000eb30                   PULL    a2,a8
    2608                    
    2609 0000eb50     b440          move    *a2(plyr_rcvpass),a0
         0000eb60     0230  
    2610 0000eb70     c644          jrle    muwircvok0                      ;Already caught?
    2611                    
    2612 0000eb80     57ce          clr     a14                     ;Intercepted
    2613 0000eb90     b1c2          move    a14,*a2(plyr_rcvpass)
         0000eba0     0230  
    2614 0000ebb0     b440          move    *a2(plyr_jmpcnt),a0
         0000ebc0     0400  
    2615 0000ebd0     cb02          jrnz    muwiinair                       ;Jumping?
    2616 0000ebe0     b1c2          move    a14,*a2(plyr_nojoy)
         0000ebf0     03b0  
    2617 0000ec00           muwiinair
    2618                    
    2619                    
    2620                    
    2621 0000ec00     0d3f          callr   def_play_reward         ;Good defensive play reward
         0000ec10     00ed  
    2622                    
    2623 0000ec20     09c0          movi    40,a0                   ;2% of intercepts are just deflects
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   62

         0000ec30     0028  
    2624 0000ec40     0d5f          calla   RNDPER
         0000ec50 00000000! 
    2625 0000ec70     c21c          jrls    muwinope
    2626                    
    2627                    
    2628 0000ec80     09e0          movi    intercept,a0
         0000ec90 000000c0' 
    2629 0000ecb0     0d5f          calla   snd_play1ovrp
         0000ecc0 00000000! 
    2630                    
    2631 0000ece0     b460          move    *a3(plyr_dir),a0
         0000ecf0     03d0  
    2632 0000ed00     0d3f          callr   sinecos_get
         0000ed10     fbcd  
    2633 0000ed20     24a0          sll     5,a0                    ;*32
    2634 0000ed30     24a1          sll     5,a1
    2635 0000ed40     b208          move    a0,*a8(OZVEL),L
         0000ed50     0060  
    2636 0000ed60     b228          move    a1,*a8(OXVEL),L
         0000ed70     0020  
    2637 0000ed80     09e1          movi    -GRAV*25,a1             ;Towards roof
         0000ed90 fffc4a00  
    2638 0000edb0     b228          move    a1,*a8(OYVEL),L
         0000edc0     0040  
    2639 0000edd0     1920          movk    PS_STEALS,a0
    2640 0000ede0     b461          move    *a3(plyr_num),a1
         0000edf0     0100  
    2641 0000ee00     0d5f          calla   inc_player_stat
         0000ee10 00000000! 
    2642                    
    2643 0000ee30     c065          jruc    muwix                   ;muwinxt
    2644                    
    2645 0000ee40           muwinope
    2646                    
    2647                    
    2648 0000ee40     07a0          move    @ballprcv_p,a0,L        ;*Plyr proc who gets this pass or 0
         0000ee50 000000e0- 
    2649 0000ee70     ca0a          jrz     muwinopass
    2650                    
    2651 0000ee80     05a0          move    @ballpasstime,a0        ;# ticks since passed
         0000ee90 00000100- 
    2652 0000eeb0     0b40          cmpi    6,a0
         0000eec0     fff9  
    2653 0000eed0     c607          jrle    muwicntstl                      ;muwinopass
    2654                    
    2655 0000eee0     0d5f          calla   intercepted_speech
         0000eef0 00000000! 
    2656 0000ef10     c003          jruc    muwicntstl
    2657                    
    2658 0000ef20           muwinopass
    2659 0000ef20     0d5f          calla   stolen_speech
         0000ef30 00000000! 
    2660                    
    2661 0000ef50           muwicntstl
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   63

    2662                    
    2663 0000ef50     1920          movk    PS_STEALS,a0
    2664 0000ef60     b461          move    *a3(plyr_num),a1
         0000ef70     0100  
    2665 0000ef80     0d5f          calla   inc_player_stat
         0000ef90 00000000! 
    2666 0000efb0     c008          jruc    muwircvok
    2667                    
    2668 0000efc0           muwircvok0
    2669 0000efc0                   PUSH    a7,a10
    2670 0000efe0     4c6a          move    a3,a10
    2671 0000eff0     0d5f          calla   arw_on1plyr             ;Guy who picks up ball gets arw
         0000f000 00000000! 
    2672 0000f020                   PULL    a7,a10
    2673                    
    2674 0000f040           muwircvok
    2675 0000f040     57ce          clr     a14
    2676 0000f050     078e          move    a14,@ballprcv_p,L
         0000f060 000000e0- 
    2677                    
    2678 0000f080           muwinorcvr
    2679 0000f080     b46e          move    *a3(plyr_num),a14
         0000f090     0100  
    2680 0000f0a0     058e          move    a14,@ballpnum
         0000f0b0 00000030- 
    2681 0000f0d0     5600          clr     a0
    2682 0000f0e0     b003          move    a0,*a3(plyr_dribmode)   ;Reset dribble
         0000f0f0     0210  
    2683                            
    2684 0000f100     b760          move    *a11(OIMG),a0,L
         0000f110     0170  
    2685 0000f120     0b60          cmpi    w1blok3,a0
         0000f130 ffffffff! 
    2686 0000f150     ca1c          jrz     muwiahha
    2687 0000f160     0b60          cmpi    w2blok3,a0
         0000f170 ffffffff! 
    2688 0000f190     ca18          jrz     muwiahha
    2689 0000f1a0     0b60          cmpi    w4blok3,a0
         0000f1b0 ffffffff! 
    2690 0000f1d0     ca14          jrz     muwiahha
    2691 0000f1e0     0b60          cmpi    w5blok3,a0
         0000f1f0 ffffffff! 
    2692 0000f210     ca10          jrz     muwiahha
    2693 0000f220     0b60          cmpi    w1blok2,a0
         0000f230 ffffffff! 
    2694 0000f250     ca0c          jrz     muwiahha
    2695 0000f260     0b60          cmpi    w2blok2,a0
         0000f270 ffffffff! 
    2696 0000f290     ca08          jrz     muwiahha
    2697 0000f2a0     0b60          cmpi    w4blok2,a0
         0000f2b0 ffffffff! 
    2698 0000f2d0     ca04          jrz     muwiahha
    2699 0000f2e0     0b60          cmpi    w5blok2,a0
         0000f2f0 ffffffff! 
    2700 0000f310     cb17          jrnz    muwix
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   64

    2701                    
    2702 0000f320           muwiahha
    2703 0000f320     1ac0          movk    NOSPEAR_SEQ,a0
    2704 0000f330     b467          move    *a3(plyr_dir),a7
         0000f340     03d0  
    2705 0000f350                   PUSH    a13
    2706 0000f360     4c6d          move    a3,a13
    2707 0000f370     0d5f          calla   plyr_setseq
         0000f380 00000000! 
    2708 0000f3a0     1820          movk    1,a0
    2709 0000f3b0     b20d          move    a0,*a13(PA10),L
         0000f3c0     0080  
    2710 0000f3d0                   PULL    a13
    2711                    
    2712                    
    2713 0000f3e0     c00a          jruc    muwix
    2714                    
    2715 0000f3f0           muwinxt5        
    2716 0000f3f0     0300          nop
    2717 0000f400     0300          nop
    2718 0000f410           muwinxt2
    2719 0000f410     0300          nop
    2720 0000f420     0300          nop
    2721 0000f430           muwinxt3
    2722 0000f430     0300          nop
    2723 0000f440     0300          nop
    2724 0000f450           muwinxt4
    2725 0000f450     0300          nop
    2726 0000f460     0300          nop
    2727                    
    2728                    
    2729 0000f470     0d87  muwinxt dsj     a7,muwilp
         0000f480     fc1b  
    2730                    
    2731                    
    2732 0000f490           muwix   PULL    a2,a3,a4,a5,a6,a7,a10,a11
    2733 0000f4b0     0960          rets
    2734                    
    2735 0000f4c0     0010  tbl1    .word   16,17,18,18,18,18,18,19,20,21,22,23
    2736 0000f580     0020  tbl2    .word   32,33,34,35,35,35,35,36,37,38,39,40
    2737 0000f640     000f  tbl3    .word   15,15,15,15,15,15,15,15,15,15,15,15
    2738 0000f700     000b  tbl4    .word   11,12,12,12,12,12,12,13,14,15,16,17
    2739 0000f7c0     01f4  tbl5    .word   500,500,500,500,500,500,500,500,500,500,500,500
    2740                    
    2741                    
    2742 0000f880           muwigoalt_t
    2743 0000f880     0000          .word   0,35,45,55,60,65,70,75,75
    2744 0000f910     004b          .word   75,80,90,90,90,90,90
    2745                    
    2746 0000f980           muwiint_t
    2747 0000f980     0000          .word   0,4,7,10,12,15,19,20,20,20
    2748 0000fa20     0014          .word   20,20,22,25,27,30
    2749                    
    2750                    
    2751                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   65

    2752 0000fa80            SUBR   get_swat
    2753 0000fa80     09e0          movi    swat_snd,a0
         0000fa90 00000340' 
    2754 0000fab0     0d5f          calla   snd_play1
         0000fac0 00000000! 
    2755 0000fae0     0960          rets
    2756                    
    2757                    
    2758                    
    2759                    
    2760                    
    2761 0000faf0            SUBR   def_play_reward
    2762                    
    2763 0000faf0     0d3f          callr   flash_ball
         0000fb00     0022  
    2764                    
    2765 0000fb10     09e0          movi    steal_snd,a0
         0000fb20 00000500' 
    2766 0000fb40     0d5f          calla   snd_play1
         0000fb50 00000000! 
    2767 0000fb70     0d3f          callr   get_swat
         0000fb80     ffef  
    2768 0000fb90     09e0          movi    cheer_snd,a0
         0000fba0 000003c0' 
    2769 0000fbc0     0d5f          calla   snd_play1
         0000fbd0 00000000! 
    2770                    
    2771 0000fbf0                   PUSH    a7,a10
    2772 0000fc10     4c6a          move    a3,a10
    2773 0000fc20     0d5f          calla   arw_on1plyr             ;Guy who picks up ball gets arw
         0000fc30 00000000! 
    2774 0000fc50                   PULL    a7,a10
    2775                    
    2776 0000fc70     0960          rets
    2777                    
    2778                    
    2779 0000fc80            SUBR   flash_reward
    2780                    
    2781 0000fc80     0d3f          callr   flash_ball
         0000fc90     0009  
    2782                    
    2783 0000fca0     09e0          movi    cheer_snd,a0
         0000fcb0 000003c0' 
    2784 0000fcd0     0d5f          calla   snd_play1
         0000fce0 00000000! 
    2785 0000fd00     0d3f          callr   get_swat
         0000fd10     ffd6  
    2786 0000fd20     0960          rets
    2787                    
    2788                    
    2789                    
    2790                    
    2791 0000fd30            SUBRP  flash_ball
    2792                    
    2793 0000fd30     05a0          move    @inbound,a0
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   66

         0000fd40 00000130- 
    2794 0000fd60     cf0d          jrnn    yzcwx
    2795 0000fd70     05a0          move    @ballflash,a0
         0000fd80 00000120- 
    2796 0000fda0     cb09          jrnz    yzcwx
    2797 0000fdb0                   PUSH    a7
    2798 0000fdc0                   CREATE0 ball_flash
    2799 0000fe30                   PULL    a7
    2800 0000fe40     0960  yzcwx   rets    
    2801                    
    2802                    
    2803 0000fe50           ball_flash
    2804 0000fe50     1820          movk    1,a0
    2805 0000fe60     0580          move    a0,@ballflash
         0000fe70 00000120- 
    2806                    
    2807 0000fe90     07a8          move    @ballobj_p,a8,L         ;Basketball obj
         0000fea0 00000010- 
    2808                    
    2809 0000fec0     09c2          movi    1010h,a2
         0000fed0     1010  
    2810 0000fee0     b048          move    a2,*a8(OCONST)
         0000fef0     0160  
    2811                    
    2812 0000ff00     188a          movk    4,a10
    2813 0000ff10           yzcwagain
    2814 0000ff10     0544          setf    4,0,0
    2815 0000ff20     1900          movk    M_CONNON,a0             ;Replace non-zero data with constant
    2816 0000ff30     b008          move    a0,*a8(OCTRL)           ;Write 4 low bits
         0000ff40     00f0  
    2817 0000ff50     0570          setf    16,1,0
    2818                    
    2819 0000ff60                   SLEEPK  3
    2820                    
    2821 0000ffa0     0544          setf    4,0,0
    2822 0000ffb0     1840          movk    M_WRNONZ,a0
    2823 0000ffc0     b008          move    a0,*a8(OCTRL)           ;Write 4 low bits
         0000ffd0     00f0  
    2824 0000ffe0     0570          setf    16,1,0
    2825                    
    2826 0000fff0                   SLEEPK  3
    2827                    
    2828                    
    2829 00010030     3e6a          dsj     a10,yzcwagain
    2830                    
    2831 00010040     5600  yzcwdie clr     a0
    2832 00010050     0580          move    a0,@ballflash
         00010060 00000120- 
    2833                    
    2834 00010080                   DIE
    2835                    
    2836                    
    2837                    
    2838                    
    2839 000100b0            SUBR   plyr_jscrowdsnd
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   67

    2840                    
    2841 000100b0                   SLEEPK  10
    2842 000100f0     09e0          movi    cheer1_snd,a0
         00010100 00000400' 
    2843 00010120     0d5f          calla   snd_play1
         00010130 00000000! 
    2844 00010150     09e0          movi    cheer2_snd,a0
         00010160 00000440' 
    2845 00010180     0d5f          calla   snd_play1
         00010190 00000000! 
    2846 000101b0                   SLEEP   76
    2847 00010200     1920          movk    9,a0
    2848 00010210     0d3f          callr   rndrng0
         00010220     023f  
    2849 00010230     14e0          subk    7,a0
    2850 00010240     c480          jalt    SUCIDE          ;70%
         00010250 00000000! 
    2851                    
    2852 00010270     09e0          movi    cheer3_snd,a0
         00010280 00000480' 
    2853 000102a0     0d5f          calla   snd_play1
         000102b0 00000000! 
    2854 000102d0                   DIE
    2855                    
    2856                    
    2857                    
    2858 00010300            SUBR   ball_convfmprel
    2859                    
    2860 00010300     07a0          move    @ballobj_p,a0,L
         00010310 00000010- 
    2861                    
    2862 00010330     b601          move    *a0(OIMG),a1,L          ;0CHonvert ball from player relative
         00010340     0170  
    2863 00010350     b421          move    *a1(IANIOFFX),a1
         00010360     0020  
    2864 00010370     2601          sll     16,a1
    2865 00010380     b60e          move    *a0(OXANI),a14,L
         00010390     01e0  
    2866 000103a0     b220          move    a1,*a0(OXANI),L
         000103b0     01e0  
    2867 000103c0     45c1          sub     a14,a1                  ;Ani difference
    2868                    
    2869                    
    2870 000103d0     0960          rets
    2871                    
    2872                    
    2873 000103e0            SUBR   ball_convfmprel2
    2874                    
    2875 000103e0     07a0          move    @ballobj_p,a0,L
         000103f0 00000010- 
    2876                    
    2877 00010410     b601          move    *a0(OIMG),a1,L          ;0CHonvert ball from player relative
         00010420     0170  
    2878 00010430     b421          move    *a1(IANIOFFX),a1
         00010440     0020  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   68

    2879 00010450     2601          sll     16,a1
    2880 00010460     b60e          move    *a0(OXANI),a14,L
         00010470     01e0  
    2881 00010480     b220          move    a1,*a0(OXANI),L
         00010490     01e0  
    2882 000104a0     45c1          sub     a14,a1                  ;Ani difference
    2883                    
    2884 000104b0     2aa1          sra     16-5,a1
    2885 000104c0     b40e          move    *a0(OZPOS),a14          ;894 to 1379 (Z range 486)
         000104d0     00d0  
    2886 000104e0     0b0e          addi    (819-GZBASE),a14        ;768 to ?
         000104f0     ffb5  
    2887 00010500     5dc1          mpys    a14,a1
    2888 00010510     4c2e          move    a1,a14
    2889 00010520     2bce          sra     2,a14                   ;/4
    2890 00010530     45c1          sub     a14,a1
    2891 00010540     2bee          sra     1,a14                   ;/2
    2892 00010550     45c1          sub     a14,a1
    2893 00010560     2421          sll     16-(14+1),a1            ;*64k /16k /2
    2894                    
    2895 00010570     b60e          move    *a0(OXVAL),a14,L        ;Adjust X
         00010580     0080  
    2896 00010590     442e          sub     a1,a14
    2897 000105a0     b3c0          move    a14,*a0(OXVAL),L
         000105b0     0080  
    2898                    
    2899 000105c0     0960          rets
    2900                    
    2901                    
    2902                    
    2903                            .ref    assistance_off
    2904                    
    2905 000105d0            SUBR   plyr_setptsdown
    2906                    
    2907 000105d0                   PUSH    a2,a3,a4,a5,a6
    2908                    
    2909 000105f0     09ee          movi    scores,a14
         00010600 00000000! 
    2910 00010620     95c0          move    *a14+,a0
    2911 00010630     95c4          move    *a14+,a4
    2912 00010640     4404          sub     a0,a4                   ;+ if losing, - if winning
    2913                    
    2914 00010650     05a5          move    @PSTATUS,a5
         00010660 00000000! 
    2915                    
    2916 00010680     09e6          movi    plyrproc_t,a6
         00010690 00000000! 
    2917 000106b0     1883          movk    4,a3
    2918                    
    2919 000106c0           qwunlp
    2920 000106c0     4c82          move    a4,a2
    2921 000106d0     2fe5          srl     1,a5
    2922 000106e0     c913          jrnc    qwunset                 ;Drone?
    2923                    
    2924 000106f0     05a0          move    @PSTATUS,a0
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   69

         00010700 00000000! 
    2925 00010720     4c01          move    a0,a1
    2926 00010730     27c0          sll     32-2,a0
    2927 00010740     ca0d          jrz     qwunset                 ;Drone team?
    2928 00010750                   ANDK    0cH,a1
    2929 00010770     ca0a          jrz     qwunset                 ;Drone team?
    2930                    
    2931 00010780     05a0          move    @assistance_off,a0
         00010790 00000000! 
    2932 000107b0     cb05          jrnz    qwunnoset
    2933                    
    2934 000107c0     1b60          movk    ADJCOMPASS,a0           ;Computer assistance
    2935 000107d0     0d5f          calla   GET_ADJ                 ;0-1
         000107e0 00000000! 
    2936 00010800     ca01          jrz     qwunset                 ;On?
    2937 00010810           qwunnoset
    2938 00010810     5642          clr     a2
    2939 00010820           qwunset
    2940 00010820     96c0          move    *a6+,a0,L
    2941 00010830     b040          move    a2,*a0(plyr_ptsdown)
         00010840     0440  
    2942                    
    2943 00010850     0b43          cmpi    3,a3
         00010860     fffc  
    2944 00010870     cb01          jrne    qwunnxt
    2945 00010880     03a4          neg     a4
    2946                    
    2947 00010890     3fc3  qwunnxt dsj     a3,qwunlp
    2948                    
    2949 000108a0                   PULL    a2,a3,a4,a5,a6
    2950 000108c0     0960          rets
    2951                    
    2952                    
    2953                    
    2954                    
    2955 000108d0            SUBRP  board_shatter
    2956                    
    2957 000108d0     09e0          movi    explode_snd,a0
         000108e0 00000580' 
    2958 00010900     0d5f          calla   snd_play1ovr
         00010910 00000000! 
    2959                    
    2960 00010930     09e0          movi    ohmy,a0                 ;oh my!
         00010940 00000040' 
    2961 00010960     0d5f          calla   snd_play1ovr
         00010970 00000000! 
    2962                    
    2963 00010990                   CREATE0 board_glssnd
    2964 00010a00     1941          movk    10,a1
    2965 00010a10     b020          move    a1,*a0(PTIME)
         00010a20     0030  
    2966                    
    2967 00010a30     05ab          move    @ballpnumshot,a11
         00010a40 00000050- 
    2968 00010a60     1948          movk    10,a8
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   70

    2969 00010a70     4d60          move    a11,a0
    2970 00010a80     1440          subk    2,a0
    2971 00010a90     cb01          jrnz    gvfmn0
    2972 00010aa0     1020          addk    1,a0
    2973 00010ab0     0580  gvfmn0  move    a0,@bbshatter
         00010ac0 00000140- 
    2974 00010ae0           gvfmshlp
    2975 00010ae0     19a2          movk    13,a2
    2976 00010af0           gvfmshlp2       CREATE0 board_shard
    2977 00010b60     3d02          dsj     a2,gvfmshlp2
    2978 00010b70                   SLEEPK  1
    2979 00010bb0     3dc8          dsj     a8,gvfmshlp
    2980                    
    2981 00010bc0                   DIE
    2982                    
    2983 00010bf0           board_glssnd
    2984 00010bf0                   SLEEPK  10
    2985 00010c30     09e0          movi    explode_snd,a0
         00010c40 00000580' 
    2986 00010c60     0d5f          calla   snd_play1ovr
         00010c70 00000000! 
    2987 00010c90                   DIE
    2988                    
    2989                    
    2990 00010cc0                   STRUCTPD
    2991 00010cc0                   APTR    shd_ani1st_p    ;*1st ani_l pos
    2992                    
    2993 00010cc0            SUBRP  board_shard
    2994                    
    2995 00010cc0     1940          movk    10,a0
    2996 00010cd0     0d3f          callr   rndrng0
         00010ce0     0193  
    2997 00010cf0     24a0          sll     5,a0                    ;*32
    2998 00010d00     0b20          addi    gvfmshard_t,a0
         00010d10 000115a0' 
    2999 00010d30     8609          move    *a0,a9,L
    3000 00010d40     9720          move    *a9+,a0,L
    3001 00010d50                   PUSHP   a0
    3002 00010d60     b32d          move    a9,*a13(shd_ani1st_p),L
         00010d70     0100  
    3003                    
    3004 00010d80     19e0          movk    0fH,a0
    3005 00010d90     0d3f          callr   rnd
         00010da0     0179  
    3006 00010db0     14a0          subk    5,a0
    3007 00010dc0     4c06          move    a0,a6
    3008 00010dd0     25a6          sll     13,a6                   ;XVel
    3009                    
    3010 00010de0     1860          movk    3,a0
    3011 00010df0     0d3f          callr   rnd
         00010e00     0173  
    3012 00010e10     cb01          jrnz    gvfmxnorm
    3013 00010e20     2446          sll     2,a6                    ;*4
    3014 00010e30           gvfmxnorm
    3015 00010e30     19e0          movk    0fH,a0
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   71

    3016 00010e40     0d3f          callr   rnd
         00010e50     016e  
    3017 00010e60     14c0          subk    6,a0
    3018 00010e70     4c07          move    a0,a7
    3019 00010e80     25c7          sll     14,a7                   ;YVel
    3020                    
    3021 00010e90     1860          movk    3,a0
    3022 00010ea0     0d3f          callr   rnd
         00010eb0     0168  
    3023 00010ec0     cb01          jrnz    gvfmynorm
    3024 00010ed0     2447          sll     2,a7                    ;*4
    3025 00010ee0           gvfmynorm
    3026                    
    3027 00010ee0     09c0          movi    36,a0
         00010ef0     0024  
    3028 00010f00     0d3f          callr   rndrng0
         00010f10     0170  
    3029 00010f20     4c01          move    a0,a1
    3030 00010f30     03a1          neg     a1                      ;Y offset
    3031                    
    3032 00010f40     09c0          movi    HOOPLX-13,a0
         00010f50     1eb3  
    3033 00010f60     144b          subk    2,a11
    3034 00010f70     c503          jrge    gvfmp23
    3035 00010f80     09c0          movi    HOOPRX+13,a0
         00010f90     214d  
    3036 00010fa0     03a6          neg     a6
    3037 00010fb0           gvfmp23
    3038 00010fb0     2600          sll     16,a0
    3039 00010fc0     0b01          addi    HOOPY,a1
         00010fd0     ff88  
    3040 00010fe0     2601          sll     16,a1
    3041 00010ff0     09e2          movi    shard1_1,a2
         00011000 00000000! 
    3042 00011020     09c3          movi    CZMID,a3
         00011030     0492  
    3043 00011040     09e4          movi    DMAWNZ|M_3D|M_NOSCALE,a4
         00011050 00009102  
    3044 00011070     09c5          movi    CLSDEAD,a5
         00011080     2000  
    3045 00011090     0d5f          calla   BEGINOBJ2
         000110a0 00000000! 
    3046                    
    3047 000110c0     18e0          movk    7,a0
    3048 000110d0     0d3f          callr   rnd
         000110e0     0145  
    3049 000110f0     1480          subk    4,a0
    3050 00011100     2600          sll     16,a0
    3051 00011110     b208          move    a0,*a8(OZVEL),L
         00011120     0060  
    3052                    
    3053 00011130     1820          movk    1,a0
    3054 00011140     0d3f          callr   rnd
         00011150     013e  
    3055 00011160     1020          addk    1,a0
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   72

    3056 00011170     4c0b          move    a0,a11
    3057 00011180     c001          jruc    gvfmstrt
    3058                    
    3059 00011190     396a  gvfmlp  dsj     a10,gvfmnoani
    3060 000111a0           gvfmstrt
    3061 000111a0     4d6a          move    a11,a10
    3062 000111b0     9720          move    *a9+,a0,L
    3063 000111c0     cb03          jrnz    gvfmani
    3064 000111d0     b7a9          move    *a13(shd_ani1st_p),a9,L
         000111e0     0100  
    3065 000111f0     9720          move    *a9+,a0,L
    3066 00011200           gvfmani
    3067 00011200     b501          move    *a8(OCTRL),a1
         00011210     00f0  
    3068 00011220     0d5f          calla   obj_aniq
         00011230 00000000! 
    3069 00011250           gvfmnoani
    3070 00011250                   SLEEPK  1
    3071 00011290     b702          move    *a8(OYVEL),a2,L
         000112a0     0040  
    3072 000112b0     0b02          addi    GRAV,a2
         000112c0     2600  
    3073 000112d0     b248          move    a2,*a8(OYVEL),L
         000112e0     0040  
    3074 000112f0     cee9          jrn     gvfmlp                  ;Going up?
    3075 00011300     b701          move    *a8(OYVAL),a1,L
         00011310     00a0  
    3076 00011320     c4e6          jrlt    gvfmlp                  ;Above gnd?
    3077 00011330     5621          clr     a1
    3078 00011340     b228          move    a1,*a8(OYVAL),L
         00011350     00a0  
    3079 00011360     05ae          move    @HCOUNT,a14
         00011370 c00001c0  
    3080 00011390     27ce          sll     32-2,a14
    3081 000113a0     ca07          jrz     gvfmshatter
    3082 000113b0     03a2          neg     a2
    3083 000113c0     2bc2          sra     2,a2
    3084 000113d0     b248          move    a2,*a8(OYVEL),L
         000113e0     0040  
    3085 000113f0     0b42          cmpi    -(GRAV*2),a2
         00011400     4bff  
    3086 00011410     c4d7          jrlt    gvfmlp
    3087                    
    3088 00011420           gvfmshatter
    3089 00011420     5600          clr     a0
    3090 00011430     b208          move    a0,*a8(OXVEL),L
         00011440     0020  
    3091 00011450     b208          move    a0,*a8(OYVEL),L
         00011460     0040  
    3092 00011470     b208          move    a0,*a8(OZVEL),L
         00011480     0060  
    3093                    
    3094 00011490                   PULLP   a9
    3095 000114a0     186a          movk    3,a10
    3096 000114b0     c009          jruc    gvfmstrt2
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   73

    3097                    
    3098 000114c0           gvfmlp2
    3099 000114c0     b501          move    *a8(OCTRL),a1
         000114d0     00f0  
    3100 000114e0     0d5f          calla   obj_aniq
         000114f0 00000000! 
    3101 00011510           gvfmnoani2
    3102 00011510                   SLEEPK  1
    3103 00011550     9720  gvfmstrt2       move    *a9+,a0,L
    3104 00011560     cbf5          jrnz    gvfmlp2
    3105                    
    3106                    
    3107 00011570     c080          jauc    DELOBJDIE
         00011580 00000000! 
    3108                    
    3109                    
    3110 000115a0           gvfmshard_t
    3111 000115a0 00011700'         .long   s1_t,s2_t,s3_t,s4_t,s5_t,s6_t,s7_t,s8_t
    3112 000116a0 00011700'         .long   s1_t,s6_t,s8_t
    3113                    
    3114 00011700           s1_t
    3115 00011700 00012480'         .long   st4_t
    3116 00011720 00000000!         .long   shard1_1
    3117 00011740 00000000!         .long   shard1_2
    3118 00011760 00000000!         .long   shard1_3
    3119 00011780 00000000!         .long   shard1_4
    3120 000117a0 00000000!         .long   shard1_5
    3121 000117c0 00000000!         .long   shard1_6
    3122 000117e0 00000000!         .long   shard1_7
    3123 00011800 00000000!         .long   shard1_8
    3124 00011820 00000000          .long   0
    3125 00011840           s2_t
    3126 00011840 000123c0'         .long   st3_t
    3127 00011860 00000000!         .long   shard2_1
    3128 00011880 00000000!         .long   shard2_2
    3129 000118a0 00000000!         .long   shard2_3
    3130 000118c0 00000000!         .long   shard2_4
    3131 000118e0 00000000!         .long   shard2_5
    3132 00011900 00000000!         .long   shard2_6
    3133 00011920 00000000!         .long   shard2_7
    3134 00011940 00000000!         .long   shard2_8
    3135 00011960 00000000          .long   0
    3136 00011980           s3_t
    3137 00011980 00012300'         .long   st2_t
    3138 000119a0 00000000!         .long   shard3_1
    3139 000119c0 00000000!         .long   shard3_2
    3140 000119e0 00000000!         .long   shard3_3
    3141 00011a00 00000000!         .long   shard3_4
    3142 00011a20 00000000!         .long   shard3_5
    3143 00011a40 00000000!         .long   shard3_6
    3144 00011a60 00000000!         .long   shard3_7
    3145 00011a80 00000000!         .long   shard3_8
    3146 00011aa0 00000000!         .long   shard3_9
    3147 00011ac0 00000000!         .long   shard3_10
    3148 00011ae0 00000000!         .long   shard3_11
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   74

    3149 00011b00 00000000!         .long   shard3_12
    3150 00011b20 00000000          .long   0
    3151 00011b40           s4_t
    3152 00011b40 00012240'         .long   st1_t
    3153 00011b60 00000000!         .long   shard4_1
    3154 00011b80 00000000!         .long   shard4_2
    3155 00011ba0 00000000!         .long   shard4_3
    3156 00011bc0 00000000!         .long   shard4_4
    3157 00011be0 00000000!         .long   shard4_5
    3158 00011c00 00000000!         .long   shard4_6
    3159 00011c20 00000000!         .long   shard4_7
    3160 00011c40 00000000!         .long   shard4_8
    3161 00011c60 00000000!         .long   shard4_9
    3162 00011c80 00000000!         .long   shard4_10
    3163 00011ca0 00000000          .long   0
    3164 00011cc0           s5_t
    3165 00011cc0 00012300'         .long   st2_t
    3166 00011ce0 00000000!         .long   shard5_1
    3167 00011d00 00000000!         .long   shard5_2
    3168 00011d20 00000000!         .long   shard5_3
    3169 00011d40 00000000!         .long   shard5_4
    3170 00011d60 00000000!         .long   shard5_5
    3171 00011d80 00000000!         .long   shard5_6
    3172 00011da0 00000000!         .long   shard5_7
    3173 00011dc0 00000000!         .long   shard5_8
    3174 00011de0 00000000          .long   0
    3175 00011e00           s6_t
    3176 00011e00 00012480'         .long   st4_t
    3177 00011e20 00000000!         .long   shard6_1
    3178 00011e40 00000000!         .long   shard6_2
    3179 00011e60 00000000!         .long   shard6_3
    3180 00011e80 00000000!         .long   shard6_4
    3181 00011ea0 00000000!         .long   shard6_5
    3182 00011ec0 00000000!         .long   shard6_6
    3183 00011ee0 00000000!         .long   shard6_7
    3184 00011f00 00000000!         .long   shard6_8
    3185 00011f20 00000000          .long   0
    3186 00011f40           s7_t
    3187 00011f40 00012300'         .long   st2_t
    3188 00011f60 00000000!         .long   shard7_1
    3189 00011f80 00000000!         .long   shard7_2
    3190 00011fa0 00000000!         .long   shard7_3
    3191 00011fc0 00000000!         .long   shard7_4
    3192 00011fe0 00000000!         .long   shard7_5
    3193 00012000 00000000!         .long   shard7_6
    3194 00012020 00000000!         .long   shard7_7
    3195 00012040 00000000!         .long   shard7_8
    3196 00012060 00000000!         .long   shard7_9
    3197 00012080 00000000!         .long   shard7_10
    3198 000120a0 00000000          .long   0
    3199 000120c0           s8_t
    3200 000120c0 00012480'         .long   st4_t
    3201 000120e0 00000000!         .long   shard8_1
    3202 00012100 00000000!         .long   shard8_2
    3203 00012120 00000000!         .long   shard8_3
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   75

    3204 00012140 00000000!         .long   shard8_4
    3205 00012160 00000000!         .long   shard8_5
    3206 00012180 00000000!         .long   shard8_6
    3207 000121a0 00000000!         .long   shard8_7
    3208 000121c0 00000000!         .long   shard8_8
    3209 000121e0 00000000!         .long   shard8_9
    3210 00012200 00000000!         .long   shard8_10
    3211 00012220 00000000          .long   0
    3212                    
    3213 00012240 00000000! st1_t   .long   shat1_1
    3214 00012260 00000000!         .long   shat1_2
    3215 00012280 00000000!         .long   shat1_3
    3216 000122a0 00000000!         .long   shat1_4
    3217 000122c0 00000000!         .long   shat1_5
    3218 000122e0 00000000          .long   0
    3219 00012300 00000000! st2_t   .long   shat2_1
    3220 00012320 00000000!         .long   shat2_2
    3221 00012340 00000000!         .long   shat2_3
    3222 00012360 00000000!         .long   shat2_4
    3223 00012380 00000000!         .long   shat2_5
    3224 000123a0 00000000          .long   0
    3225 000123c0 00000000! st3_t   .long   shat3_1
    3226 000123e0 00000000!         .long   shat3_2
    3227 00012400 00000000!         .long   shat3_3
    3228 00012420 00000000!         .long   shat3_4
    3229 00012440 00000000!         .long   shat3_5
    3230 00012460 00000000          .long   0
    3231 00012480 00000000! st4_t   .long   shat4_1
    3232 000124a0 00000000!         .long   shat4_2
    3233 000124c0 00000000!         .long   shat4_3
    3234 000124e0 00000000!         .long   shat4_4
    3235 00012500 00000000!         .long   shat4_5
    3236 00012520 00000000          .long   0
    3237                    
    3238                    
    3239                    
    3240 00012540            SUBRP  rnd
    3241                    
    3242 00012540     07a1          move    @RAND,a1,L
         00012550 00000000! 
    3243 00012570     6821          rl      a1,a1
    3244 00012580     05ae          move    @HCOUNT,a14
         00012590 c00001c0  
    3245 000125b0     69c1          rl      a14,a1
    3246 000125c0     41e1          add     sp,a1
    3247 000125d0     0781          move    a1,@RAND,L
         000125e0 00000000! 
    3248                    
    3249 00012600     5020          and     a1,a0
    3250 00012610     0960          rets
    3251                    
    3252                    
    3253 00012620            SUBRP  rndrng0
    3254                    
    3255 00012620     07a1          move    @RAND,a1,L
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   76

         00012630 00000000! 
    3256 00012650     6821          rl      a1,a1
    3257 00012660     05ae          move    @HCOUNT,a14
         00012670 c00001c0  
    3258 00012690     69c1          rl      a14,a1
    3259 000126a0     41e1          add     sp,a1
    3260 000126b0     0781          move    a1,@RAND,L
         000126c0 00000000! 
    3261                    
    3262 000126e0     1020          addk    1,a0
    3263 000126f0     5e20          mpyu    a1,a0           ;Condition codes not valid!
    3264                    
    3265 00012700     0960          rets
    3266                    
    3267                    
    3268                    
    3269                    
    3270                    
    3271                    
    3272 00012710            SUBR   seq_stand
    3273                    
    3274 00012710     5600          clr     a0
    3275 00012720     b00d          move    a0,*a13(plyr_nojoy)
         00012730     03b0  
    3276                    
    3277 00012740     1820          movk    STND_SEQ,a0             ;Set stand sequence
    3278 00012750     b5a1          move    *a13(plyr_ownball),a1
         00012760     0260  
    3279 00012770     c63a          jrle    gvfmset
    3280                    
    3281                    
    3282 00012780     b5a2          move    *a13(plyr_num),a2
         00012790     0100  
    3283 000127a0     2fe2          srl     1,a2
    3284 000127b0                   XORK    1,a2
    3285 000127d0     24c2          sll     6,a2                    ;*64
    3286 000127e0     0b22          addi    plyrproc_t,a2
         000127f0 00000000! 
    3287 00012810     9644          move    *a2+,a4,L
    3288 00012820     9645          move    *a2+,a5,L
    3289 00012830     b5a0          move    *a13(plyr_o1dist),a0
         00012840     0310  
    3290 00012850     0b40          cmpi    60,a0
         00012860     ffc3  
    3291 00012870     c509          jrge    gvfmchko2                       ;Too far?
    3292 00012880     17c0          subk    30,a0
    3293 00012890     c415          jrlt    gvfmdoelbo                      ;In close?
    3294 000128a0     b48e          move    *a4(plyr_seq),a14
         000128b0     0170  
    3295 000128c0     0bee          subi    STEAL_SEQ,a14
         000128d0     ffd4  
    3296 000128e0     ca10          jreq    gvfmdoelbo
    3297 000128f0     142e          subk    PUSH_SEQ-STEAL_SEQ,a14
    3298 00012900     ca0e          jreq    gvfmdoelbo
    3299 00012910           gvfmchko2
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   77

    3300 00012910     b5a0          move    *a13(plyr_o2dist),a0
         00012920     0330  
    3301 00012930     0b40          cmpi    60,a0
         00012940     ffc3  
    3302 00012950     c51b          jrge    gvfmstndwb                      ;Too far?
    3303 00012960     17c0          subk    30,a0
    3304 00012970     c407          jrlt    gvfmdoelbo                      ;In close?
    3305 00012980     b4ae          move    *a5(plyr_seq),a14
         00012990     0170  
    3306 000129a0     0bee          subi    STEAL_SEQ,a14
         000129b0     ffd4  
    3307 000129c0     ca02          jreq    gvfmdoelbo
    3308 000129d0     142e          subk    PUSH_SEQ-STEAL_SEQ,a14
    3309 000129e0     cb12          jrne    gvfmstndwb
    3310 000129f0           gvfmdoelbo
    3311 000129f0     b5ae          move    *a13(plyr_autoctrl),a14
         00012a00     03c0  
    3312 00012a10     cb0f          jrnz    gvfmstndwb
    3313                    
    3314 00012a20     07a1          move    @game_time,a1,L         ;If under 2 secs, no elbow
         00012a30 00000000! 
    3315 00012a50     0b41          cmpi    0200H,a1
         00012a60     fdff  
    3316 00012a70     c609          jrle    gvfmstndwb
    3317                    
    3318 00012a80     09c0          movi    ELBO_SEQ,a0
         00012a90     0039  
    3319 00012aa0     b5ae          move    *a13(plyr_seq),a14
         00012ab0     0170  
    3320 00012ac0     480e          cmp     a0,a14
    3321 00012ad0     cb0b          jrne    gvfmsetnostl            ;!In elbo?
    3322 00012ae0     8561          move    *a11,a1
    3323 00012af0     2741          sll     32-6,a1
    3324 00012b00     ca01          jrz     gvfmset                 ;No buttons?
    3325                    
    3326                    
    3327 00012b10     1880  gvfmstndwb      movk    STNDWB_SEQ,a0
    3328 00012b20     0d5f  gvfmset calla   plyr_setseq
         00012b30 00000000! 
    3329                    
    3330 00012b50     b7a0          move    *a13(plyr_ani1st_p),a0,L
         00012b60     01c0  
    3331 00012b70     4e04          move    a0,b4
    3332 00012b80     0960          rets
    3333                    
    3334                    
    3335                    
    3336 00012b90           gvfmsetnostl
    3337 00012b90     0d5f          calla   plyr_setseq
         00012ba0 00000000! 
    3338                    
    3339 00012bc0     b7a0          move    *a13(plyr_ani1st_p),a0,L
         00012bd0     01c0  
    3340 00012be0     4e04          move    a0,b4
    3341                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   78

    3342 00012bf0     09c0          movi    140,a0
         00012c00     008c  
    3343 00012c10     0580          move    a0,@steals_off          ;Don't allow steals for 60 ticks
         00012c20 00000000! 
    3344 00012c40     09c0          movi    80,a0
         00012c50     0050  
    3345 00012c60     0580          move    a0,@pushing_delay
         00012c70 00000000! 
    3346 00012c90     0960          rets
    3347                    
    3348                    
    3349                    
    3350                    
    3351 00012ca0            SUBR   seq_stealstand
    3352                    
    3353 00012ca0     b5a0          move    *a13(plyr_ownball),a0
         00012cb0     0260  
    3354 00012cc0     c1a4          jrp     seq_stand
    3355                    
    3356 00012cd0     1f46          btst    5,a6
    3357 00012ce0     caa2          jrz     seq_stand
    3358 00012cf0     0960          rets
    3359                    
    3360                    
    3361                    
    3362 00012d00            SUBR   seq_newdir
    3363                    
    3364 00012d00     9490          move    *b4+,b0
    3365 00012d10     4e17          move    b0,a7
    3366 00012d20     b5a0          move    *a13(plyr_anirevff),a0
         00012d30     0200  
    3367 00012d40     ca06          jrz     xowyx
    3368 00012d50     2f87          srl     4,a7
    3369 00012d60     2467          sll     3,a7
    3370 00012d70     0b27          addi    xowyt,a7
         00012d80 00012de0' 
    3371 00012da0     8ee7          movb    *a7,a7
    3372 00012db0     b0ed  xowyx   move    a7,*a13(plyr_dir)
         00012dc0     03d0  
    3373 00012dd0     0960          rets
    3374                    
    3375 00012de0       00  xowyt   .byte   0,7*16,6*16,5*16,4*16,3*16,2*16,1*16
    3376                    
    3377                    
    3378                    
    3379 00012e20            SUBR   seq_stayinair
    3380                    
    3381 00012e20     b5a0          move    *a13(plyr_jmpcnt),a0
         00012e30     0400  
    3382 00012e40     ca02          jrz     epusx
    3383 00012e50     0bf4          subi    2*32+3*16,b4
         00012e60     ff8f  
    3384 00012e70     0960  epusx   rets
    3385                    
    3386                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   79

    3387 00012e80            SUBR   seq_keepzx
    3388                    
    3389 00012e80     b700          move    *a8(OXVEL),a0,L
         00012e90     0020  
    3390 00012ea0     2020          sla     1,a0
    3391 00012eb0     b20d          move    a0,*a13(plyr_kpxvel),L
         00012ec0     0590  
    3392 00012ed0     b700          move    *a8(OZVEL),a0,L
         00012ee0     0060  
    3393 00012ef0     2020          sla     1,a0
    3394 00012f00     b20d          move    a0,*a13(plyr_kpzvel),L
         00012f10     0570  
    3395 00012f20     0960          rets
    3396                    
    3397                    
    3398 00012f30            SUBR   seq_injury
    3399                    
    3400 00012f30     19a0          movk    PS_INJURY,a0            ;>Inc try shot stat
    3401 00012f40     b5a1          move    *a13(plyr_num),a1
         00012f50     0100  
    3402 00012f60     0d5f          calla   inc_player_stat
         00012f70 00000000! 
    3403                    
    3404 00012f90     0960          rets
    3405                    
    3406                    
    3407 00012fa0            SUBR   seq_stuffzx
    3408                    
    3409 00012fa0     b7a0          move    *a13(plyr_kpxvel),a0,L
         00012fb0     0590  
    3410 00012fc0     b208          move    a0,*a8(OXVEL),L
         00012fd0     0020  
    3411 00012fe0     b7a0          move    *a13(plyr_kpzvel),a0,L
         00012ff0     0570  
    3412 00013000     b208          move    a0,*a8(OZVEL),L
         00013010     0060  
    3413                    
    3414 00013020     0960          rets
    3415                    
    3416                    
    3417 00013030            SUBR   seq_strtfire
    3418                    
    3419                    
    3420 00013030     b5a0          move    *a13(plyr_keeppal),a0
         00013040     0550  
    3421 00013050     cb14          jrnz    fifox
    3422 00013060     b500          move    *a8(OPAL),a0
         00013070     0150  
    3423 00013080     b00d          move    a0,*a13(plyr_keeppal)
         00013090     0550  
    3424 000130a0     09e0          movi    FIREFALP,a0
         000130b0 00000000! 
    3425 000130d0     0d5f          calla   pal_getf
         000130e0 00000000! 
    3426 00013100     b008          move    a0,*a8(OPAL)
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   80

         00013110     0150  
    3427 00013120     b7a1          move    *a13(plyr_headobj_p),a1,L
         00013130     04b0  
    3428 00013140     b42e          move    *a1(OPAL),a14
         00013150     0150  
    3429 00013160     b1cd          move    a14,*a13(plyr_hdkeeppal)
         00013170     0560  
    3430 00013180     b001          move    a0,*a1(OPAL)
         00013190     0150  
    3431 000131a0           fifox
    3432 000131a0     0960          rets
    3433                    
    3434                    
    3435 000131b0            SUBR   seq_stopfire
    3436                    
    3437 000131b0     b5a0          move    *a13(plyr_keeppal),a0
         000131c0     0550  
    3438 000131d0     ca0b          jrz     zeqjx
    3439 000131e0     b008          move    a0,*a8(OPAL)
         000131f0     0150  
    3440 00013200     b5a0          move    *a13(plyr_hdkeeppal),a0
         00013210     0560  
    3441 00013220     b7a1          move    *a13(plyr_headobj_p),a1,L
         00013230     04b0  
    3442 00013240     b001          move    a0,*a1(OPAL)
         00013250     0150  
    3443 00013260     5600          clr     a0
    3444 00013270     b00d          move    a0,*a13(plyr_keeppal)
         00013280     0550  
    3445 00013290           zeqjx
    3446 00013290     0960          rets
    3447                    
    3448                    
    3449 000132a0            SUBR   seq_smoke
    3450                    
    3451                            .ref    plyr_smoketrail2
    3452 000132a0                   CREATE0 plyr_smoketrail2
    3453 00013310     b3a0          move    a13,*a0(PA10),L
         00013320     0080  
    3454                    
    3455 00013330     0960          rets
    3456                    
    3457                    
    3458                    
    3459 00013340            SUBR   seq_snd
    3460                    
    3461 00013340     9690          move    *b4+,b0,L
    3462 00013350     4e10          move    b0,a0
    3463 00013360     c080          jauc    snd_play1
         00013370 00000000! 
    3464                    
    3465                    
    3466 00013390            SUBR   seq_noballoff
    3467                    
    3468 00013390     b5a0          move    *a13(plyr_seqflgs),a0
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   81

         000133a0     0180  
    3469 000133b0     0b80          andni   NOBALL_M,a0
         000133c0 00000020  
    3470 000133e0     b00d          move    a0,*a13(plyr_seqflgs)
         000133f0     0180  
    3471                    
    3472 00013400     0960          rets
    3473                    
    3474                    
    3475                    
    3476 00013410            SUBR   seq_resetseq
    3477                    
    3478 00013410     5600          clr     a0
    3479 00013420     b00d          move    a0,*a13(plyr_nojoy)
         00013430     03b0  
    3480                    
    3481 00013440     b5a0          move    *a13(plyr_seq),a0
         00013450     0170  
    3482 00013460     4cc1          move    a6,a1
    3483 00013470     2781          sll     32-4,a1
    3484 00013480     cb05          jrnz    wjthset                 ;Pushing joy?
    3485                    
    3486 00013490     1860          movk    STNDDEF_SEQ,a0          ;>Setup stand sequence
    3487 000134a0     b5ae          move    *a13(plyr_ownball),a14
         000134b0     0260  
    3488 000134c0     c601          jrle    wjthset
    3489 000134d0     1901          movk    STNDDRIBDEF_SEQ,a1
    3490                    
    3491 000134e0     c000  wjthset jruc    plyr_setseq
         000134f0     ecb0! 
    3492                    
    3493                    
    3494                    
    3495 00013500            SUBR   seq_run
    3496                    
    3497 00013500     4e90          move    b4,a0
    3498 00013510     0b00          addi    4*16,a0
         00013520     0040  
    3499 00013530     b20d          move    a0,*a13(plyr_ani1st_p),L
         00013540     01c0  
    3500 00013550     0960          rets
    3501                    
    3502                    
    3503                    
    3504 00013560            SUBR   seq_jump
    3505                    
    3506 00013560     b5ae          move    *a13(plyr_seq),a14
         00013570     0170  
    3507 00013580     0b4e          cmpi    LAYUP_SEQ,a14
         00013590     ffe4  
    3508 000135a0     ca1a          jreq    xasajmp
    3509 000135b0     0b4e          cmpi    HOOK_SEQ,a14
         000135c0     ffe6  
    3510 000135d0     ca17          jreq    xasajmp
    3511 000135e0     0b4e          cmpi    HOOK2_SEQ,a14
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   82

         000135f0     ffe5  
    3512 00013600     ca14          jreq    xasajmp
    3513                    
    3514                    
    3515 00013610     07a0          move    @game_time,a0,L
         00013620 00000000! 
    3516 00013640     0b40          cmpi    0400H,a0
         00013650     fbff  
    3517 00013660     c40e          jrlt    xasajmp
    3518                    
    3519 00013670     1f66          btst    4,a6                    ;But1 (Shoot/block)
    3520 00013680     cb0c          jrnz    seq_jump2               ;Fake?
    3521 00013690                   SOUND1  fake_snd
    3522 000136f0     c000          jruc    seq_stand               ;Fake?
         00013700     ff00  
    3523                    
    3524 00013710     f981  fake_snd        .word   0f981H,60,0816eH,0      ;Head fake
    3525                    
    3526                    
    3527 00013750            SUBR   seq_jump2
    3528                    
    3529 00013750           xasajmp
    3530 00013750     1820          movk    1,a0                    ;Start jump
    3531 00013760     b00d          move    a0,*a13(plyr_jmpcnt)
         00013770     0400  
    3532                    
    3533 00013780     b702          move    *a8(OXVEL),a2,L         ;>Reduce vel
         00013790     0020  
    3534 000137a0     b703          move    *a8(OZVEL),a3,L
         000137b0     0060  
    3535 000137c0     2bc2          sra     2,a2
    3536 000137d0     2bc3          sra     2,a3
    3537                    
    3538 000137e0     b5a0          move    *a13(plyr_seq),a0
         000137f0     0170  
    3539 00013800     0b40          cmpi    LAYUP_SEQ,a0
         00013810     ffe4  
    3540 00013820     ca25          jrz     xasanodesp
    3541                    
    3542 00013830     b5a5          move    *a13(plyr_turbon),a5
         00013840     0250  
    3543                    
    3544 00013850     b5ae          move    *a13(plyr_num),a14
         00013860     0100  
    3545 00013870     05a0          move    @plyrnumonfire,a0
         00013880 00000000- 
    3546 000138a0     480e          cmp     a0,a14
    3547 000138b0     cb02          jrnz    xasafire1                       ;If on fire, don't do turbo jump!
    3548 000138c0     56a5          clr     a5
    3549 000138d0     c00a          jruc    xasafire
    3550 000138e0           xasafire1
    3551                    
    3552 000138e0     b7a1          move    *a13(plyr_PDATA_p),a1,L ;If lotsa turbo, still do tall jump!
         000138f0     0130  
    3553 00013900     b421          move    *a1(ply_turbo),a1
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   83

         00013910     0040  
    3554 00013920     0b41          cmpi    24,a1
         00013930     ffe7  
    3555 00013940     c403          jrlt    xasafire                        ;Turbo too low?
    3556                    
    3557 00013950     b5a5          move    *a13(plyr_turbon),a5
         00013960     0250  
    3558 00013970     cb02          jrnz    xasaturb                        ;Br=taller jump!
    3559 00013980           xasafire
    3560 00013980     2be2          sra     1,a2
    3561 00013990     2be3          sra     1,a3
    3562 000139a0           xasaturb
    3563 000139a0     b5a0          move    *a13(plyr_seq),a0
         000139b0     0170  
    3564 000139c0     17e0          subk    SHOOTDESP3_SEQ,a0
    3565 000139d0     cb0a          jrne    xasanodesp
    3566 000139e0     09e2          movi    020000H,a2              ;For this desperation shot, we
         000139f0 00020000  
    3567 00013a10     b5a0          move    *a13(plyr_num),a0       ;need some x velocity
         00013a20     0100  
    3568 00013a30     1440          subk    2,a0
    3569 00013a40     c403          jrlt    xasanodesp
    3570 00013a50     09e2          movi    -020000H,a2
         00013a60 fffe0000  
    3571 00013a80           xasanodesp
    3572                    
    3573                    
    3574 00013a80     b248          move    a2,*a8(OXVEL),L
         00013a90     0020  
    3575 00013aa0     b268          move    a3,*a8(OZVEL),L
         00013ab0     0060  
    3576                    
    3577                    
    3578 00013ac0     b50e          move    *a8(OZPOS),a14          ;894 to 1379 (Z range 486)
         00013ad0     00d0  
    3579 00013ae0     0bee          subi    400,a14
         00013af0     fe6f  
    3580 00013b00     09c1          movi    -070H,a1
         00013b10     ff90  
    3581 00013b20     5dc1          mpys    a14,a1
    3582 00013b30     0b21          addi    -024000H,a1
         00013b40 fffdc000  
    3583                    
    3584 00013b60     4ca5          move    a5,a5
    3585 00013b70     ca02          jrz     xasanotur
    3586 00013b80     0b01          addi    -08000H,a1
         00013b90     8000  
    3587 00013ba0           xasanotur
    3588 00013ba0     b5a0          move    *a13(plyr_seq),a0
         00013bb0     0170  
    3589 00013bc0     0b40          cmpi    LAYUP_SEQ,a0
         00013bd0     ffe4  
    3590 00013be0     ca02          jreq    xasanoly2
    3591 00013bf0     0b01          addi    -08000H,a1
         00013c00     8000  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   84

    3592 00013c10           xasanoly2
    3593 00013c10     b5a0          move    *a13(plyr_seqflgs),a0
         00013c20     0180  
    3594 00013c30     1ec0          btst    SHOOT_B,a0
    3595 00013c40     ca09          jrz     xasanotsh
    3596 00013c50     4c20          move    a1,a0                   ;-1/16
    3597 00013c60     2b80          sra     4,a0
    3598 00013c70     4401          sub     a0,a1
    3599                    
    3600 00013c80     b5ae          move    *a13(plyr_seq),a14
         00013c90     0170  
    3601 00013ca0     0b4e          cmpi    QSHOOT_SEQ,a14
         00013cb0     ffe7  
    3602 00013cc0     cb01          jrnz    xasanotsh
    3603 00013cd0     2be1          sra     1,a1
    3604                    
    3605 00013ce0           xasanotsh
    3606 00013ce0     b228          move    a1,*a8(OYVEL),L
         00013cf0     0040  
    3607                    
    3608 00013d00     0960          rets
    3609                    
    3610                    
    3611                    
    3612                    
    3613 00013d10            SUBR   seq_block
    3614                    
    3615 00013d10                   PUSH    a6,a7,a9
    3616                    
    3617 00013d30     1820          movk    1,a0                    ;Start jump
    3618 00013d40     b00d          move    a0,*a13(plyr_jmpcnt)
         00013d50     0400  
    3619                    
    3620                    
    3621 00013d60     07a5          move    @ballobj_p,a5,L         ;0CaHlc where ball is headed
         00013d70 00000010- 
    3622                    
    3623 00013d90     05ae          move    @ballpnum,a14
         00013da0 00000030- 
    3624 00013dc0     ce57          jrn     frgebinair                      ;Ball in air?
    3625                    
    3626                    
    3627 00013dd0     b5a0          move    *a13(plyr_myhoopx),a0
         00013de0     02c0  
    3628 00013df0     09c1          movi    CZMID,a1
         00013e00     0492  
    3629                    
    3630 00013e10     24ae          sll     5,a14
    3631 00013e20     0b2e          addi    plyrproc_t,a14
         00013e30 00000000! 
    3632 00013e50     87ce          move    *a14,a14,L
    3633 00013e60     b5c2          move    *a14(plyr_seqflgs),a2
         00013e70     0180  
    3634 00013e80     1fc2          btst    DUNK_B,a2
    3635 00013e90     ca0b          jrz     frgenodunk
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   85

    3636                    
    3637 00013ea0     4c06          move    a0,a6                   ;>Jump at rim
    3638 00013eb0     4c27          move    a1,a7
    3639 00013ec0     09e9          movi    -200<<16,a9
         00013ed0 ff380000  
    3640 00013ef0     10c6          addk    6,a6
    3641 00013f00     0b46          cmpi    WRLDMID,a6
         00013f10     dfff  
    3642 00013f20     c459          jrlt    frgecalcintercept
    3643 00013f30     1586          subk    6+6,a6
    3644 00013f40     c057          jruc    frgecalcintercept
    3645                    
    3646                    
    3647 00013f50           frgenodunk
    3648 00013f50     b5ae          move    *a13(plyr_seq),a14
         00013f60     0170  
    3649 00013f70     162e          subk    BLOCK_SEQ,a14
    3650 00013f80     cb1e          jrne    frgenoblk
    3651 00013f90     1014          addk    32,b4                   ;Skip
    3652                    
    3653                    
    3654 00013fa0                   PULL    a6,a7,a9
    3655                    
    3656                    
    3657 00013fc0     b5a0          move    *a13(plyr_balldist),a0
         00013fd0     0350  
    3658 00013fe0     0b40          cmpi    0100H,a0                        ;About 10 feet away from ball
         00013ff0     feff  
    3659 00014000     c400          jrlt    seq_jump2
         00014010     ff73  
    3660                    
    3661 00014020     1820          movk    1,a0                    ;Start jump
    3662 00014030     b00d          move    a0,*a13(plyr_jmpcnt)
         00014040     0400  
    3663                    
    3664 00014050     5600          clr     a0
    3665 00014060     b208          move    a0,*a8(OXVEL),L         ;Zero vel
         00014070     0020  
    3666 00014080     b208          move    a0,*a8(OZVEL),L
         00014090     0060  
    3667                    
    3668 000140a0     b50e          move    *a8(OZPOS),a14          ;894 to 1379 (Z range 486)
         000140b0     00d0  
    3669 000140c0     0bee          subi    400,a14
         000140d0     fe6f  
    3670 000140e0     09c1          movi    -030H,a1                        ;Smaller vertical jump
         000140f0     ffd0  
    3671 00014100     5dc1          mpys    a14,a1
    3672 00014110     0b21          addi    -024000H,a1
         00014120 fffdc000  
    3673                    
    3674 00014140     b228          move    a1,*a8(OYVEL),L
         00014150     0040  
    3675                    
    3676 00014160     0960          rets
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   86

    3677                    
    3678 00014170           frgenoblk
    3679 00014170     b4a6          move    *a5(OXPOS),a6           ;>In front of plyr between basket
         00014180     0090  
    3680 00014190     b4ae          move    *a5(OXANI+16),a14
         000141a0     01f0  
    3681 000141b0     41c6          add     a14,a6
    3682 000141c0     b4a7          move    *a5(OZPOS),a7
         000141d0     00d0  
    3683 000141e0     09e9          movi    -200<<16,a9
         000141f0 ff380000  
    3684                    
    3685 00014210     44c0          sub     a6,a0
    3686 00014220     44e1          sub     a7,a1
    3687 00014230     4c02          move    a0,a2
    3688 00014240     4c23          move    a1,a3
    3689 00014250     0382          abs     a2
    3690 00014260     0383          abs     a3
    3691 00014270     4862          cmp     a3,a2
    3692 00014280     c505          jrge    frgescl
    3693 00014290     4c62          move    a3,a2
    3694 000142a0     c003          jruc    frgescl
    3695                    
    3696 000142b0     2be0  frgescllp       sra     1,a0                    ;Scale down
    3697 000142c0     2be1          sra     1,a1
    3698 000142d0     2fe2          srl     1,a2
    3699 000142e0     0b42  frgescl cmpi    22,a2
         000142f0     ffe9  
    3700 00014300     c7fa          jrgt    frgescllp
    3701                    
    3702 00014310     4006          add     a0,a6
    3703 00014320     4027          add     a1,a7
    3704                    
    3705 00014330     c018          jruc    frgecalcintercept
    3706                    
    3707 00014340           frgebinair
    3708 00014340     b6a6          move    *a5(OXVAL),a6,L
         00014350     0080  
    3709 00014360     b6a0          move    *a5(OXANI),a0,L
         00014370     01e0  
    3710 00014380     4006          add     a0,a6
    3711 00014390     b6a7          move    *a5(OZVAL),a7,L
         000143a0     00c0  
    3712 000143b0     b6a9          move    *a5(OYVAL),a9,L
         000143c0     00a0  
    3713                    
    3714 000143d0     b6a0          move    *a5(OXVEL),a0,L
         000143e0     0020  
    3715 000143f0     b6a1          move    *a5(OZVEL),a1,L
         00014400     0060  
    3716 00014410     b6a2          move    *a5(OYVEL),a2,L
         00014420     0040  
    3717 00014430     1bd0          movk    30,b0
    3718 00014440           frgenewblp
    3719 00014440     4006          add     a0,a6
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   87

    3720 00014450     4027          add     a1,a7
    3721 00014460     4049          add     a2,a9
    3722 00014470     0b02          addi    GRAVB,a2
         00014480     2600  
    3723 00014490     3cd0          dsj     b0,frgenewblp
    3724                    
    3725 000144a0     2a06          sra     16,a6
    3726 000144b0     2a07          sra     16,a7
    3727                    
    3728 000144c0           frgecalcintercept
    3729                    
    3730 000144c0     9690          move    *b4+,b0,L
    3731 000144d0     4e12          move    b0,a2                   ;*Key img
    3732                    
    3733 000144e0     1bc4          movk    30,a4
    3734                    
    3735 000144f0     5663          clr     a3
    3736 00014500     56a5          clr     a5
    3737 00014510     07a0          move    @ballprcv_p,a0,L
         00014520 000000e0- 
    3738 00014540     49a0          cmp     a13,a0
    3739 00014550     ca37          jreq    frgesetvel                      ;I'm receiving?
    3740                    
    3741                    
    3742 00014560     b441          move    *a2(IANIOFFX),a1
         00014570     0020  
    3743 00014580     b44e          move    *a2(IANI2X),a14
         00014590     0090  
    3744 000145a0     45c1          sub     a14,a1
    3745 000145b0     09c0          movi    850,a0
         000145c0     0352  
    3746 000145d0     5c01          mpys    a0,a1
    3747 000145e0     2ac1          sra     10,a1                   ;/1024
    3748                    
    3749 000145f0     b5ae          move    *a13(plyr_newdir),a14
         00014600     03e0  
    3750 00014610     c502          jrge    frgendok
    3751 00014620     b5ae          move    *a13(plyr_dir),a14
         00014630     03d0  
    3752 00014640     110e  frgendok        addk    8,a14
    3753 00014650     272e          sll     32-7,a14
    3754 00014660     2c6e          srl     32-7+4,a14
    3755 00014670     148e          subk    4,a14
    3756 00014680     c601          jrle    frgenof                 ;No flip?
    3757 00014690     03a1          neg     a1
    3758 000146a0           frgenof
    3759 000146a0     4026          add     a1,a6
    3760                    
    3761                    
    3762 000146b0     4cc3          move    a6,a3
    3763 000146c0     4ce5          move    a7,a5
    3764                    
    3765 000146d0     b501          move    *a8(OXPOS),a1
         000146e0     0090  
    3766 000146f0     b50e          move    *a8(OXANI+16),a14
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   88

         00014700     01f0  
    3767 00014710     41c1          add     a14,a1
    3768 00014720     4423          sub     a1,a3                   ;X delta
    3769                    
    3770                    
    3771 00014730     b501          move    *a8(OZPOS),a1
         00014740     00d0  
    3772 00014750     4425          sub     a1,a5                   ;Z delta
    3773                    
    3774 00014760     1bc1          movk    30,a1                   ;Max delta
    3775 00014770     b5ae          move    *a13(plyr_seq),a14
         00014780     0170  
    3776 00014790     168e          subk    REBOUND_SEQ,a14
    3777 000147a0     cb01          jrne    frgenoreb
    3778 000147b0     1281          addk    20,a1
    3779                    
    3780 000147c0     4823  frgenoreb       cmp     a1,a3
    3781 000147d0     c401          jrlt    frgex1ok
    3782 000147e0     4c23          move    a1,a3
    3783 000147f0           frgex1ok
    3784 000147f0     4825          cmp     a1,a5
    3785 00014800     c401          jrlt    frgez1ok
    3786 00014810     4c25          move    a1,a5
    3787 00014820           frgez1ok
    3788 00014820     03a1          neg     a1
    3789 00014830     4823          cmp     a1,a3
    3790 00014840     c701          jrgt    frgex2ok
    3791 00014850     4c23          move    a1,a3
    3792 00014860           frgex2ok
    3793 00014860     4825          cmp     a1,a5
    3794 00014870     c701          jrgt    frgez2ok
    3795 00014880     4c25          move    a1,a5
    3796 00014890           frgez2ok
    3797                    
    3798 00014890     2603          sll     16,a3
    3799 000148a0     2605          sll     16,a5
    3800 000148b0     5883          divs    a4,a3
    3801 000148c0     5885          divs    a4,a5
    3802 000148d0           frgesetvel
    3803 000148d0     b268          move    a3,*a8(OXVEL),L
         000148e0     0020  
    3804 000148f0     b2a8          move    a5,*a8(OZVEL),L
         00014900     0060  
    3805                    
    3806 00014910     09c1          movi    -GRAV/2,a1
         00014920     ed00  
    3807 00014930     5c81          mpys    a4,a1
    3808 00014940     b703          move    *a8(OYVAL),a3,L         ;Adjust for hgt difference
         00014950     00a0  
    3809 00014960     4523          sub     a9,a3                   ;- if above
    3810 00014970     5883          divs    a4,a3
    3811 00014980     4461          sub     a3,a1
    3812 00014990     0b61          cmpi    -03c000H,a1
         000149a0 0003bfff  
    3813 000149c0     c403          jrlt    frgeminok
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   89

    3814 000149d0     09e1          movi    -03c000H,a1             ;Min
         000149e0 fffc4000  
    3815 00014a00           frgeminok
    3816                    
    3817 00014a00     b5ae          move    *a13(plyr_num),a14
         00014a10     0100  
    3818 00014a20     05a6          move    @plyrnumonfire,a6
         00014a30 00000000- 
    3819 00014a50     49c6          cmp     a14,a6
    3820 00014a60     cb08          jrnz    frgenofire
    3821                    
    3822 00014a70     0b61          cmpi    -050200H,a1             ;4a200
         00014a80 000501ff  
    3823 00014aa0     c70b          jrgt    frgemaxok
    3824 00014ab0     09e1          movi    -050200H,a1
         00014ac0 fffafe00  
    3825 00014ae0     c007          jruc    frgemaxok
    3826 00014af0           frgenofire
    3827 00014af0     0b61          cmpi    -04b200H,a1             ;4a200
         00014b00 0004b1ff  
    3828 00014b20     c703          jrgt    frgemaxok
    3829 00014b30     09e1          movi    -04b200H,a1
         00014b40 fffb4e00  
    3830 00014b60           frgemaxok
    3831 00014b60     b228          move    a1,*a8(OYVEL),L
         00014b70     0040  
    3832                    
    3833                    
    3834 00014b80           frgex   PULL    a6,a7,a9
    3835 00014ba0     0960          rets
    3836                    
    3837                    
    3838 00014bb0     049e  frgez_t .word   CZMID+12,CZMID+8,CZMID,CZMID-8
    3839 00014bf0     0486          .word   CZMID-12,CZMID-8,CZMID,CZMID+8
    3840 00014c30     049e          .word   CZMID+12
    3841                    
    3842                    
    3843                    
    3844 00014c40            SUBR   seq_rebounda
    3845                    
    3846 00014c40     05ae          move    @ballpnum,a14
         00014c50 00000030- 
    3847 00014c70     c500          jrge    seq_stand               ;Someone grabbed ball?
         00014c80     fda8  
    3848                    
    3849                    
    3850 00014c90                   PUSH    a6,a7,a9
    3851                    
    3852                    
    3853 00014cb0     1820          movk    1,a0                    ;Start jump
    3854 00014cc0     b00d          move    a0,*a13(plyr_jmpcnt)
         00014cd0     0400  
    3855                    
    3856                    
    3857 00014ce0     07a5          move    @ballobj_p,a5,L         ;0CaHlc where ball is headed
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   90

         00014cf0 00000010- 
    3858                    
    3859 00014d10     b6a6          move    *a5(OXVAL),a6,L
         00014d20     0080  
    3860 00014d30     b6a0          move    *a5(OXANI),a0,L
         00014d40     01e0  
    3861 00014d50     4006          add     a0,a6
    3862 00014d60     b6a7          move    *a5(OZVAL),a7,L
         00014d70     00c0  
    3863 00014d80     b6a9          move    *a5(OYVAL),a9,L
         00014d90     00a0  
    3864                    
    3865 00014da0     b6a0          move    *a5(OXVEL),a0,L
         00014db0     0020  
    3866 00014dc0     b6a1          move    *a5(OZVEL),a1,L
         00014dd0     0060  
    3867 00014de0     b6a2          move    *a5(OYVEL),a2,L
         00014df0     0040  
    3868 00014e00     1a90          movk    20,b0
    3869 00014e10     09ce          movi    GRAVB,a14
         00014e20     2600  
    3870 00014e30           osutnewblp
    3871 00014e30     4006          add     a0,a6
    3872 00014e40     4027          add     a1,a7
    3873 00014e50     4049          add     a2,a9
    3874 00014e60     41c2          add     a14,a2
    3875 00014e70     3cb0          dsj     b0,osutnewblp
    3876                    
    3877 00014e80     2a06          sra     16,a6
    3878 00014e90     2a07          sra     16,a7
    3879                    
    3880                    
    3881 00014ea0     9690          move    *b4+,b0,L
    3882 00014eb0     4e12          move    b0,a2                   ;*Key img
    3883                    
    3884 00014ec0     1a84          movk    20,a4
    3885                    
    3886                    
    3887 00014ed0     b441          move    *a2(IANIOFFX),a1
         00014ee0     0020  
    3888 00014ef0     b44e          move    *a2(IANI2X),a14
         00014f00     0090  
    3889 00014f10     45c1          sub     a14,a1
    3890 00014f20     09c0          movi    850,a0
         00014f30     0352  
    3891 00014f40     5c01          mpys    a0,a1
    3892 00014f50     2ac1          sra     10,a1                   ;/1024
    3893                    
    3894 00014f60     b5ae          move    *a13(plyr_newdir),a14
         00014f70     03e0  
    3895 00014f80     c502          jrge    osutndok
    3896 00014f90     b5ae          move    *a13(plyr_dir),a14
         00014fa0     03d0  
    3897 00014fb0     110e  osutndok        addk    8,a14
    3898 00014fc0     272e          sll     32-7,a14
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   91

    3899 00014fd0     2c6e          srl     32-7+4,a14
    3900 00014fe0     148e          subk    4,a14
    3901 00014ff0     c601          jrle    osutnof                 ;No flip?
    3902 00015000     03a1          neg     a1
    3903 00015010           osutnof
    3904 00015010     4026          add     a1,a6
    3905                    
    3906                    
    3907 00015020     4cc3          move    a6,a3
    3908 00015030     4ce5          move    a7,a5
    3909                    
    3910 00015040     b501          move    *a8(OXPOS),a1
         00015050     0090  
    3911 00015060     b50e          move    *a8(OXANI+16),a14
         00015070     01f0  
    3912 00015080     41c1          add     a14,a1
    3913 00015090     4423          sub     a1,a3                   ;X delta
    3914                    
    3915                    
    3916 000150a0     b501          move    *a8(OZPOS),a1
         000150b0     00d0  
    3917 000150c0     4425          sub     a1,a5                   ;Z delta
    3918                    
    3919 000150d0     09c1          movi    50,a1                   ;Max delta (was 30)
         000150e0     0032  
    3920 000150f0     4823          cmp     a1,a3
    3921 00015100     c401          jrlt    osutx1ok
    3922 00015110     4c23          move    a1,a3
    3923 00015120           osutx1ok
    3924 00015120     4825          cmp     a1,a5
    3925 00015130     c401          jrlt    osutz1ok
    3926 00015140     4c25          move    a1,a5
    3927 00015150           osutz1ok
    3928 00015150     03a1          neg     a1
    3929 00015160     4823          cmp     a1,a3
    3930 00015170     c701          jrgt    osutx2ok
    3931 00015180     4c23          move    a1,a3
    3932 00015190           osutx2ok
    3933 00015190     4825          cmp     a1,a5
    3934 000151a0     c701          jrgt    osutz2ok
    3935 000151b0     4c25          move    a1,a5
    3936 000151c0           osutz2ok
    3937                    
    3938 000151c0     2603          sll     16,a3
    3939 000151d0     2605          sll     16,a5
    3940 000151e0     5883          divs    a4,a3
    3941 000151f0     5885          divs    a4,a5
    3942 00015200           osutsetvel
    3943 00015200     b268          move    a3,*a8(OXVEL),L
         00015210     0020  
    3944 00015220     b2a8          move    a5,*a8(OZVEL),L
         00015230     0060  
    3945                    
    3946 00015240     09c1          movi    -GRAV/2,a1
         00015250     ed00  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   92

    3947 00015260     5c81          mpys    a4,a1
    3948 00015270     b703          move    *a8(OYVAL),a3,L         ;Adjust for hgt difference
         00015280     00a0  
    3949 00015290     4523          sub     a9,a3                   ;- if above
    3950 000152a0     5883          divs    a4,a3
    3951 000152b0     4461          sub     a3,a1
    3952 000152c0     0b61          cmpi    -01c000H,a1
         000152d0 0001bfff  
    3953 000152f0     c403          jrlt    osutminok
    3954 00015300     09e1          movi    -01c000H,a1             ;Min
         00015310 fffe4000  
    3955 00015330           osutminok
    3956                    
    3957                    
    3958 00015330     b228  osutmaxok       move    a1,*a8(OYVEL),L
         00015340     0040  
    3959                    
    3960                    
    3961 00015350                   PULL    a6,a7,a9
    3962 00015370     0960          rets
    3963                    
    3964                    
    3965                    
    3966 00015380            SUBR   seq_strtdunk
    3967                    
    3968 00015380     9690          move    *b4+,b0,L
    3969 00015390     4e12          move    b0,a2                   ;*Slam img
    3970                    
    3971 000153a0     9490          move    *b4+,b0
    3972 000153b0     4e14          move    b0,a4                   ;fdglticks till we reach rim
    3973                    
    3974                    
    3975 000153c0     1820          movk    1,a0                    ;Start jump
    3976 000153d0     b00d          move    a0,*a13(plyr_jmpcnt)
         000153e0     0400  
    3977                    
    3978                    
    3979 000153f0     b5a3          move    *a13(plyr_ohoopx),a3
         00015400     02d0  
    3980                    
    3981 00015410     b441          move    *a2(IANIOFFX),a1
         00015420     0020  
    3982 00015430     b44e          move    *a2(IANI2X),a14
         00015440     0090  
    3983 00015450     45c1          sub     a14,a1
    3984 00015460     09c0          movi    850,a0
         00015470     0352  
    3985 00015480     5c01          mpys    a0,a1
    3986 00015490     2ac1          sra     10,a1                   ;/1024
    3987                    
    3988                    
    3989 000154a0     b50e          move    *a8(OCTRL),a14
         000154b0     00f0  
    3990 000154c0     1f6e          btst    B_FLIPH,a14
    3991 000154d0     ca01          jrz     fdglnof
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   93

    3992 000154e0     03a1          neg     a1
    3993 000154f0           fdglnof
    3994 000154f0     4023          add     a1,a3
    3995                    
    3996                    
    3997 00015500     b501          move    *a8(OXPOS),a1
         00015510     0090  
    3998 00015520     b50e          move    *a8(OXANI+16),a14
         00015530     01f0  
    3999 00015540     41c1          add     a14,a1
    4000 00015550     4423          sub     a1,a3                   ;X delta
    4001                    
    4002 00015560     b5ae          move    *a13(plyr_dir),a14
         00015570     03d0  
    4003 00015580     110e          addk    8,a14                   ;Round up
    4004 00015590     2f8e          srl     4,a14                   ;Lose frac
    4005 000155a0     248e          sll     4,a14                   ;*16
    4006 000155b0     0b2e          addi    fdglz_t,a14
         000155c0 00015b30' 
    4007 000155e0     85c5          move    *a14,a5
    4008 000155f0     b501          move    *a8(OZPOS),a1
         00015600     00d0  
    4009 00015610     4425          sub     a1,a5                   ;Y delta
    4010                    
    4011 00015620     2603          sll     16,a3
    4012 00015630     2605          sll     16,a5
    4013 00015640     5883          divs    a4,a3
    4014 00015650     5885          divs    a4,a5
    4015                    
    4016 00015660     b5a0          move    *a13(plyr_seqflgs),a0
         00015670     0180  
    4017 00015680     1e00          btst    LAYUP_B,a0
    4018 00015690     ca0c          jrz     fdglnolay
    4019                    
    4020 000156a0     18a0          movk    LAY_UP,a0
    4021 000156b0     0580          move    a0,@shot_type
         000156c0 00000000! 
    4022                    
    4023 000156e0     186e          movk    3,a14
    4024 000156f0     4c67          move    a3,a7
    4025 00015700     59c7          divs    a14,a7
    4026 00015710     44e3          sub     a7,a3
    4027                    
    4028 00015720     4ca7          move    a5,a7
    4029 00015730     59c7          divs    a14,a7
    4030 00015740     44e5          sub     a7,a5
    4031                    
    4032 00015750     c006          jruc    fdgllayin
    4033 00015760           fdglnolay
    4034 00015760     1880          movk    PS_DUNKS_TRY,a0         ;>Inc dunk stats
    4035 00015770     b5a1          move    *a13(plyr_num),a1
         00015780     0100  
    4036 00015790     0d5f          calla   inc_player_stat
         000157a0 00000000! 
    4037                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   94

    4038 000157c0           fdgllayin
    4039 000157c0     b268          move    a3,*a8(OXVEL),L
         000157d0     0020  
    4040 000157e0     b2a8          move    a5,*a8(OZVEL),L
         000157f0     0060  
    4041                    
    4042 00015800     09c1          movi    -GRAV/2,a1
         00015810     ed00  
    4043 00015820     5c81          mpys    a4,a1
    4044 00015830     b703          move    *a8(OYVAL),a3,L         ;Adjust for hgt difference
         00015840     00a0  
    4045 00015850     0d03          subi    (HOOPY+12)<<16,a3       ;- if above
         00015860 006bffff  
    4046 00015880     5883          divs    a4,a3
    4047 00015890     4461          sub     a3,a1
    4048 000158a0     b228          move    a1,*a8(OYVEL),L
         000158b0     0040  
    4049                    
    4050 000158c0     5600          clr     a0
    4051 000158d0     0580          move    a0,@plyrcharge
         000158e0 00000000! 
    4052 00015900     0580          move    a0,@slamming
         00015910 00000190- 
    4053                    
    4054 00015930     09c0          movi    PS_2PTS_TRY,a0
         00015940     0000  
    4055 00015950     b5a1          move    *a13(plyr_num),a1
         00015960     0100  
    4056 00015970     0d5f          calla   inc_player_stat
         00015980 00000000! 
    4057                    
    4058 000159a0     0b44          cmpi    62,a4                   ;60
         000159b0     ffc1  
    4059 000159c0     c415          jrlt    fdglnofl
    4060                    
    4061 000159d0                   PUSH    a10
    4062 000159e0     574a          clr     a10
    4063 000159f0     0b44          cmpi    48h,a4
         00015a00     ffb7  
    4064 00015a10     c406          jrlt    fdglnosnd
    4065 00015a20     09c0          movi    20,a0                   ;2% do bogus snd
         00015a30     0014  
    4066 00015a40     0d3f          callr   RNDPER
         00015a50     ea5a! 
    4067 00015a60     c201          jrls    fdglnosnd       
    4068 00015a70     182a          movk    1,a10
    4069 00015a80           fdglnosnd       
    4070 00015a80     4ce2          move    a7,a2
    4071 00015a90                   CREATE0 plyr_camflash
    4072 00015b00     4c47          move    a2,a7
    4073 00015b10                   PULL    a10
    4074                    
    4075 00015b20           fdglnofl
    4076 00015b20     0960          rets
    4077                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   95

    4078                    
    4079 00015b30     049e  fdglz_t .word   CZMID+12,CZMID+8,CZMID,CZMID-8
    4080 00015b70     0486          .word   CZMID-12,CZMID-8,CZMID,CZMID+8
    4081 00015bb0     049e          .word   CZMID+12
    4082                    
    4083                    
    4084                    
    4085                            .ref    gndpos_t
    4086                    
    4087 00015bc0            SUBR   plyr_camflash
    4088                    
    4089 00015bc0     18e0          movk    7,a0
    4090 00015bd0     0d3f          callr   rnd
         00015be0     fc95  
    4091 00015bf0     1220          addk    17,a0
    4092 00015c00     4c08          move    a0,a8
    4093 00015c10           jcbqlp  CREATE0 plyr_cflsh
    4094 00015c80     4d4a          move    a10,a10
    4095 00015c90     ca07          jrz     jcbqnosnd
    4096 00015ca0                   CREATE0 plyr_cflsh_snd
    4097 00015d10           jcbqnosnd
    4098 00015d10     1880          movk    4,a0                    ;7
    4099 00015d20     0d3f          callr   rnd
         00015d30     fc80  
    4100 00015d40     1040          addk    2,a0
    4101 00015d50     0d5f          calla   PRCSLP
         00015d60 00000000! 
    4102 00015d80     3f08          dsj     a8,jcbqlp
    4103 00015d90                   DIE
    4104                    
    4105 00015dc0           plyr_cflsh_snd
    4106 00015dc0     1860          movk    3,a0
    4107 00015dd0     0d3f          callr   rndrng0
         00015de0     fc83  
    4108 00015df0     24a0          sll     5,a0
    4109 00015e00     0b20          addi    flsh_t,a0
         00015e10 00015ea0' 
    4110 00015e30     8600          move    *a0,a0,L
    4111 00015e40     0d5f  jcbqs1  calla   snd_play1
         00015e50 00000000! 
    4112 00015e70                   DIE
    4113                    
    4114 00015ea0 00015f20' flsh_t  .long   flsh1_snd,flsh1_snd,flsh2_snd,flsh2_snd
    4115                    
    4116 00015f20     fabe  flsh1_snd       .word   0fabeH,5,080a8H,0
    4117 00015f60     fbbe  flsh2_snd       .word   0fbbeH,8,080a9H,0
    4118                    
    4119 00015fa0           plyr_cflsh
    4120 00015fa0     09c0          movi    110,a0
         00015fb0     006e  
    4121 00015fc0     0d3f          callr   rndrng0
         00015fd0     fc64  
    4122 00015fe0     0be0          subi    50,a0
         00015ff0     ffcd  
    4123 00016000     4c02          move    a0,a2
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   96

    4124                    
    4125 00016010     09c0          movi    399,a0
         00016020     018f  
    4126 00016030     0d3f          callr   rndrng0
         00016040     fc5d  
    4127 00016050     05ae          move    @WORLDTLX+16,a14
         00016060 00000010! 
    4128 00016080     0bee          subi    02000H-200,a14
         00016090     e0c7  
    4129 000160a0     41c0          add     a14,a0
    4130 000160b0     2600          sll     16,a0                   ;X
    4131                    
    4132 000160c0     4c41          move    a2,a1
    4133 000160d0     2601          sll     16,a1                   ;Y
    4134                    
    4135 000160e0     09e2          movi    flash1,a2
         000160f0 00000000! 
    4136 00016110     09c3          movi    290,a3
         00016120     0122  
    4137 00016130     09e4          movi    DMAWNZ|M_3DQ|M_NOCOLL|M_NOSCALE,a4
         00016140 00009842  
    4138 00016160     09c5          movi    CLSDEAD,a5
         00016170     2000  
    4139 00016180     56c6          clr     a6
    4140 00016190     56e7          clr     a7
    4141 000161a0     0d5f          calla   BEGINOBJ2
         000161b0 00000000! 
    4142 000161d0     09e1          movi    gndpos_t,a1
         000161e0 00000000! 
    4143 00016200     b228          move    a1,*a8(ODATA_p),L
         00016210     01c0  
    4144                    
    4145 00016220     09e9          movi    jcbqf_l,a9
         00016230 00016330' 
    4146 00016250     1820          movk    1,a0
    4147 00016260     0d3f          callr   rnd
         00016270     fc2c  
    4148 00016280     cb03          jrnz    jcbq1
    4149 00016290     09e9          movi    jcbqf2_l,a9
         000162a0 00016470' 
    4150 000162c0           jcbq1
    4151 000162c0                   SLEEPK  2
    4152 00016300     c080          jauc    FRQDELDIE
         00016310 00000000! 
    4153                    
    4154                    
    4155 00016330           jcbqf_l LW      flash2,2
    4156 00016360                   LW      flash3,2
    4157 00016390                   LW      flash3a,2
    4158 000163c0                   LW      flash3,2
    4159 000163f0                   LW      flash2,2
    4160 00016420                   LWL0    flash1,2
    4161                    
    4162 00016470           jcbqf2_l        LW      flash4,2
    4163 000164a0                   LW      flash5,1
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   97

    4164 000164d0                   LW      flash6,1
    4165 00016500                   LW      flash5,1
    4166 00016530                   LWL0    flash4,2
    4167                    
    4168                    
    4169                    
    4170 00016580            SUBR   seq_slamball
    4171                    
    4172                    
    4173 00016580     05a0          move    @ballpnum,a0
         00016590 00000030- 
    4174 000165b0     b5a1          move    *a13(plyr_num),a1
         000165c0     0100  
    4175 000165d0     4801          cmp     a0,a1
    4176 000165e0     cb00          jrne    ufgjx                   ;I don't have it?
         000165f0     011b  
    4177                    
    4178 00016600     1820          movk    1,a0
    4179 00016610     0580          move    a0,@slamming
         00016620 00000190- 
    4180                    
    4181 00016640     07a5          move    @ballobj_p,a5,L
         00016650 00000010- 
    4182                    
    4183 00016670     b6a1          move    *a5(OIMG),a1,L          ;0CHonvert ball from player relative
         00016680     0170  
    4184 00016690     b421          move    *a1(IANIOFFX),a1
         000166a0     0020  
    4185 000166b0     2601          sll     16,a1
    4186 000166c0     b225          move    a1,*a5(OXANI),L
         000166d0     01e0  
    4187                    
    4188                    
    4189                    
    4190 000166e0     b5a7          move    *a13(plyr_ohoopx),a7    ;>Set ball over rim
         000166f0     02d0  
    4191 00016700     14c7          subk    6,a7
    4192                    
    4193                        
    4194 00016710     09c0          movi    35,a0
         00016720     0023  
    4195 00016730     0d5f          calla   RNDPER
         00016740 00000000! 
    4196 00016760     c207          jrls    ufgjnoadjst
    4197                    
    4198 00016770           ufgjyes
    4199 00016770     b5a0          move    *a13(plyr_num),a0
         00016780     0100  
    4200 00016790     0b40          cmpi    2,a0
         000167a0     fffd  
    4201 000167b0     c401          jrlt    ufgjnofix
    4202 000167c0     1127          addk    9,a7
    4203 000167d0           ufgjnofix
    4204 000167d0     14c7          subk    6,a7
    4205                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   98

    4206 000167e0           ufgjnoadjst
    4207                    
    4208 000167e0     b0e5          move    a7,*a5(OXPOS)
         000167f0     0090  
    4209                    
    4210 00016800     09ce          movi    HOOPY-8,a14
         00016810     ff80  
    4211 00016820     b1c5          move    a14,*a5(OYPOS)
         00016830     00b0  
    4212 00016840     09ce          movi    CZMID,a14
         00016850     0492  
    4213 00016860     b1c5          move    a14,*a5(OZPOS)
         00016870     00d0  
    4214                    
    4215                    
    4216 00016880     09c0          movi    25,a0
         00016890     0019  
    4217 000168a0     0d5f          calla   RNDPER
         000168b0 00000000! 
    4218 000168d0     c233          jrls    ufgjdunknorm
    4219                                                            ;>Missed dunk
    4220 000168e0     b5a0          move    *a13(plyr_ptsdown),a0
         000168f0     0440  
    4221 00016900     1440          subk    2,a0
    4222 00016910     c52f          jrge    ufgjdunknorm            ;I'm loosing by 5?
    4223                    
    4224                    
    4225 00016920     05ae          move    @plyrnumonfire,a14
         00016930 00000000- 
    4226                    
    4227                    
    4228 00016950     cf2b          jrnn    ufgjdunknorm
    4229                    
    4230 00016960     09e0          movi    missd1_snd,a0
         00016970 000002c0' 
    4231 00016990     0d5f          calla   snd_play1
         000169a0 00000000! 
    4232 000169c0     09e0          movi    boo1_snd,a0
         000169d0 000004c0' 
    4233 000169f0     0d5f          calla   snd_play1
         00016a00 00000000! 
    4234 00016a20     09e0          movi    cheer1_snd,a0
         00016a30 00000400' 
    4235 00016a50     0d5f          calla   snd_play1
         00016a60 00000000! 
    4236                    
    4237 00016a80     09e0          movi    03ffffH,a0
         00016a90 0003ffff  
    4238 00016ab0     0d3f          callr   rnd
         00016ac0     fba7  
    4239 00016ad0     0d00          subi    020000H,a0
         00016ae0 fffdffff  
    4240 00016b00     4c02          move    a0,a2
    4241 00016b10     09e0          movi    01ffffH,a0
         00016b20 0001ffff  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   99

    4242 00016b40     0d3f          callr   rnd
         00016b50     fb9e  
    4243 00016b60     0b00          addi    04000H,a0
         00016b70     4000  
    4244 00016b80     b5a1          move    *a13(plyr_num),a1
         00016b90     0100  
    4245 00016ba0     1441          subk    2,a1
    4246 00016bb0     c501          jrge    ufgjt2
    4247 00016bc0     03a0          neg     a0
    4248 00016bd0     09e3  ufgjt2  movi    -GRAVB*40,a3            ;Up
         00016be0 fffa1000  
    4249 00016c00     c044          jruc    ufgjsetxyz
    4250                    
    4251 00016c10           ufgjdunknorm
    4252                    
    4253 00016c10     b5a0          move    *a13(plyr_o1dist),a0
         00016c20     0310  
    4254 00016c30     0b40          cmpi    35,a0
         00016c40     ffdc  
    4255 00016c50     c405          jrlt    ufgjdlvr
    4256 00016c60     b5a0          move    *a13(plyr_o2dist),a0
         00016c70     0330  
    4257 00016c80     0b40          cmpi    35,a0
         00016c90     ffdc  
    4258 00016ca0     c72e          jrgt    ufgjnodlvr
    4259 00016cb0           ufgjdlvr
    4260 00016cb0     b5a0          move    *a13(plyr_num),a0
         00016cc0     0100  
    4261 00016cd0     0b40          cmpi    2,a0
         00016ce0     fffd  
    4262 00016cf0     c40f          jrlt    ufgjcktm2
    4263                    
    4264                    
    4265 00016d00     07a0          move    @plyrproc_t,a0,L
         00016d10 00000000! 
    4266 00016d30     b401          move    *a0(plyr_stagcnt),a1
         00016d40     0430  
    4267 00016d50     07a2          move    @plyrproc_t+32,a2,L
         00016d60 00000020! 
    4268 00016d80     b442          move    *a2(plyr_stagcnt),a2
         00016d90     0430  
    4269 00016da0     4041          add     a2,a1
    4270 00016db0     0b41          cmpi    13,a1
         00016dc0     fff2  
    4271 00016dd0     c41b          jrlt    ufgjnodlvr
    4272 00016de0     c00e          jruc    ufgjdlv
    4273 00016df0           ufgjcktm2
    4274 00016df0     07a0          move    @plyrproc_t+64,a0,L
         00016e00 00000040! 
    4275 00016e20     b401          move    *a0(plyr_stagcnt),a1
         00016e30     0430  
    4276 00016e40     07a2          move    @plyrproc_t+96,a2,L
         00016e50 00000060! 
    4277 00016e70     b442          move    *a2(plyr_stagcnt),a2
         00016e80     0430  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  100

    4278 00016e90     4041          add     a2,a1
    4279 00016ea0     0b41          cmpi    13,a1
         00016eb0     fff2  
    4280 00016ec0     c40c          jrlt    ufgjnodlvr
    4281 00016ed0           ufgjdlv
    4282 00016ed0     09c0          movi    350,a0
         00016ee0     015e  
    4283 00016ef0     0d5f          calla   RNDPER
         00016f00 00000000! 
    4284 00016f20     c306          jrhi    ufgjnodlvr
    4285 00016f30     09e0          movi    facial_snd,a0
         00016f40 00000000' 
    4286 00016f60     0d5f          calla   snd_play1ovrp
         00016f70 00000000! 
    4287 00016f90           ufgjnodlvr
    4288                    
    4289 00016f90                   CREATE0 ufgjdunk_cheer
    4290 00017000     5600          clr     a0
    4291 00017010     5642          clr     a2
    4292 00017020     09e3          movi    GRAVB*4,a3
         00017030 00009800  
    4293 00017050     b205  ufgjsetxyz      move    a0,*a5(OXVEL),L
         00017060     0020  
    4294 00017070     b245          move    a2,*a5(OZVEL),L
         00017080     0060  
    4295 00017090     b265          move    a3,*a5(OYVEL),L
         000170a0     0040  
    4296                    
    4297                    
    4298 000170b0     b701          move    *a8(OXVEL),a1,L
         000170c0     0020  
    4299 000170d0     b702          move    *a8(OZVEL),a2,L
         000170e0     0060  
    4300                    
    4301 000170f0     9490          move    *b4+,b0                 ;Get # ticks we hang
    4302 00017100     4e10          move    b0,a0
    4303 00017110     b00d          move    a0,*a13(plyr_hangcnt)
         00017120     0410  
    4304 00017130     1440          subk    2,a0
    4305 00017140     c442          jrlt    ufgjnohang
    4306 00017150     b5a1          move    *a13(plyr_seq),a1
         00017160     0170  
    4307 00017170     0b41          cmpi    DUNKX3_SEQ,a1
         00017180     ff80  
    4308 00017190     cb11          jrnz    ufgjdck1
    4309 000171a0     b501          move    *a8(OYPOS),a1
         000171b0     00b0  
    4310 000171c0     10a1          addk    5,a1
    4311 000171d0     b028          move    a1,*a8(OYPOS)
         000171e0     00b0  
    4312 000171f0     b501          move    *a8(OXPOS),a1
         00017200     0090  
    4313 00017210     b702          move    *a8(OXVEL),a2,L
         00017220     0020  
    4314 00017230     cf02          jrnn    ufgjfix1
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  101

    4315 00017240     0be1          subi    02eH,a1                 ;2c
         00017250     ffd1  
    4316 00017260     0b01  ufgjfix1        addi    016H,a1
         00017270     0016  
    4317 00017280     b028          move    a1,*a8(OXPOS)
         00017290     0090  
    4318 000172a0     c028          jruc    ufgjfix2
    4319 000172b0           ufgjdck1
    4320 000172b0     0b41          cmpi    DUNKX_SEQ,a1
         000172c0     ff82  
    4321 000172d0     cb11          jrnz    ufgjdck2
    4322 000172e0     b501          move    *a8(OYPOS),a1
         000172f0     00b0  
    4323 00017300     1121          addk    9,a1
    4324 00017310     b028          move    a1,*a8(OYPOS)
         00017320     00b0  
    4325 00017330     b501          move    *a8(OXPOS),a1
         00017340     0090  
    4326 00017350     b702          move    *a8(OXVEL),a2,L
         00017360     0020  
    4327 00017370     cf02          jrnn    ufgjfix1a
    4328 00017380     0be1          subi    02eH,a1                 ;2c
         00017390     ffd1  
    4329 000173a0     0b01  ufgjfix1a       addi    018H,a1
         000173b0     0018  
    4330 000173c0     b028          move    a1,*a8(OXPOS)
         000173d0     0090  
    4331 000173e0     c014          jruc    ufgjfix2
    4332 000173f0           ufgjdck2
    4333 000173f0     0b41          cmpi    DUNKX2_SEQ,a1
         00017400     ff81  
    4334 00017410     cb11          jrnz    ufgjdck3
    4335 00017420     b501          move    *a8(OYPOS),a1
         00017430     00b0  
    4336 00017440     1441          subk    2,a1
    4337 00017450     b028          move    a1,*a8(OYPOS)
         00017460     00b0  
    4338 00017470     b501          move    *a8(OXPOS),a1
         00017480     0090  
    4339 00017490     b702          move    *a8(OXVEL),a2,L
         000174a0     0020  
    4340 000174b0     cf02          jrnn    ufgjfix1b
    4341 000174c0     0be1          subi    02eH,a1                 ;2c
         000174d0     ffd1  
    4342 000174e0     0b01  ufgjfix1b       addi    016H,a1
         000174f0     0016  
    4343 00017500     b028          move    a1,*a8(OXPOS)
         00017510     0090  
    4344 00017520     0300          jruc    ufgjfix2
    4345 00017530           ufgjdck3
    4346                    
    4347 00017530           ufgjfix2
    4348 00017530     5621          clr     a1                      ;0 velocity
    4349 00017540     5642          clr     a2
    4350 00017550     b228          move    a1,*a8(OYVEL),L
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  102

         00017560     0040  
    4351 00017570     2be1  ufgjnohang      sra     1,a1
    4352 00017580     2be2          sra     1,a2
    4353 00017590     b228          move    a1,*a8(OXVEL),L
         000175a0     0020  
    4354 000175b0     b248          move    a2,*a8(OZVEL),L
         000175c0     0060  
    4355                    
    4356 000175d0     b5a1          move    *a13(plyr_num),a1
         000175e0     0100  
    4357 000175f0     0581          move    a1,@ballpnumshot
         00017600 00000050- 
    4358 00017620     0581          move    a1,@ballpnumlast
         00017630 00000040- 
    4359 00017650     09c0          movi    -1,a0
         00017660     ffff  
    4360 00017670     0580          move    a0,@ballpnum            ;No owner
         00017680 00000030- 
    4361 000176a0     5600          clr     a0
    4362 000176b0     0580          move    a0,@ballscorezhit
         000176c0 000000a0- 
    4363 000176e0     0580          move    a0,@ballrimhitcnt
         000176f0 000000b0- 
    4364 00017710     0580          move    a0,@ballbbhitcnt
         00017720 000000c0- 
    4365 00017740     b00d          move    a0,*a13(plyr_ownball)
         00017750     0260  
    4366 00017760     09c0          movi    TSEC+20,a0
         00017770     0049  
    4367 00017780     b00d          move    a0,*a13(plyr_shtdly)
         00017790     02b0  
    4368                    
    4369 000177a0     0960          rets
    4370                    
    4371 000177b0     1214  ufgjx   addk    16,b4
    4372 000177c0     0960          rets
    4373                    
    4374 000177d0           ufgjdunk_cheer
    4375 000177d0                   SLEEPK  15
    4376 00017810     09e0          movi    cheer1_snd,a0
         00017820 00000400' 
    4377 00017840     0d5f          calla   snd_play1
         00017850 00000000! 
    4378 00017870     09e0          movi    cheer2_snd,a0
         00017880 00000440' 
    4379 000178a0     0d5f          calla   snd_play1
         000178b0 00000000! 
    4380                     
    4381 000178d0                   SLEEP   5*60
    4382                    
    4383 00017920     5600          clr     a0
    4384 00017930     0580          move    a0,@slamming
         00017940 00000190- 
    4385                    
    4386 00017960                   DIE
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  103

    4387                    
    4388                    
    4389                    
    4390                    
    4391 00017990            SUBR   seq_push
    4392                    
    4393                    
    4394 00017990                   PUSH    a11
    4395                    
    4396 000179a0     b5a3          move    *a13(plyr_dir),a3
         000179b0     03d0  
    4397                    
    4398 000179c0     b5ae          move    *a13(plyr_o1dist),a14
         000179d0     0310  
    4399 000179e0     0bee          subi    50,a14
         000179f0     ffcd  
    4400 00017a00     c70d          jrgt    rnlwo1far                       ;Too far?
    4401 00017a10     56a5          clr     a5                      ;O1
    4402 00017a20     b5a2          move    *a13(plyr_o1dir),a2
         00017a30     0300  
    4403 00017a40     4462          sub     a3,a2
    4404 00017a50     0382          abs     a2
    4405 00017a60     0b42          cmpi    040H,a2
         00017a70     ffbf  
    4406 00017a80     c603          jrle    rnlwo1dsml
    4407 00017a90     0be2          subi    080H,a2
         00017aa0     ff7f  
    4408 00017ab0     0382          abs     a2
    4409 00017ac0     1402  rnlwo1dsml      subk    32,a2                   ;16
    4410 00017ad0     c430          jrlt    rnlwpusho                       ;In front of me?
    4411                    
    4412 00017ae0           rnlwo1far
    4413                    
    4414 00017ae0     b5ae          move    *a13(plyr_o2dist),a14
         00017af0     0330  
    4415 00017b00     0bee          subi    50,a14
         00017b10     ffcd  
    4416 00017b20     c70d          jrgt    rnlwo2far                       ;Too far?
    4417 00017b30     1805          movk    32,a5                   ;O2
    4418 00017b40     b5a2          move    *a13(plyr_o2dir),a2
         00017b50     0320  
    4419 00017b60     4462          sub     a3,a2
    4420 00017b70     0382          abs     a2
    4421 00017b80     0b42          cmpi    040H,a2
         00017b90     ffbf  
    4422 00017ba0     c603          jrle    rnlwo2dsml
    4423 00017bb0     0be2          subi    080H,a2
         00017bc0     ff7f  
    4424 00017bd0     0382          abs     a2
    4425 00017be0     1402  rnlwo2dsml      subk    32,a2                   ;16
    4426 00017bf0     c41e          jrlt    rnlwpusho
    4427 00017c00           rnlwo2far
    4428                    
    4429                    
    4430 00017c00     b5ae          move    *a13(plyr_num),a14
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  104

         00017c10     0100  
    4431 00017c20     05a0          move    @PSTATUS,a0
         00017c30 00000000! 
    4432 00017c50     4bc0          btst    a14,a0
    4433 00017c60     ca00          jrz     rnlwx                   ;I am a stupid drone?  Drones never
         00017c70     014f  
    4434                                                            ;push human teammate!
    4435                    
    4436 00017c80     b5ae          move    *a13(plyr_tmdist),a14
         00017c90     02f0  
    4437 00017ca0     0bee          subi    50,a14
         00017cb0     ffcd  
    4438 00017cc0     c700          jrgt    rnlwx                   ;Too far?
         00017cd0     0149  
    4439 00017ce0     09c5          movi    -1,a5
         00017cf0     ffff  
    4440 00017d00     b5a2          move    *a13(plyr_tmdir),a2
         00017d10     02e0  
    4441 00017d20     4462          sub     a3,a2
    4442 00017d30     0382          abs     a2
    4443 00017d40     0b42          cmpi    040H,a2
         00017d50     ffbf  
    4444 00017d60     c603          jrle    rnlwtmdsml
    4445 00017d70     0be2          subi    080H,a2
         00017d80     ff7f  
    4446 00017d90     0382          abs     a2
    4447 00017da0     1602  rnlwtmdsml      subk    16,a2
    4448 00017db0     c402          jrlt    rnlwpush
    4449 00017dc0     c000          jruc    rnlwx
         00017dd0     0139  
    4450                    
    4451                    
    4452 00017de0           rnlwpusho
    4453                    
    4454                    
    4455                    
    4456 00017de0           rnlwpush
    4457 00017de0     05a0          move    @inbound,a0
         00017df0 00000130- 
    4458 00017e10     cf00          jrnn    rnlwx
         00017e20     0134  
    4459                    
    4460 00017e30     b5a0          move    *a13(plyr_num),a0       ;>Nail him
         00017e40     0100  
    4461                    
    4462 00017e50     4ca5          move    a5,a5
    4463 00017e60     cf07          jrnn    rnlwpush_op             ;Pushing opponent
    4464                    
    4465 00017e70                   XORK    1,a0                    ;Get teammate
    4466 00017e90     24a0          sll     5,a0
    4467 00017ea0     0b20          addi    plyrproc_t,a0
         00017eb0 00000000! 
    4468 00017ed0     c008          jruc    rnlwget_prc
    4469                    
    4470 00017ee0           rnlwpush_op
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  105

    4471                    
    4472                    
    4473 00017ee0     2fe0          srl     1,a0
    4474 00017ef0                   XORK    1,a0
    4475 00017f10     24c0          sll     6,a0                    ;*64
    4476 00017f20     0b20          addi    plyrproc_t,a0
         00017f30 00000000! 
    4477 00017f50     40a0          add     a5,a0
    4478                    
    4479 00017f60           rnlwget_prc
    4480 00017f60     8605          move    *a0,a5,L                ;A5=*O proc
    4481                    
    4482 00017f70     b4ae          move    *a5(plyr_seqflgs),a14
         00017f80     0180  
    4483 00017f90     09c0          movi    300,a0
         00017fa0     012c  
    4484 00017fb0     1e0e          btst    LAYUP_B,a14
    4485 00017fc0     cb10          jrnz    rnlwxz2
    4486                    
    4487 00017fd0     b4ae          move    *a5(plyr_seq),a14
         00017fe0     0170  
    4488 00017ff0     0b4e          cmpi    ELBO_SEQ,a14
         00018000     ffc6  
    4489 00018010     ca09          jrz     rnlwxz
    4490 00018020     0b4e          cmpi    ELBO2_SEQ,a14
         00018030     ffc5  
    4491 00018040     ca06          jrz     rnlwxz
    4492 00018050     0b4e          cmpi    REBOUND_SEQ,a14
         00018060     ffeb  
    4493 00018070     ca03          jrz     rnlwxz
    4494 00018080     0b4e          cmpi    REBOUNDA_SEQ,a14
         00018090     ffea  
    4495 000180a0     cb07          jrnz    rnlwskpck
    4496                    
    4497 000180b0           rnlwxz
    4498 000180b0     09c0          movi    150,a0                  ;200
         000180c0     0096  
    4499 000180d0           rnlwxz2                                 ;Layups 30%
    4500 000180d0     0d5f          calla   RNDPER
         000180e0 00000000! 
    4501 00018100     c200          jrls    rnlwx                   ;br=nope
         00018110     0105  
    4502 00018120           rnlwskpck
    4503                    
    4504 00018120     b6a2          move    *a5(PA8),a2,L
         00018130     00c0  
    4505 00018140     b440          move    *a2(OYPOS),a0
         00018150     00b0  
    4506 00018160     b501          move    *a8(OYPOS),a1
         00018170     00b0  
    4507 00018180     4401          sub     a0,a1
    4508                    
    4509 00018190     0b41          cmpi    054H,a1                 ;060H,5c,58
         000181a0     ffab  
    4510 000181b0     c700          jrgt    rnlwx                   ;Too far above me?
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  106

         000181c0     00fa  
    4511                    
    4512                    
    4513                    
    4514 000181d0     b5ae          move    *a13(plyr_num),a14
         000181e0     0100  
    4515 000181f0     05a0          move    @plyr_maxpower,a0
         00018200 00000000! 
    4516 00018220     4bc0          btst    a14,a0
    4517 00018230     ca02          jrz     rnlwnochng
    4518 00018240     1923          movk    9,a3
    4519 00018250     c004          jruc    rnlwmaxp
    4520 00018260           rnlwnochng
    4521 00018260     b7a0          move    *a13(plyr_attrib_p),a0,L
         00018270     0150  
    4522 00018280     b403          move    *a0(PAT_POWER),a3
         00018290     0150  
    4523 000182a0           rnlwmaxp
    4524 000182a0     0583          move    a3,@last_power          ;For later analysis
         000182b0 00000200- 
    4525                    
    4526 000182d0     b5a0          move    *a13(plyr_dir),a0
         000182e0     03d0  
    4527 000182f0     4c01          move    a0,a1
    4528 00018300     0b01          addi    040H,a1
         00018310     0040  
    4529 00018320     2721          sll     32-7,a1
    4530 00018330     2ce1          srl     32-7,a1
    4531 00018340     b025          move    a1,*a5(plyr_newdir)
         00018350     03e0  
    4532 00018360     0d3f          callr   sinecos_get
         00018370     f267  
    4533                    
    4534 00018380     2480          sll     4,a0                    ;*128
    4535 00018390     2481          sll     4,a1
    4536                    
    4537 000183a0     b6ae          move    *a5(plyr_attrib_p),a14,L
         000183b0     0150  
    4538 000183c0     b5ce          move    *a14(PAT_POWER),a14
         000183d0     0150  
    4539 000183e0     446e          sub     a3,a14
    4540 000183f0     4dc3          move    a14,a3
    4541 00018400     0b4e          cmpi    6,a14
         00018410     fff9  
    4542                    
    4543                    
    4544 00018420     c503          jrge    rnlwshortfal
    4545                    
    4546 00018430     2440          sll     2,a0                    ;*128
    4547 00018440     2441          sll     2,a1
    4548 00018450     c00a          jruc    rnlwsh1
    4549 00018460           rnlwshortfal
    4550 00018460                   PUSH    a0,a1
    4551 00018480     09e0          movi    push1_snd,a0
         00018490 00000640' 
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  107

    4552 000184b0     0d5f          calla   snd_play1
         000184c0 00000000! 
    4553 000184e0                   PULL    a0,a1
    4554 00018500           rnlwsh1
    4555 00018500     4c0b          move    a0,a11
    4556 00018510     b202          move    a0,*a2(OZVEL),L
         00018520     0060  
    4557 00018530     b222          move    a1,*a2(OXVEL),L
         00018540     0020  
    4558 00018550     b4a0          move    *a5(plyr_jmpcnt),a0
         00018560     0400  
    4559 00018570     cb12          jrnz    rnlwinjmp
    4560 00018580     1820          movk    1,a0
    4561 00018590     b005          move    a0,*a5(plyr_jmpcnt)
         000185a0     0400  
    4562 000185b0     09e0          movi    -GRAVB*18,a0            ;Up     ;19
         000185c0 fffd5400  
    4563 000185e0     05ae          move    @HCOUNT,a14
         000185f0 c00001c0  
    4564 00018610     0b8e          andi    07,a14
         00018620 fffffff8  
    4565 00018640     cb03          jrnz    rnlwnotlow
    4566 00018650     09e0          movi    -GRAVB*14,a0            ;Up
         00018660 fffdec00  
    4567 00018680           rnlwnotlow
    4568 00018680     b202          move    a0,*a2(OYVEL),L
         00018690     0040  
    4569 000186a0           rnlwinjmp
    4570 000186a0     1800          movk    32,a0
    4571 000186b0     0b43          cmpi    7,a3
         000186c0     fff8  
    4572 000186d0     c40c          jrlt    rnlwnotsml
    4573                    
    4574 000186e0     09c0          movi    650,a0
         000186f0     028a  
    4575 00018700     0d5f          calla   RNDPER
         00018710 00000000! 
    4576 00018730     c306          jrhi    rnlwnotsml
    4577                    
    4578                    
    4579 00018740     09e0          movi    -GRAVB*8,a0             ;7
         00018750 fffed000  
    4580 00018770     b202          move    a0,*a2(OYVEL),L
         00018780     0040  
    4581 00018790     1a00          movk    16,a0                   ;16
    4582 000187a0           rnlwnotsml
    4583                    
    4584 000187a0     b4ae          move    *a5(plyr_num),a14
         000187b0     0100  
    4585 000187c0     05a1          move    @plyr_maxpower,a1
         000187d0 00000000! 
    4586 000187f0     4bc1          btst    a14,a1
    4587 00018800     ca1c          jrz     rnlwnochng1
    4588 00018810     09e0          movi    -GRAVB*8,a0             ;7
         00018820 fffed000  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  108

    4589 00018840     b202          move    a0,*a2(OYVEL),L
         00018850     0040  
    4590 00018860     b640          move    *a2(OZVEL),a0,L
         00018870     0060  
    4591 00018880     2bc0          sra     2,a0
    4592 00018890     b202          move    a0,*a2(OZVEL),L
         000188a0     0060  
    4593 000188b0     b640          move    *a2(OXVEL),a0,L
         000188c0     0020  
    4594 000188d0     2bc0          sra     2,a0
    4595 000188e0     b202          move    a0,*a2(OXVEL),L
         000188f0     0020  
    4596                    
    4597 00018900     09e0          movi    push1_snd,a0
         00018910 00000640' 
    4598 00018930     0d5f          calla   snd_play1
         00018940 00000000! 
    4599                    
    4600 00018960     1a00          movk    16,a0
    4601 00018970     05a1          move    @HCOUNT,a1
         00018980 c00001c0  
    4602 000189a0     1fe1          btst    0,a1
    4603 000189b0     ca01          jrz     rnlwnochng1
    4604 000189c0     1b00          movk    24,a0                   ;16
    4605 000189d0           rnlwnochng1
    4606 000189d0     b005          move    a0,*a5(plyr_stagcnt)
         000189e0     0430  
    4607                    
    4608 000189f0     05a0          move    @ballpnum,a0
         00018a00 00000030- 
    4609 00018a20     b4a1          move    *a5(plyr_num),a1
         00018a30     0100  
    4610 00018a40     4801          cmp     a0,a1
    4611 00018a50     cb36          jrne    rnlwnobl                        ;Doesn't have ball?
    4612                    
    4613                    
    4614 00018a60     1920          movk    PS_STEALS,a0
    4615 00018a70     b5a1          move    *a13(plyr_num),a1
         00018a80     0100  
    4616 00018a90     0d5f          calla   inc_player_stat
         00018aa0 00000000! 
    4617                    
    4618 00018ac0     07a4          move    @ballobj_p,a4,L
         00018ad0 00000010- 
    4619 00018af0     09e2          movi    01ffffH,a2              ;>Give rnd velocity
         00018b00 0001ffff  
    4620 00018b20     09e3          movi    010000H,a3
         00018b30 00010000  
    4621 00018b50     4c40          move    a2,a0
    4622 00018b60     0d3f          callr   rnd
         00018b70     f99c  
    4623 00018b80     4460          sub     a3,a0
    4624 00018b90     b204          move    a0,*a4(OXVEL),L
         00018ba0     0020  
    4625 00018bb0     4c40          move    a2,a0
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  109

    4626 00018bc0     0d3f          callr   rnd
         00018bd0     f996  
    4627 00018be0     4460          sub     a3,a0
    4628                    
    4629                    
    4630 00018bf0     b4ae          move    *a5(plyr_num),a14
         00018c00     0100  
    4631 00018c10     24ae          sll     5,a14
    4632 00018c20     0b2e          addi    plyrobj_t,a14
         00018c30 00000000! 
    4633 00018c50     87ce          move    *a14,a14,L
    4634 00018c60     b5c1          move    *a14(OZPOS),a1
         00018c70     00d0  
    4635 00018c80     0b41          cmpi    0410H,a1
         00018c90     fbef  
    4636 00018ca0     c70f          jrgt    rnlwnot_rear
    4637                    
    4638 00018cb0     09c0          movi    40,a0
         00018cc0     0028  
    4639 00018cd0     b005          move    a0,*a5(plyr_shtdly)     ;can't scoop up ball
         00018ce0     02b0  
    4640                    
    4641 00018cf0     09c0          movi    -1,a0
         00018d00     ffff  
    4642 00018d10     0580          move    a0,@ballpnum
         00018d20 00000030- 
    4643 00018d40     0580          move    a0,@ballpnumlast
         00018d50 00000040- 
    4644                    
    4645 00018d70     09e0          movi    [2,0],a0
         00018d80 00020000  
    4646 00018da0           rnlwnot_rear
    4647 00018da0     b204          move    a0,*a4(OZVEL),L
         00018db0     0060  
    4648 00018dc0           rnlwnobl
    4649 00018dc0     b4ae          move    *a5(plyr_num),a14
         00018dd0     0100  
    4650 00018de0     24ae          sll     5,a14
    4651 00018df0     0b2e          addi    plyrobj_t,a14
         00018e00 00000000! 
    4652 00018e20     87ce          move    *a14,a14,L
    4653 00018e30     b5c1          move    *a14(OZPOS),a1
         00018e40     00d0  
    4654 00018e50     0b41          cmpi    0410H,a1
         00018e60     fbef  
    4655 00018e70     c708          jrgt    rnlwnot_rear2
    4656                    
    4657 00018e80     4d6b          move    a11,a11
    4658 00018e90     cf06          jrnn    rnlwnot_rear2
    4659                    
    4660 00018ea0     09e0          movi    intostands,a0
         00018eb0 00000100' 
    4661 00018ed0     0d5f          calla   snd_play1
         00018ee0 00000000! 
    4662                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  110

    4663 00018f00           rnlwnot_rear2
    4664                    
    4665 00018f00     b5a0          move    *a13(plyr_num),a0       ;If on fire, don't use turbo on push
         00018f10     0100  
    4666 00018f20     05a1          move    @plyrnumonfire,a1
         00018f30 00000000- 
    4667 00018f50     4801          cmp     a0,a1
    4668 00018f60     ca20          jrz     rnlwx
    4669                    
    4670 00018f70     b7a2          move    *a13(plyr_PDATA_p),a2,L
         00018f80     0130  
    4671 00018f90     b441          move    *a2(ply_turbo),a1
         00018fa0     0040  
    4672 00018fb0     0b41          cmpi    10,a1
         00018fc0     fff5  
    4673 00018fd0     c40b          jrlt    rnlwclrbl
    4674 00018fe0     14e1          subk    7,a1
    4675 00018ff0     b022          move    a1,*a2(ply_turbo)
         00019000     0040  
    4676 00019010     b640          move    *a2(ply_meter_imgs+40h),a0,L
         00019020     00c0  
    4677 00019030     b401          move    *a0(OFSET),a1           ;Shrink meter
         00019040     0100  
    4678 00019050     10e1          addk    7,a1
    4679 00019060     b020          move    a1,*a0(OFSET)
         00019070     0100  
    4680 00019080     c00e          jruc    rnlwx
    4681                    
    4682 00019090           rnlwclrbl
    4683 00019090     b7a2          move    *a13(plyr_PDATA_p),a2,L
         000190a0     0130  
    4684 000190b0     b44e          move    *a2(ply_turbo),a14
         000190c0     0040  
    4685 000190d0     5600          clr     a0
    4686 000190e0     b002          move    a0,*a2(ply_turbo)
         000190f0     0040  
    4687 00019100     b640          move    *a2(ply_meter_imgs+40h),a0,L
         00019110     00c0  
    4688 00019120     b401          move    *a0(OFSET),a1           ;Shrink meter
         00019130     0100  
    4689 00019140     41c1          add     a14,a1
    4690 00019150     b020          move    a1,*a0(OFSET)
         00019160     0100  
    4691                    
    4692                    
    4693 00019170           rnlwx   PULL    a11
    4694 00019180     0960          rets
    4695                    
    4696                    
    4697                    
    4698 00019190            SUBR   seq_elbo
    4699                    
    4700 00019190     b5a4          move    *a13(plyr_num),a4
         000191a0     0100  
    4701 000191b0     2fe4          srl     1,a4
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  111

    4702 000191c0                   XORK    1,a4
    4703 000191e0     24c4          sll     6,a4                    ;*64
    4704 000191f0     0b24          addi    plyrproc_t,a4
         00019200 00000000! 
    4705                    
    4706 00019220     b5ae          move    *a13(plyr_o1dist),a14
         00019230     0310  
    4707 00019240     0bee          subi    40,a14
         00019250     ffd7  
    4708 00019260     c50a          jrge    hrmao1far                       ;Too far?
    4709                    
    4710 00019270     05ae          move    @HCOUNT,a14
         00019280 c00001c0  
    4711 000192a0     1fee          btst    0,a14
    4712 000192b0     ca05          jrz     hrmao1far                       ;Skip? (50%)
    4713                    
    4714 000192c0     8685          move    *a4,a5,L                ;A5=*O proc
    4715 000192d0     b5a0          move    *a13(plyr_o1dir),a0
         000192e0     0300  
    4716 000192f0     0d3f          callr   hrmaelbo
         00019300     0011  
    4717 00019310           hrmao1far
    4718                    
    4719 00019310     b5ae          move    *a13(plyr_o2dist),a14
         00019320     0330  
    4720 00019330     0bee          subi    40,a14
         00019340     ffd7  
    4721 00019350     c50b          jrge    hrmax                   ;Too far?
    4722                    
    4723 00019360     05ae          move    @HCOUNT,a14
         00019370 c00001c0  
    4724 00019390     1fee          btst    0,a14
    4725 000193a0     ca06          jrz     hrmax                   ;Skip? (50%)
    4726                    
    4727 000193b0     1004          addk    32,a4
    4728 000193c0     8685          move    *a4,a5,L                ;A5=*O proc
    4729 000193d0     b5a0          move    *a13(plyr_o2dir),a0
         000193e0     0320  
    4730 000193f0     0d3f          callr   hrmaelbo
         00019400     0001  
    4731                    
    4732 00019410     0960  hrmax   rets
    4733                    
    4734                    
    4735 00019420           hrmaelbo
    4736 00019420     b6a2          move    *a5(PA8),a2,L           ;>Make opponent fly
         00019430     00c0  
    4737                    
    4738 00019440     4c01          move    a0,a1
    4739 00019450     0b01          addi    040H,a1
         00019460     0040  
    4740 00019470     2721          sll     32-7,a1
    4741 00019480     2ce1          srl     32-7,a1
    4742 00019490     b025          move    a1,*a5(plyr_newdir)
         000194a0     03e0  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  112

    4743 000194b0     0d3f          callr   sinecos_get
         000194c0     f152  
    4744                    
    4745 000194d0     24a0          sll     5,a0                    ;*32
    4746 000194e0     24a1          sll     5,a1
    4747 000194f0     b202          move    a0,*a2(OZVEL),L
         00019500     0060  
    4748 00019510     b222          move    a1,*a2(OXVEL),L
         00019520     0020  
    4749 00019530     b4a0          move    *a5(plyr_jmpcnt),a0
         00019540     0400  
    4750 00019550     cb1e          jrnz    hrmainjmp
    4751 00019560     1820          movk    1,a0
    4752 00019570     b005          move    a0,*a5(plyr_jmpcnt)
         00019580     0400  
    4753 00019590     09e0          movi    -GRAVB*12,a0            ;Up 15
         000195a0 fffe3800  
    4754 000195c0     b202          move    a0,*a2(OYVEL),L
         000195d0     0040  
    4755                    
    4756 000195e0     b4ae          move    *a5(plyr_num),a14
         000195f0     0100  
    4757 00019600     05a1          move    @plyr_maxpower,a1
         00019610 00000000! 
    4758 00019630     4bc1          btst    a14,a1
    4759 00019640     ca0f          jrz     hrmainjmp
    4760 00019650     09e0          movi    -GRAVB*8,a0             ;7
         00019660 fffed000  
    4761 00019680     b202          move    a0,*a2(OYVEL),L
         00019690     0040  
    4762 000196a0     1b00          movk    24,a0                   ;16
    4763 000196b0     05a1          move    @HCOUNT,a1
         000196c0 c00001c0  
    4764 000196e0     1fe1          btst    0,a1
    4765 000196f0     ca01          jrz     hrmako
    4766 00019700     1a00          movk    16,a0                   ;16
    4767 00019710           hrmako
    4768 00019710     b005          move    a0,*a5(plyr_stagcnt)
         00019720     0430  
    4769 00019730     0960          rets
    4770                    
    4771 00019740           hrmainjmp
    4772 00019740     1800          movk    32,a0
    4773 00019750     b005          move    a0,*a5(plyr_stagcnt)
         00019760     0430  
    4774                    
    4775 00019770     0960          rets
    4776                    
    4777                    
    4778                    
    4779              0100  GAME_QTR        equ     PDATA
    4780                    
    4781                            .asg    22,DIAM
    4782                    
    4783 00019780            SUBRP  no_good_check
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  113

    4784                    
    4785 00019780     05a0          move    @gmqrtr,a0
         00019790 00000000! 
    4786 000197b0     b00d          move    a0,*a13(GAME_QTR)
         000197c0     0100  
    4787                    
    4788 000197d0           urynloop
    4789 000197d0                   SLEEPK  1
    4790                    
    4791 00019810     07a0          move    @game_time,a0,L         ;If at beginning of
         00019820 00000000! 
    4792 00019840     0b60          cmpi    02050400H,a0            ;qrtr, no speech!
         00019850 fdfafbff  
    4793 00019870     c720          jrgt    urynsnuffit
    4794                    
    4795 00019880     05a0          move    @gmqrtr,a0
         00019890 00000000! 
    4796 000198b0     b5a1          move    *a13(GAME_QTR),a1
         000198c0     0100  
    4797 000198d0     4801          cmp     a0,a1
    4798 000198e0     cb19          jrne    urynsnuffit
    4799                    
    4800 000198f0     b500          move    *a8(OYPOS),a0
         00019900     00b0  
    4801 00019910     0b40          cmpi    HOOPY+15,a0
         00019920     0068  
    4802 00019930     c711          jrgt    urynno_good
    4803                    
    4804 00019940     b500          move    *a8(OXPOS),a0
         00019950     0090  
    4805 00019960     b501          move    *a8(OXANI+10h),a1
         00019970     01f0  
    4806 00019980     4020          add     a1,a0
    4807 00019990     4560          sub     a11,a0
    4808 000199a0     0380          abs     a0
    4809 000199b0     16c0          subk    DIAM,a0
    4810 000199c0     c708          jrgt    urynno_good
    4811                    
    4812                    
    4813 000199d0     b500          move    *a8(OZPOS),a0
         000199e0     00d0  
    4814 000199f0     0be0          subi    CZMID,a0                ;0CHheck backboard
         00019a00     fb6d  
    4815 00019a10     0380          abs     a0
    4816 00019a20     16c0          subk    DIAM,a0
    4817 00019a30     c701          jrgt    urynno_good
    4818                    
    4819 00019a40     c0d8          jruc    urynloop
    4820                    
    4821                    
    4822 00019a50           urynno_good
    4823 00019a50     0d5f          calla   nogood_speech
         00019a60 00000000! 
    4824                    
    4825 00019a80           urynsnuffit
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 05 00:12:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  114

    4826 00019a80                   DIE
    4827                    
    4828                            .end

 No Errors,  No Warnings
